"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[5399],{4214:function(e,t,n){n.d(t,{Z:function(){return r}});var a=n(7294),i=n(1736);function r(e){var t=e.children,n=e.language;return a.createElement(i.Z,{className:"language-"+(n||"csharp")},t.replace(/\t/g,"    "))}},1016:function(e,t,n){n.d(t,{Z:function(){return s}});var a=n(7462),i=n(3366),r=n(7294),l=["children"];function s(e){var t=e.children,n=(0,i.Z)(e,l);return r.createElement("div",(0,a.Z)({role:"tabpanel"},n),t)}},250:function(e,t,n){n.d(t,{Z:function(){return c}});var a=n(7294),i=n(5773),r=n(6010),l="tabItem_V91s",s="tabItemActive_JsUu",o="tab_ntnM";var u=37,g=39;function c(e){var t=e.lazy,n=e.defaultValue,c=e.values,d=e.groupId,m=(0,i.UB)(),b=m.tabGroupChoices,p=m.setTabGroupChoices,h=(0,a.useState)(n),f=h[0],v=h[1],y=a.Children.toArray(e.children),C=[];if(null!=d){var N=b[d];null!=N&&N!==f&&c.some((function(e){return e.value===N}))&&v(N)}var k=function(e){var t=e.currentTarget,n=C.indexOf(t),a=c[n].value;v(a),null!=d&&(p(d,a),setTimeout((function(){var e,n,a,i,r,l,o,u;(e=t.getBoundingClientRect(),n=e.top,a=e.left,i=e.bottom,r=e.right,l=window,o=l.innerHeight,u=l.innerWidth,n>=0&&r<=u&&i<=o&&a>=0)||(t.scrollIntoView({block:"center",behavior:"smooth"}),t.classList.add(s),setTimeout((function(){return t.classList.remove(s)}),2e3))}),150))},T=function(e){var t;switch(e.keyCode){case g:var n=C.indexOf(e.target)+1;t=C[n]||C[0];break;case u:var a=C.indexOf(e.target)-1;t=C[a]||C[C.length-1];break;default:return}t.focus()},w=function(e,t){return t.value===e||t.values&&-1!=t.values.indexOf(e)};return a.createElement("div",{className:"tabs-container"},a.createElement("ul",{role:"tablist","aria-orientation":"horizontal",className:"tabs"},c.map((function(e){var t=e.value,n=e.label;return a.createElement("li",{role:"tab",tabIndex:f===t?0:-1,"aria-selected":f===t,className:(0,r.Z)("tabs__item",l,{"tabs__item--active":f===t}),key:t,ref:function(e){return e&&C.push(e)},onKeyDown:T,onFocus:k,onClick:k},n)}))),t?a.cloneElement(y.find((function(e){return w(f,e.props)})),{className:o}):a.createElement("div",null,y.map((function(e,t){return a.cloneElement(e,{key:t,hidden:!w(f,e.props),className:o})}))),a.createElement("br",null))}},1707:function(e,t,n){n.r(t),n.d(t,{contentTitle:function(){return c},default:function(){return p},frontMatter:function(){return g},metadata:function(){return d},toc:function(){return m}});var a=n(7462),i=n(3366),r=(n(7294),n(3905)),l=n(250),s=n(1016),o=(n(4996),n(4214)),u=["components"],g={},c="Targetable Abilities",d={unversionedId:"dev/items/abilities/targetable-abilities",id:"dev/items/abilities/targetable-abilities",title:"Targetable Abilities",description:"Making abilities targetable",source:"@site/docs/dev/items/abilities/targetable-abilities.mdx",sourceDirName:"dev/items/abilities",slug:"/dev/items/abilities/targetable-abilities",permalink:"/RogueLibs/docs/dev/items/abilities/targetable-abilities",editUrl:"https://github.com/SugarBarrel/RogueLibs/edit/main/website/docs/dev/items/abilities/targetable-abilities.mdx",tags:[],version:"current",frontMatter:{},sidebar:"documentationSidebar",previous:{title:"Chargeable Abilities",permalink:"/RogueLibs/docs/dev/items/abilities/chargeable-abilities"},next:{title:"Creating a Custom Trait",permalink:"/RogueLibs/docs/dev/traits/create-trait"}},m=[{value:"Making abilities targetable",id:"making-targetable",children:[],level:2},{value:"Examples",id:"examples",children:[],level:2}],b={toc:m};function p(e){var t=e.components,n=(0,i.Z)(e,u);return(0,r.kt)("wrapper",(0,a.Z)({},b,n,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("h1",{id:"targetable-abilities"},"Targetable Abilities"),(0,r.kt)("h2",{id:"making-targetable"},"Making abilities targetable"),(0,r.kt)("p",null,"Just implement the ",(0,r.kt)("inlineCode",{parentName:"p"},"IAbilityTargetable")," interface in your ability's class:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-csharp",metastring:'title="MyTargetableAbility.cs"',title:'"MyTargetableAbility.cs"'},"// highlight-next-line\npublic class MyTargetableAbility : CustomAbility, IAbilityTargetable\n{\n    // highlight-next-line\n    public PlayfieldObject FindTarget() { /* ... */ }\n}\n")),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"FindTarget")," determines the closest target, that the ability can be used on. An ability indicator will be displayed over that object. If the ability cannot be used right now, you should return ",(0,r.kt)("inlineCode",{parentName:"p"},"null"),"."),(0,r.kt)("p",null,"Then, you can use ",(0,r.kt)("inlineCode",{parentName:"p"},"CurrentTarget")," in any of the methods:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-csharp"},'    public override void OnPressed()\n    {\n        if (CurrentTarget is null)\n        {\n            gc.audioHandler.Play(Owner, "CantDo");\n            return;\n        }\n        /* ... */\n    }\n')),(0,r.kt)("h2",{id:"examples"},"Examples"),(0,r.kt)(l.Z,{defaultValue:"hug",values:[{label:"Hug",value:"hug"}],mdxType:"Tabs"},(0,r.kt)(s.Z,{value:"hug",mdxType:"TabItem"},(0,r.kt)(o.Z,{mdxType:"CodeSnippet"},'using System.Collections.Generic;\nusing System.Linq;\nusing UnityEngine;\n\nnamespace RogueLibsCore.Test\n{\n    public class Hug : CustomAbility, IAbilityTargetable\n    {\n        [RLSetup]\n        public static void Setup()\n        {\n            RogueLibs.CreateCustomAbility<Hug>()\n                .WithName(new CustomNameInfo("Hug"))\n                .WithDescription(new CustomNameInfo("Sneak up behind people. And HUG THEM!!"))\n                .WithSprite(Properties.Resources.Hug)\n                .WithUnlock(new AbilityUnlock { UnlockCost = 5, CharacterCreationCost = 5 });\n\n            RogueLibs.CreateCustomName("HugNegative1", NameTypes.Dialogue, new CustomNameInfo("Huh? What are you doing?"));\n            RogueLibs.CreateCustomName("HugNegative2", NameTypes.Dialogue, new CustomNameInfo("Excuse me?!"));\n            RogueLibs.CreateCustomName("HugNegative3", NameTypes.Dialogue, new CustomNameInfo("Stop it!"));\n            RogueLibs.CreateCustomName("HugPositive1", NameTypes.Dialogue, new CustomNameInfo("Oh.. Thanks."));\n            RogueLibs.CreateCustomName("HugPositive2", NameTypes.Dialogue, new CustomNameInfo("Um.. Okay.."));\n            RogueLibs.CreateCustomName("HugPositive3", NameTypes.Dialogue, new CustomNameInfo("?.."));\n            RogueLibs.CreateCustomName("HugForgive1", NameTypes.Dialogue, new CustomNameInfo("Oh.. Okay, I forgive you."));\n            RogueLibs.CreateCustomName("HugForgive2", NameTypes.Dialogue, new CustomNameInfo("Alright, I forgive you."));\n            RogueLibs.CreateCustomName("HugForgive3", NameTypes.Dialogue, new CustomNameInfo("Okay... Don\'t worry about that.."));\n        }\n\n        public override void OnAdded() { }\n        public PlayfieldObject? FindTarget()\n        {\n            Agent? closest = null;\n            float distance = float.MaxValue;\n            foreach (Agent agent in Owner.interactionHelper.TriggerList\n                .Where(static go => go.CompareTag("AgentSprite"))\n                .Select(static go => go.GetComponent<ObjectSprite>().agent))\n            {\n                if (!huggedList.Contains(agent) && !agent.dead && !agent.ghost && !Owner.ghost && !agent.hologram\n                    && agent.go.activeSelf && !agent.mechFilled && !agent.mechEmpty)\n                {\n                    float dist = Vector2.Distance(Owner.curPosition, agent.curPosition);\n                    if (dist < distance)\n                    {\n                        closest = agent;\n                        distance = dist;\n                    }\n                }\n            }\n            return closest;\n        }\n        private readonly List<Agent> huggedList = new List<Agent>();\n        public override void OnPressed()\n        {\n            if (CurrentTarget is null)\n            {\n                gc.audioHandler.Play(Owner, VanillaAudio.CantDo);\n            }\n            else\n            {\n                Agent target = (Agent)CurrentTarget;\n                int rnd = new System.Random().Next(3) + 1;\n\n                relStatus code = target.relationships.GetRelCode(Owner);\n                if (code is relStatus.Friendly or relStatus.Submissive)\n                {\n                    target.SayDialogue("HugPositive" + rnd);\n                    target.relationships.SetRel(Owner, "Loyal");\n                }\n                else if (code == relStatus.Loyal)\n                {\n                    target.SayDialogue("HugPositive" + rnd);\n                    target.relationships.SetRel(Owner, "Aligned");\n                }\n                else if (code == relStatus.Aligned)\n                {\n                    target.SayDialogue("HugPositive" + rnd);\n                }\n                else if (code == relStatus.Neutral)\n                {\n                    target.SayDialogue("HugNegative" + rnd);\n                    target.relationships.SetRel(Owner, "Annoyed");\n                    target.relationships.SetStrikes(Owner, 2);\n                    target.statusEffects.annoyeders.Add(Owner);\n                    gc.audioHandler.Play(target, VanillaAudio.AgentAnnoyed);\n                    return;\n                }\n                else if (code == relStatus.Annoyed)\n                {\n                    target.SayDialogue("HugForgive" + rnd);\n                    target.relationships.SetRel(Owner, "Neutral");\n                }\n                else if (code == relStatus.Hostile)\n                {\n                    return;\n                }\n                target.relationships.SetStrikes(Owner, 0);\n                gc.audioHandler.Play(target, VanillaAudio.AgentOK);\n                huggedList.Add(target);\n            }\n        }\n    }\n}\n'))))}p.isMDXComponent=!0}}]);