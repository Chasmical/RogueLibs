"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[2542],{3905:(e,t,a)=>{a.d(t,{Zo:()=>d,kt:()=>g});var n=a(7294);function r(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function l(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,n)}return a}function o(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?l(Object(a),!0).forEach((function(t){r(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):l(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function i(e,t){if(null==e)return{};var a,n,r=function(e,t){if(null==e)return{};var a,n,r={},l=Object.keys(e);for(n=0;n<l.length;n++)a=l[n],t.indexOf(a)>=0||(r[a]=e[a]);return r}(e,t);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);for(n=0;n<l.length;n++)a=l[n],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(r[a]=e[a])}return r}var u=n.createContext({}),s=function(e){var t=n.useContext(u),a=t;return e&&(a="function"==typeof e?e(t):o(o({},t),e)),a},d=function(e){var t=s(e.components);return n.createElement(u.Provider,{value:t},e.children)},p="mdxType",m={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},c=n.forwardRef((function(e,t){var a=e.components,r=e.mdxType,l=e.originalType,u=e.parentName,d=i(e,["components","mdxType","originalType","parentName"]),p=s(a),c=r,g=p["".concat(u,".").concat(c)]||p[c]||m[c]||l;return a?n.createElement(g,o(o({ref:t},d),{},{components:a})):n.createElement(g,o({ref:t},d))}));function g(e,t){var a=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var l=a.length,o=new Array(l);o[0]=c;var i={};for(var u in t)hasOwnProperty.call(t,u)&&(i[u]=t[u]);i.originalType=e,i[p]="string"==typeof e?e:r,o[1]=i;for(var s=2;s<l;s++)o[s]=a[s];return n.createElement.apply(null,o)}return n.createElement.apply(null,a)}c.displayName="MDXCreateElement"},1016:(e,t,a)=>{a.d(t,{Z:()=>l});var n=a(7462),r=a(7294);function l(e){let{children:t,...a}=e;return r.createElement("div",(0,n.Z)({role:"tabpanel"},a),t)}},5878:(e,t,a)=>{a.d(t,{Z:()=>b});var n=a(7294),r=a(6550),l=a(1980),o=a(7392),i=a(12);function u(e){return function(e){return n.Children.map(e,(e=>{if(!e||(0,n.isValidElement)(e)&&function(e){const{props:t}=e;return!!t&&"object"==typeof t&&"value"in t}(e))return e;throw new Error(`Docusaurus error: Bad <Tabs> child <${"string"==typeof e.type?e.type:e.type.name}>: all children of the <Tabs> component should be <TabItem>, and every <TabItem> should have a unique "value" prop.`)}))?.filter(Boolean)??[]}(e).map((e=>{let{props:{value:t,label:a,attributes:n,default:r}}=e;return{value:t,label:a,attributes:n,default:r}}))}function s(e){const{values:t,children:a}=e;return(0,n.useMemo)((()=>{const e=t??u(a);return function(e){const t=(0,o.l)(e,((e,t)=>e.value===t.value));if(t.length>0)throw new Error(`Docusaurus error: Duplicate values "${t.map((e=>e.value)).join(", ")}" found in <Tabs>. Every value needs to be unique.`)}(e),e}),[t,a])}function d(e){let{value:t,tabValues:a}=e;return a.some((e=>e.value===t))}function p(e){let{queryString:t=!1,groupId:a}=e;const o=(0,r.k6)(),i=function(e){let{queryString:t=!1,groupId:a}=e;if("string"==typeof t)return t;if(!1===t)return null;if(!0===t&&!a)throw new Error('Docusaurus error: The <Tabs> component groupId prop is required if queryString=true, because this value is used as the search param name. You can also provide an explicit value such as queryString="my-search-param".');return a??null}({queryString:t,groupId:a});return[(0,l._X)(i),(0,n.useCallback)((e=>{if(!i)return;const t=new URLSearchParams(o.location.search);t.set(i,e),o.replace({...o.location,search:t.toString()})}),[i,o])]}function m(e){const{defaultValue:t,queryString:a=!1,groupId:r}=e,l=s(e),[o,u]=(0,n.useState)((()=>function(e){let{defaultValue:t,tabValues:a}=e;if(0===a.length)throw new Error("Docusaurus error: the <Tabs> component requires at least one <TabItem> children component");if(t){if(!d({value:t,tabValues:a}))throw new Error(`Docusaurus error: The <Tabs> has a defaultValue "${t}" but none of its children has the corresponding value. Available values are: ${a.map((e=>e.value)).join(", ")}. If you intend to show no default tab, use defaultValue={null} instead.`);return t}const n=a.find((e=>e.default))??a[0];if(!n)throw new Error("Unexpected error: 0 tabValues");return n.value}({defaultValue:t,tabValues:l}))),[m,c]=p({queryString:a,groupId:r}),[g,k]=function(e){let{groupId:t}=e;const a=function(e){return e?`docusaurus.tab.${e}`:null}(t),[r,l]=(0,i.Nk)(a);return[r,(0,n.useCallback)((e=>{a&&l.set(e)}),[a,l])]}({groupId:r}),b=(()=>{const e=m??g;return d({value:e,tabValues:l})?e:null})();(0,n.useLayoutEffect)((()=>{b&&u(b)}),[b]);return{selectedValue:o,selectValue:(0,n.useCallback)((e=>{if(!d({value:e,tabValues:l}))throw new Error(`Can't select invalid tab value=${e}`);u(e),c(e),k(e)}),[c,k,l]),tabValues:l}}var c=a(6010);const g={tabItem:"tabItem_V91s",tabItemActive:"tabItemActive_JsUu",blink:"blink_ZPVS",tab:"tab_ntnM"};const k={left:37,right:39};function b(e){const{lazy:t,defaultValue:a,values:r,groupId:l}=e,o=n.Children.toArray(e.children),{tabValues:i,selectedValue:u,selectValue:s}=m({children:o,defaultValue:a,values:r,groupId:l}),d=[],p=e=>{const t=e.currentTarget,a=r[d.indexOf(t)].value;s(a),null!=l&&setTimeout((()=>{(function(e){const{top:t,left:a,bottom:n,right:r}=e.getBoundingClientRect(),{innerHeight:l,innerWidth:o}=window;return t>=0&&r<=o&&n<=l&&a>=0})(t)||(t.scrollIntoView({block:"center",behavior:"smooth"}),t.classList.add(g.tabItemActive),setTimeout((()=>t.classList.remove(g.tabItemActive)),2e3))}),150)},b=e=>{let t;switch(e.keyCode){case k.right:{const a=d.indexOf(e.target)+1;t=d[a]||d[0];break}case k.left:{const a=d.indexOf(e.target)-1;t=d[a]||d[d.length-1];break}default:return}t.focus()},f=(e,t)=>t.value===e||t.values&&-1!=t.values.indexOf(e);return n.createElement("div",{className:"tabs-container"},n.createElement("ul",{role:"tablist","aria-orientation":"horizontal",className:"tabs"},r.map((e=>{let{value:t,label:a}=e;return n.createElement("li",{role:"tab",tabIndex:u===t?0:-1,"aria-selected":u===t,className:(0,c.Z)("tabs__item",g.tabItem,{"tabs__item--active":u===t}),key:t,ref:e=>e&&d.push(e),onKeyDown:b,onFocus:p,onClick:p},a)}))),t?n.cloneElement(o.find((e=>f(u,e.props))),{className:g.tab}):n.createElement("div",null,o.map(((e,t)=>n.cloneElement(e,{key:t,hidden:!f(u,e.props),className:g.tab})))),n.createElement("br",null))}},955:(e,t,a)=>{a.r(t),a.d(t,{assets:()=>u,contentTitle:()=>o,default:()=>m,frontMatter:()=>l,metadata:()=>i,toc:()=>s});var n=a(7462),r=(a(7294),a(3905));a(5878),a(1016),a(4996);const l={},o="Melee Weapons*",i={unversionedId:"dev/items/weapons/melee-weapons",id:"dev/items/weapons/melee-weapons",title:"Melee Weapons*",description:"Melee weapons are realy complicated. But, thankfully, RogueLibs takes care of the most difficult part \u2014 patching. So, all you have to do is to create a class deriving from CustomWeaponMelee. I've spent hundreds of hours patching the melee weapons code, and managed to condense all of it into a single class. It's ridiculous how overcomplicated and wet Matt's code is.",source:"@site/docs/dev/items/weapons/melee-weapons.mdx",sourceDirName:"dev/items/weapons",slug:"/dev/items/weapons/melee-weapons",permalink:"/RogueLibs/docs/dev/items/weapons/melee-weapons",draft:!1,editUrl:"https://github.com/SugarBarrel/RogueLibs/edit/main/website/docs/dev/items/weapons/melee-weapons.mdx",tags:[],version:"current",frontMatter:{},sidebar:"documentationSidebar",previous:{title:"Recharging Items",permalink:"/RogueLibs/docs/dev/items/recharging-items"},next:{title:"Thrown Weapons*",permalink:"/RogueLibs/docs/dev/items/weapons/thrown-weapons"}},u={},s=[{value:"Vanilla Weapons Reference",id:"reference",level:2}],d={toc:s},p="wrapper";function m(e){let{components:t,...a}=e;return(0,r.kt)(p,(0,n.Z)({},d,a,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("h1",{id:"melee-weapons"},"Melee Weapons*"),(0,r.kt)("p",null,"Melee weapons are realy complicated. But, thankfully, RogueLibs takes care of the most difficult part \u2014 patching. So, all you have to do is to create a class deriving from ",(0,r.kt)("inlineCode",{parentName:"p"},"CustomWeaponMelee"),". I've spent hundreds of hours patching the melee weapons code, and managed to condense all of it into a single class. It's ridiculous how overcomplicated and wet Matt's code is."),(0,r.kt)("admonition",{title:"Work-In-Progress",type:"info"}),(0,r.kt)("h2",{id:"reference"},"Vanilla Weapons Reference"),(0,r.kt)("p",null,"The vanilla weapon stats can be summarized in the table below:"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Type"),(0,r.kt)("th",{parentName:"tr",align:null},"CD"),(0,r.kt)("th",{parentName:"tr",align:null},"Speed"),(0,r.kt)("th",{parentName:"tr",align:null},"Animation"),(0,r.kt)("th",{parentName:"tr",align:null},"(offset), (size)*"),(0,r.kt)("th",{parentName:"tr",align:null},"Knock force"),(0,r.kt)("th",{parentName:"tr",align:null},"Sound"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"Fist-based"),(0,r.kt)("td",{parentName:"tr",align:null},"1"),(0,r.kt)("td",{parentName:"tr",align:null},"5"),(0,r.kt)("td",{parentName:"tr",align:null},"Melee-Punch"),(0,r.kt)("td",{parentName:"tr",align:null},"(0, 0), (0.16, 0.16)"),(0,r.kt)("td",{parentName:"tr",align:null},"20 (40 fist)"),(0,r.kt)("td",{parentName:"tr",align:null},"SwingWeaponFist")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"1-handed stab"),(0,r.kt)("td",{parentName:"tr",align:null},"1"),(0,r.kt)("td",{parentName:"tr",align:null},"5"),(0,r.kt)("td",{parentName:"tr",align:null},"Melee-Knife"),(0,r.kt)("td",{parentName:"tr",align:null},"(0, -0.02), (0.16, 0.36)"),(0,r.kt)("td",{parentName:"tr",align:null},"40"),(0,r.kt)("td",{parentName:"tr",align:null},"SwingWeaponSmall")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"1-handed swing"),(0,r.kt)("td",{parentName:"tr",align:null},"1"),(0,r.kt)("td",{parentName:"tr",align:null},"5"),(0,r.kt)("td",{parentName:"tr",align:null},"Melee-SwingShort"),(0,r.kt)("td",{parentName:"tr",align:null},"(0, -0.02), (0.16, 0.36)"),(0,r.kt)("td",{parentName:"tr",align:null},"80"),(0,r.kt)("td",{parentName:"tr",align:null},"SwingWeaponLarge")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"2-handed swing"),(0,r.kt)("td",{parentName:"tr",align:null},"1"),(0,r.kt)("td",{parentName:"tr",align:null},"4"),(0,r.kt)("td",{parentName:"tr",align:null},"Melee-SwingShort"),(0,r.kt)("td",{parentName:"tr",align:null},"(0, -0.02), (0.16, 0.36)"),(0,r.kt)("td",{parentName:"tr",align:null},"80"),(0,r.kt)("td",{parentName:"tr",align:null},"SwingWeaponLarge")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"Duster (1-Swing)"),(0,r.kt)("td",{parentName:"tr",align:null},"0"),(0,r.kt)("td",{parentName:"tr",align:null},"2"),(0,r.kt)("td",{parentName:"tr",align:null},"Melee-Dust"),(0,r.kt)("td",{parentName:"tr",align:null},"(0, 0), (0, 0)"),(0,r.kt)("td",{parentName:"tr",align:null},"0"),(0,r.kt)("td",{parentName:"tr",align:null},"ButlerBotClean")))),(0,r.kt)("p",null,"*"," The hitboxes may vary with a weapon, see below."),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Type"),(0,r.kt)("th",{parentName:"tr",align:null},"Weapon"),(0,r.kt)("th",{parentName:"tr",align:null},"(offset), (size)"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"Fist-based"),(0,r.kt)("td",{parentName:"tr",align:null},"Fist"),(0,r.kt)("td",{parentName:"tr",align:null},"(0, 0), (0.16, 0.16)")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"Fist-based"),(0,r.kt)("td",{parentName:"tr",align:null},"Chloroform Hankie"),(0,r.kt)("td",{parentName:"tr",align:null},"(0, 0), (0.16, 0.16)")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"Fist-based"),(0,r.kt)("td",{parentName:"tr",align:null},"Sticky Glove"),(0,r.kt)("td",{parentName:"tr",align:null},"(0, 0), (0.16, 0.16)")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"1-handed stab"),(0,r.kt)("td",{parentName:"tr",align:null},"Knife"),(0,r.kt)("td",{parentName:"tr",align:null},"(0, -0.02), (0.16, 0.36)")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"1-handed swing"),(0,r.kt)("td",{parentName:"tr",align:null},"PoliceBaton"),(0,r.kt)("td",{parentName:"tr",align:null},"(0, -0.02), (0.16, 0.36)")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"1-handed swing"),(0,r.kt)("td",{parentName:"tr",align:null},"Wrench"),(0,r.kt)("td",{parentName:"tr",align:null},"(0, ",(0,r.kt)("strong",{parentName:"td"},"-0.04"),"), (0.16, ",(0,r.kt)("strong",{parentName:"td"},"0.32"),")")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"2-handed swing"),(0,r.kt)("td",{parentName:"tr",align:null},"Sledgehammer"),(0,r.kt)("td",{parentName:"tr",align:null},"(0, -0.02), (0.16, 0.36)")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"2-handed swing"),(0,r.kt)("td",{parentName:"tr",align:null},"Crowbar"),(0,r.kt)("td",{parentName:"tr",align:null},"(0, -0.02), (0.16, 0.36)")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"2-handed swing"),(0,r.kt)("td",{parentName:"tr",align:null},"PlasmaSword"),(0,r.kt)("td",{parentName:"tr",align:null},"(0, -0.02), (0.16, 0.36)")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"2-handed swing"),(0,r.kt)("td",{parentName:"tr",align:null},"Axe"),(0,r.kt)("td",{parentName:"tr",align:null},"(0, -0.02), (0.16, 0.36)")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"2-handed swing"),(0,r.kt)("td",{parentName:"tr",align:null},"Baseball Bat"),(0,r.kt)("td",{parentName:"tr",align:null},"(0, ",(0,r.kt)("strong",{parentName:"td"},"-0.03"),"), (0.16, 0.36)")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"2-handed swing"),(0,r.kt)("td",{parentName:"tr",align:null},"Sword"),(0,r.kt)("td",{parentName:"tr",align:null},"(0, ",(0,r.kt)("strong",{parentName:"td"},"-0.03"),"), (0.16, 0.36)")))))}m.isMDXComponent=!0}}]);