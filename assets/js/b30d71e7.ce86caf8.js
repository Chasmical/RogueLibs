"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[8279],{4214:function(e,t,n){n.d(t,{Z:function(){return i}});var a=n(7294),r=n(1736);function i(e){var t=e.children,n=e.language;return a.createElement(r.Z,{className:"language-"+(n||"csharp")},t.replace(/\t/g,"    "))}},2725:function(e,t,n){n.d(t,{Z:function(){return r}});var a=n(7294);function r(e){var t=e.color,n=(e.size||14)+"px";return a.createElement("div",{style:{display:"inline"}},a.createElement("div",{style:{display:"inline-block",width:n,height:n,background:t,marginRight:"2px"}}),a.createElement("div",{style:{display:"inline"}},t))}},1016:function(e,t,n){n.d(t,{Z:function(){return s}});var a=n(7462),r=n(3366),i=n(7294),l=["children"];function s(e){var t=e.children,n=(0,r.Z)(e,l);return i.createElement("div",(0,a.Z)({role:"tabpanel"},n),t)}},250:function(e,t,n){n.d(t,{Z:function(){return m}});var a=n(7294),r=n(5773),i=n(6010),l="tabItem_V91s",s="tabItemActive_JsUu",o="tab_ntnM";var u=37,c=39;function m(e){var t=e.lazy,n=e.defaultValue,m=e.values,p=e.groupId,g=(0,r.UB)(),d=g.tabGroupChoices,b=g.setTabGroupChoices,h=(0,a.useState)(n),f=h[0],v=h[1],T=a.Children.toArray(e.children),C=[];if(null!=p){var k=d[p];null!=k&&k!==f&&m.some((function(e){return e.value===k}))&&v(k)}var w=function(e){var t=e.currentTarget,n=C.indexOf(t),a=m[n].value;v(a),null!=p&&(b(p,a),setTimeout((function(){var e,n,a,r,i,l,o,u;(e=t.getBoundingClientRect(),n=e.top,a=e.left,r=e.bottom,i=e.right,l=window,o=l.innerHeight,u=l.innerWidth,n>=0&&i<=u&&r<=o&&a>=0)||(t.scrollIntoView({block:"center",behavior:"smooth"}),t.classList.add(s),setTimeout((function(){return t.classList.remove(s)}),2e3))}),150))},y=function(e){var t;switch(e.keyCode){case c:var n=C.indexOf(e.target)+1;t=C[n]||C[0];break;case u:var a=C.indexOf(e.target)-1;t=C[a]||C[C.length-1];break;default:return}t.focus()},I=function(e,t){return t.value===e||t.values&&-1!=t.values.indexOf(e)};return a.createElement("div",{className:"tabs-container"},a.createElement("ul",{role:"tablist","aria-orientation":"horizontal",className:"tabs"},m.map((function(e){var t=e.value,n=e.label;return a.createElement("li",{role:"tab",tabIndex:f===t?0:-1,"aria-selected":f===t,className:(0,i.Z)("tabs__item",l,{"tabs__item--active":f===t}),key:t,ref:function(e){return e&&C.push(e)},onKeyDown:y,onFocus:w,onClick:w},n)}))),t?a.cloneElement(T.find((function(e){return I(f,e.props)})),{className:o}):a.createElement("div",null,T.map((function(e,t){return a.cloneElement(e,{key:t,hidden:!I(f,e.props),className:o})}))),a.createElement("br",null))}},2596:function(e,t,n){n.r(t),n.d(t,{contentTitle:function(){return p},default:function(){return h},frontMatter:function(){return m},metadata:function(){return g},toc:function(){return d}});var a=n(7462),r=n(3366),i=(n(7294),n(3905)),l=n(250),s=n(1016),o=(n(4996),n(2725)),u=n(4214),c=["components"],m={},p="Targetable Items",g={unversionedId:"dev/items/targetable-items",id:"dev/items/targetable-items",title:"Targetable Items",description:"Making items targetable",source:"@site/docs/dev/items/targetable-items.mdx",sourceDirName:"dev/items",slug:"/dev/items/targetable-items",permalink:"/RogueLibs/docs/dev/items/targetable-items",editUrl:"https://github.com/SugarBarrel/RogueLibs/edit/main/website/docs/dev/items/targetable-items.mdx",tags:[],version:"current",frontMatter:{},sidebar:"documentationSidebar",previous:{title:"Combinable Items",permalink:"/RogueLibs/docs/dev/items/combinable-items"},next:{title:"Targetable Items +",permalink:"/RogueLibs/docs/dev/items/targetable-items-plus"}},d=[{value:"Making items targetable",id:"making-targetable",children:[],level:2},{value:"Examples",id:"examples",children:[],level:2}],b={toc:d};function h(e){var t=e.components,n=(0,r.Z)(e,c);return(0,i.kt)("wrapper",(0,a.Z)({},b,n,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("h1",{id:"targetable-items"},"Targetable Items"),(0,i.kt)("h2",{id:"making-targetable"},"Making items targetable"),(0,i.kt)("p",null,"Just implement the ",(0,i.kt)("inlineCode",{parentName:"p"},"IItemTargetable")," interface in your item's class:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-csharp",metastring:'title="MyTargetableItem.cs"',title:'"MyTargetableItem.cs"'},"// highlight-next-line\npublic class MyTargetableItem : CustomItem, IItemTargetable\n{\n    // highlight-start\n    public bool TargetFilter(PlayfieldObject target) { /* ... */ }\n    public bool TargetObject(PlayfieldObject target) { /* ... */ }\n    public CustomTooltip TargetCursorText(PlayfieldObject target) { /* ... */ }\n    // highlight-end\n}\n")),(0,i.kt)("p",null,(0,i.kt)("inlineCode",{parentName:"p"},"TargetFilter")," determines what objects will be highlighted, when using the current item."),(0,i.kt)("p",null,(0,i.kt)("inlineCode",{parentName:"p"},"TargetObject")," uses the current item on the target. The return value indicates whether it was a success or not. You can play a ",(0,i.kt)("inlineCode",{parentName:"p"},'"CantDo"')," sound and make the player say something, if the item cannot be used. Returning ",(0,i.kt)("inlineCode",{parentName:"p"},"true")," will also play an animation."),(0,i.kt)("p",null,(0,i.kt)("inlineCode",{parentName:"p"},"TargetCursorText")," determines the text under the cursor when hovering over the specified object. ",(0,i.kt)("inlineCode",{parentName:"p"},"Text")," set to ",(0,i.kt)("inlineCode",{parentName:"p"},"null"),' will default to "Use", and ',(0,i.kt)("inlineCode",{parentName:"p"},"Color")," set to ",(0,i.kt)("inlineCode",{parentName:"p"},"null")," will default to ",(0,i.kt)(o.Z,{color:"#FFFFFF",mdxType:"ColorSquare"}),"."),(0,i.kt)("h2",{id:"examples"},"Examples"),(0,i.kt)(l.Z,{defaultValue:"spytron3000",values:[{label:"SPYTRON 3000",value:"spytron3000"}],mdxType:"Tabs"},(0,i.kt)(s.Z,{value:"spytron3000",mdxType:"TabItem"},(0,i.kt)("p",null,"SPYTRON 3000 from Team Fortress 2. Makes you look like the selected person and copies their relationships."),(0,i.kt)(u.Z,{mdxType:"CodeSnippet"},'namespace RogueLibsCore.Test\n{\n    [ItemCategories(RogueCategories.Social, RogueCategories.Stealth,\n        RogueCategories.Technology, RogueCategories.Usable)]\n    public class SPYTRON3000 : CustomItem, IItemTargetable\n    {\n        [RLSetup]\n        public static void Setup()\n        {\n            RogueLibs.CreateCustomItem<SPYTRON3000>()\n                .WithName(new CustomNameInfo("SPYTRON 3000"))\n                .WithDescription(new CustomNameInfo("Always wanted to be someone else? Now you can!"))\n                .WithSprite(Properties.Resources.SPYTRON3000)\n                .WithUnlock(new ItemUnlock\n                {\n                    UnlockCost = 10,\n                    LoadoutCost = 2,\n                    CharacterCreationCost = 3,\n                    Prerequisites = { VanillaItems.BodySwapper },\n                });\n\n            DisguiseCursorText = RogueLibs.CreateCustomName("Disguise", NameTypes.Interface, new CustomNameInfo("Disguise as"));\n        }\n        private static CustomName DisguiseCursorText = null!;\n\n        public override void SetupDetails()\n        {\n            Item.itemType = ItemTypes.Tool;\n            Item.itemValue = 40;\n            Item.initCount = 2;\n            Item.rewardCount = 3;\n            Item.stackable = true;\n            Item.goesInToolbar = true;\n        }\n        public bool TargetFilter(PlayfieldObject target) => target is Agent a && a != Owner;\n        public bool TargetObject(PlayfieldObject targetObj)\n        {\n            if (!TargetFilter(targetObj)) return false;\n            Agent target = (Agent)targetObj;\n\n            string prev = Owner.agentName;\n            Owner.agentName = target.agentName;\n\n            Owner.relationships.CopyLooks(target);\n            foreach (Relationship rel in target.relationships.RelList)\n            {\n                Relationship otherRel = rel.agent.relationships.GetRelationship(target);\n\n                Owner.relationships.SetRel(rel.agent, rel.relType);\n                Owner.relationships.SetRelHate(rel.agent, 0);\n                Owner.relationships.GetRelationship(rel.agent).secretHate = rel.secretHate;\n                Owner.relationships.GetRelationship(rel.agent).mechHate = rel.mechHate;\n\n                rel.agent.relationships.SetRel(Owner, otherRel.relType);\n                rel.agent.relationships.SetRelHate(Owner, 0);\n                rel.agent.relationships.GetRelationship(Owner).secretHate = otherRel.secretHate;\n                rel.agent.relationships.GetRelationship(Owner).mechHate = otherRel.mechHate;\n            }\n            target.relationships.SetRel(Owner, "Hateful");\n            target.relationships.SetRelHate(Owner, 25);\n\n            Owner.agentName = prev;\n\n            Owner.gc.audioHandler.Play(Owner, VanillaAudio.Spawn);\n            Owner.gc.spawnerMain.SpawnParticleEffect("Spawn", Owner.tr.position, 0f);\n\n            Count--;\n            Item.invInterface.HideTarget();\n            return true;\n        }\n        public CustomTooltip TargetCursorText(PlayfieldObject? _) => DisguiseCursorText;\n    }\n}\n'))))}h.isMDXComponent=!0}}]);