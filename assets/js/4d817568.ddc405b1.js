"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[797],{4214:(e,t,a)=>{a.d(t,{Z:()=>l});var n=a(7294),r=a(814);function l(e){let{children:t,language:a}=e;return n.createElement(r.Z,{className:"language-"+(a||"csharp")},t.replace(/\t/g,"    "))}},2725:(e,t,a)=>{a.d(t,{Z:()=>r});var n=a(7294);function r(e){let{color:t,size:a}=e,r=(a||14)+"px";return n.createElement("div",{style:{display:"inline"}},n.createElement("div",{style:{display:"inline-block",width:r,height:r,background:t,marginRight:"2px"}}),n.createElement("div",{style:{display:"inline"}},t))}},1016:(e,t,a)=>{a.d(t,{Z:()=>l});var n=a(7462),r=a(7294);function l(e){let{children:t,...a}=e;return r.createElement("div",(0,n.Z)({role:"tabpanel"},a),t)}},5878:(e,t,a)=>{a.d(t,{Z:()=>h});var n=a(7294),r=a(6550),l=a(1980),i=a(7392),o=a(12);function s(e){return function(e){return n.Children.map(e,(e=>{if(!e||(0,n.isValidElement)(e)&&function(e){const{props:t}=e;return!!t&&"object"==typeof t&&"value"in t}(e))return e;throw new Error(`Docusaurus error: Bad <Tabs> child <${"string"==typeof e.type?e.type:e.type.name}>: all children of the <Tabs> component should be <TabItem>, and every <TabItem> should have a unique "value" prop.`)}))?.filter(Boolean)??[]}(e).map((e=>{let{props:{value:t,label:a,attributes:n,default:r}}=e;return{value:t,label:a,attributes:n,default:r}}))}function u(e){const{values:t,children:a}=e;return(0,n.useMemo)((()=>{const e=t??s(a);return function(e){const t=(0,i.l)(e,((e,t)=>e.value===t.value));if(t.length>0)throw new Error(`Docusaurus error: Duplicate values "${t.map((e=>e.value)).join(", ")}" found in <Tabs>. Every value needs to be unique.`)}(e),e}),[t,a])}function c(e){let{value:t,tabValues:a}=e;return a.some((e=>e.value===t))}function m(e){let{queryString:t=!1,groupId:a}=e;const i=(0,r.k6)(),o=function(e){let{queryString:t=!1,groupId:a}=e;if("string"==typeof t)return t;if(!1===t)return null;if(!0===t&&!a)throw new Error('Docusaurus error: The <Tabs> component groupId prop is required if queryString=true, because this value is used as the search param name. You can also provide an explicit value such as queryString="my-search-param".');return a??null}({queryString:t,groupId:a});return[(0,l._X)(o),(0,n.useCallback)((e=>{if(!o)return;const t=new URLSearchParams(i.location.search);t.set(o,e),i.replace({...i.location,search:t.toString()})}),[o,i])]}function p(e){const{defaultValue:t,queryString:a=!1,groupId:r}=e,l=u(e),[i,s]=(0,n.useState)((()=>function(e){let{defaultValue:t,tabValues:a}=e;if(0===a.length)throw new Error("Docusaurus error: the <Tabs> component requires at least one <TabItem> children component");if(t){if(!c({value:t,tabValues:a}))throw new Error(`Docusaurus error: The <Tabs> has a defaultValue "${t}" but none of its children has the corresponding value. Available values are: ${a.map((e=>e.value)).join(", ")}. If you intend to show no default tab, use defaultValue={null} instead.`);return t}const n=a.find((e=>e.default))??a[0];if(!n)throw new Error("Unexpected error: 0 tabValues");return n.value}({defaultValue:t,tabValues:l}))),[p,d]=m({queryString:a,groupId:r}),[b,g]=function(e){let{groupId:t}=e;const a=function(e){return e?`docusaurus.tab.${e}`:null}(t),[r,l]=(0,o.Nk)(a);return[r,(0,n.useCallback)((e=>{a&&l.set(e)}),[a,l])]}({groupId:r}),h=(()=>{const e=p??b;return c({value:e,tabValues:l})?e:null})();(0,n.useLayoutEffect)((()=>{h&&s(h)}),[h]);return{selectedValue:i,selectValue:(0,n.useCallback)((e=>{if(!c({value:e,tabValues:l}))throw new Error(`Can't select invalid tab value=${e}`);s(e),d(e),g(e)}),[d,g,l]),tabValues:l}}var d=a(6010);const b={tabItem:"tabItem_V91s",tabItemActive:"tabItemActive_JsUu",blink:"blink_ZPVS",tab:"tab_ntnM"};const g={left:37,right:39};function h(e){const{lazy:t,defaultValue:a,values:r,groupId:l}=e,i=n.Children.toArray(e.children),{tabValues:o,selectedValue:s,selectValue:u}=p({children:i,defaultValue:a,values:r,groupId:l}),c=[],m=e=>{const t=e.currentTarget,a=r[c.indexOf(t)].value;u(a),null!=l&&setTimeout((()=>{(function(e){const{top:t,left:a,bottom:n,right:r}=e.getBoundingClientRect(),{innerHeight:l,innerWidth:i}=window;return t>=0&&r<=i&&n<=l&&a>=0})(t)||(t.scrollIntoView({block:"center",behavior:"smooth"}),t.classList.add(b.tabItemActive),setTimeout((()=>t.classList.remove(b.tabItemActive)),2e3))}),150)},h=e=>{let t;switch(e.keyCode){case g.right:{const a=c.indexOf(e.target)+1;t=c[a]||c[0];break}case g.left:{const a=c.indexOf(e.target)-1;t=c[a]||c[c.length-1];break}default:return}t.focus()},f=(e,t)=>t.value===e||t.values&&-1!=t.values.indexOf(e);return n.createElement("div",{className:"tabs-container"},n.createElement("ul",{role:"tablist","aria-orientation":"horizontal",className:"tabs"},r.map((e=>{let{value:t,label:a}=e;return n.createElement("li",{role:"tab",tabIndex:s===t?0:-1,"aria-selected":s===t,className:(0,d.Z)("tabs__item",b.tabItem,{"tabs__item--active":s===t}),key:t,ref:e=>e&&c.push(e),onKeyDown:h,onFocus:m,onClick:m},a)}))),t?n.cloneElement(i.find((e=>f(s,e.props))),{className:b.tab}):n.createElement("div",null,i.map(((e,t)=>n.cloneElement(e,{key:t,hidden:!f(s,e.props),className:b.tab})))),n.createElement("br",null))}},9473:(e,t,a)=>{a.r(t),a.d(t,{assets:()=>d,contentTitle:()=>m,default:()=>f,frontMatter:()=>c,metadata:()=>p,toc:()=>b});var n=a(7462),r=(a(7294),a(3905)),l=a(5878),i=a(1016),o=(a(4996),a(2725)),s=a(4214);const u='using UnityEngine;\n\nnamespace RogueLibsCore.Test\n{\n    [ItemCategories(RogueCategories.Usable, RogueCategories.Technology, RogueCategories.Stealth)]\n    public class UsableTeleporter : CustomItem, IItemTargetableAnywhere\n    {\n        [RLSetup]\n        public static void Setup()\n        {\n            RogueLibs.CreateCustomItem<UsableTeleporter>()\n                .WithName(new CustomNameInfo("Usable Teleporter"))\n                .WithDescription(new CustomNameInfo("Teleports you somewhere. Has limited uses."))\n                .WithSprite(Properties.Resources.UsableTeleporter)\n                .WithUnlock(new ItemUnlock\n                {\n                    UnlockCost = 10,\n                    LoadoutCost = 9,\n                    CharacterCreationCost = 5,\n                    Prerequisites = { VanillaItems.QuickEscapeTeleporter, nameof(WildBypasser) },\n                });\n\n            TeleportCursorText = RogueLibs.CreateCustomName("TeleportHere", NameTypes.Interface, new CustomNameInfo("Teleport here"));\n        }\n        private static CustomName TeleportCursorText = null!;\n\n        public override void SetupDetails()\n        {\n            Item.itemType = ItemTypes.Tool;\n            Item.itemValue = 80;\n            Item.initCount = 2;\n            Item.rewardCount = 3;\n            Item.stackable = true;\n            Item.goesInToolbar = true;\n        }\n        public bool TargetFilter(Vector2 position)\n        {\n            TileData tileData = gc.tileInfo.GetTileData(position);\n            return !gc.tileInfo.IsOverlapping(position, "Anything") && tileData.wallMaterial == wallMaterialType.None;\n        }\n        public bool TargetPosition(Vector2 position)\n        {\n            if (!TargetFilter(position)) return false;\n\n            Owner!.SpawnParticleEffect("Spawn", Owner.tr.position);\n            Owner.Teleport(position, false, true);\n            Owner.rb.velocity = Vector2.zero;\n            Owner.SpawnParticleEffect("Spawn", Owner.tr.position, false);\n            gc.audioHandler.Play(Owner, VanillaAudio.Spawn);\n\n            Count--;\n            return true;\n        }\n        public CustomTooltip TargetCursorText(Vector2 position) => TeleportCursorText;\n    }\n}\n',c={},m="Targetable Items +",p={unversionedId:"dev/items/targetable-items-plus",id:"dev/items/targetable-items-plus",title:"Targetable Items +",description:"Custom items can be made targetable+ (targetable anywhere) by implementing the IItemTargetableAnywhere. Normal targetable items can only be used on something actually present in the game, but as that parenthesised text implies, targetable+ items can be used anywhere on the screen. And so, this interface uses in-game positions instead of objects.",source:"@site/docs/dev/items/targetable-items-plus.mdx",sourceDirName:"dev/items",slug:"/dev/items/targetable-items-plus",permalink:"/RogueLibs/docs/dev/items/targetable-items-plus",draft:!1,editUrl:"https://github.com/SugarBarrel/RogueLibs/edit/main/website/docs/dev/items/targetable-items-plus.mdx",tags:[],version:"current",frontMatter:{},sidebar:"documentationSidebar",previous:{title:"Targetable Items",permalink:"/RogueLibs/docs/dev/items/targetable-items"},next:{title:"Recharging Items",permalink:"/RogueLibs/docs/dev/items/recharging-items"}},d={},b=[{value:"Making items targetable anywhere",id:"making-targetable-anywhere",level:2},{value:"Examples",id:"examples",level:2}],g={toc:b},h="wrapper";function f(e){let{components:t,...a}=e;return(0,r.kt)(h,(0,n.Z)({},g,a,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("h1",{id:"targetable-items-"},"Targetable Items +"),(0,r.kt)("p",null,"Custom items can be made targetable+ (targetable anywhere) by implementing the ",(0,r.kt)("inlineCode",{parentName:"p"},"IItemTargetableAnywhere"),". Normal targetable items can only be used on something actually present in the game, but as that parenthesised text implies, targetable+ items can be used anywhere on the screen. And so, this interface uses in-game positions instead of objects."),(0,r.kt)("h2",{id:"making-targetable-anywhere"},"Making items targetable anywhere"),(0,r.kt)("p",null,"Just implement the ",(0,r.kt)("inlineCode",{parentName:"p"},"IItemTargetableAnywhere")," interface in your item's class:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-csharp",metastring:'title="MyTargetableAnywhereItem.cs"',title:'"MyTargetableAnywhereItem.cs"'},"// highlight-next-line\npublic class MyTargetableAnywhereItem : CustomItem, IItemTargetableAnywhere\n{\n    // highlight-start\n    public bool TargetFilter(Vector2 position) { /* ... */ }\n    public bool TargetPosition(Vector2 position) { /* ... */ }\n    public CustomTooltip TargetCursorText(Vector2 position) { /* ... */ }\n    // highlight-end\n}\n")),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"TargetFilter")," determines where the cursor should be highlighted, when using the current item."),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"TargetPosition")," uses the current item on the position. The return value indicates whether it was a success or not. You can play a ",(0,r.kt)("inlineCode",{parentName:"p"},'"CantDo"')," sound and make the player say something, if the item cannot be used. Returning ",(0,r.kt)("inlineCode",{parentName:"p"},"true")," will also play an animation."),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"TargetCursorText")," determines the text under the cursor when hovering over the specified position. ",(0,r.kt)("inlineCode",{parentName:"p"},"Text")," set to ",(0,r.kt)("inlineCode",{parentName:"p"},"null"),' will default to "Use", and ',(0,r.kt)("inlineCode",{parentName:"p"},"Color")," set to ",(0,r.kt)("inlineCode",{parentName:"p"},"null")," will default to ",(0,r.kt)(o.Z,{color:"#FFFFFF",mdxType:"ColorSquare"}),"."),(0,r.kt)("h2",{id:"examples"},"Examples"),(0,r.kt)(l.Z,{defaultValue:"usableteleporter",values:[{label:"Usable Teleporter",value:"usableteleporter"}],mdxType:"Tabs"},(0,r.kt)(i.Z,{value:"usableteleporter",mdxType:"TabItem"},(0,r.kt)(s.Z,{mdxType:"CodeSnippet"},u))))}f.isMDXComponent=!0}}]);