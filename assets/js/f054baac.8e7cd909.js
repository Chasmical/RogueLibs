"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[4111],{4214:(e,t,n)=>{n.d(t,{Z:()=>r});var a=n(7294),i=n(814);function r(e){let{children:t,language:n}=e;return a.createElement(i.Z,{className:"language-"+(n||"csharp")},t.replace(/\t/g,"    "))}},1016:(e,t,n)=>{n.d(t,{Z:()=>r});var a=n(7462),i=n(7294);function r(e){let{children:t,...n}=e;return i.createElement("div",(0,a.Z)({role:"tabpanel"},n),t)}},5878:(e,t,n)=>{n.d(t,{Z:()=>g});var a=n(7294),i=n(6550),r=n(1980),o=n(7392),l=n(12);function s(e){return function(e){return a.Children.map(e,(e=>{if(!e||(0,a.isValidElement)(e)&&function(e){const{props:t}=e;return!!t&&"object"==typeof t&&"value"in t}(e))return e;throw new Error(`Docusaurus error: Bad <Tabs> child <${"string"==typeof e.type?e.type:e.type.name}>: all children of the <Tabs> component should be <TabItem>, and every <TabItem> should have a unique "value" prop.`)}))?.filter(Boolean)??[]}(e).map((e=>{let{props:{value:t,label:n,attributes:a,default:i}}=e;return{value:t,label:n,attributes:a,default:i}}))}function u(e){const{values:t,children:n}=e;return(0,a.useMemo)((()=>{const e=t??s(n);return function(e){const t=(0,o.l)(e,((e,t)=>e.value===t.value));if(t.length>0)throw new Error(`Docusaurus error: Duplicate values "${t.map((e=>e.value)).join(", ")}" found in <Tabs>. Every value needs to be unique.`)}(e),e}),[t,n])}function m(e){let{value:t,tabValues:n}=e;return n.some((e=>e.value===t))}function c(e){let{queryString:t=!1,groupId:n}=e;const o=(0,i.k6)(),l=function(e){let{queryString:t=!1,groupId:n}=e;if("string"==typeof t)return t;if(!1===t)return null;if(!0===t&&!n)throw new Error('Docusaurus error: The <Tabs> component groupId prop is required if queryString=true, because this value is used as the search param name. You can also provide an explicit value such as queryString="my-search-param".');return n??null}({queryString:t,groupId:n});return[(0,r._X)(l),(0,a.useCallback)((e=>{if(!l)return;const t=new URLSearchParams(o.location.search);t.set(l,e),o.replace({...o.location,search:t.toString()})}),[l,o])]}function p(e){const{defaultValue:t,queryString:n=!1,groupId:i}=e,r=u(e),[o,s]=(0,a.useState)((()=>function(e){let{defaultValue:t,tabValues:n}=e;if(0===n.length)throw new Error("Docusaurus error: the <Tabs> component requires at least one <TabItem> children component");if(t){if(!m({value:t,tabValues:n}))throw new Error(`Docusaurus error: The <Tabs> has a defaultValue "${t}" but none of its children has the corresponding value. Available values are: ${n.map((e=>e.value)).join(", ")}. If you intend to show no default tab, use defaultValue={null} instead.`);return t}const a=n.find((e=>e.default))??n[0];if(!a)throw new Error("Unexpected error: 0 tabValues");return a.value}({defaultValue:t,tabValues:r}))),[p,d]=c({queryString:n,groupId:i}),[b,h]=function(e){let{groupId:t}=e;const n=function(e){return e?`docusaurus.tab.${e}`:null}(t),[i,r]=(0,l.Nk)(n);return[i,(0,a.useCallback)((e=>{n&&r.set(e)}),[n,r])]}({groupId:i}),g=(()=>{const e=p??b;return m({value:e,tabValues:r})?e:null})();(0,a.useLayoutEffect)((()=>{g&&s(g)}),[g]);return{selectedValue:o,selectValue:(0,a.useCallback)((e=>{if(!m({value:e,tabValues:r}))throw new Error(`Can't select invalid tab value=${e}`);s(e),d(e),h(e)}),[d,h,r]),tabValues:r}}var d=n(6010);const b={tabItem:"tabItem_V91s",tabItemActive:"tabItemActive_JsUu",blink:"blink_ZPVS",tab:"tab_ntnM"};const h={left:37,right:39};function g(e){const{lazy:t,defaultValue:n,values:i,groupId:r}=e,o=a.Children.toArray(e.children),{tabValues:l,selectedValue:s,selectValue:u}=p({children:o,defaultValue:n,values:i,groupId:r}),m=[],c=e=>{const t=e.currentTarget,n=i[m.indexOf(t)].value;u(n),null!=r&&setTimeout((()=>{(function(e){const{top:t,left:n,bottom:a,right:i}=e.getBoundingClientRect(),{innerHeight:r,innerWidth:o}=window;return t>=0&&i<=o&&a<=r&&n>=0})(t)||(t.scrollIntoView({block:"center",behavior:"smooth"}),t.classList.add(b.tabItemActive),setTimeout((()=>t.classList.remove(b.tabItemActive)),2e3))}),150)},g=e=>{let t;switch(e.keyCode){case h.right:{const n=m.indexOf(e.target)+1;t=m[n]||m[0];break}case h.left:{const n=m.indexOf(e.target)-1;t=m[n]||m[m.length-1];break}default:return}t.focus()},f=(e,t)=>t.value===e||t.values&&-1!=t.values.indexOf(e);return a.createElement("div",{className:"tabs-container"},a.createElement("ul",{role:"tablist","aria-orientation":"horizontal",className:"tabs"},i.map((e=>{let{value:t,label:n}=e;return a.createElement("li",{role:"tab",tabIndex:s===t?0:-1,"aria-selected":s===t,className:(0,d.Z)("tabs__item",b.tabItem,{"tabs__item--active":s===t}),key:t,ref:e=>e&&m.push(e),onKeyDown:g,onFocus:c,onClick:c},n)}))),t?a.cloneElement(o.find((e=>f(s,e.props))),{className:b.tab}):a.createElement("div",null,o.map(((e,t)=>a.cloneElement(e,{key:t,hidden:!f(s,e.props),className:b.tab})))),a.createElement("br",null))}},3583:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>b,contentTitle:()=>p,default:()=>I,frontMatter:()=>c,metadata:()=>d,toc:()=>h});var a=n(7462),i=(n(7294),n(3905)),r=n(5878),o=n(1016),l=(n(4996),n(4214));const s='namespace RogueLibsCore.Test\n{\n    [ItemCategories(RogueCategories.Usable, RogueCategories.Social)]\n    public class JokeBook : CustomItem, IItemUsable\n    {\n        [RLSetup]\n        public static void Setup()\n        {\n            RogueLibs.CreateCustomItem<JokeBook>()\n                .WithName(new CustomNameInfo("Joke Book"))\n                .WithDescription(new CustomNameInfo("Always wanted to be a Comedian? Now you can! (kind of)"))\n                .WithSprite(Properties.Resources.JokeBook)\n                .WithUnlock(new ItemUnlock\n                {\n                    UnlockCost = 10,\n                    LoadoutCost = 5,\n                    CharacterCreationCost = 3,\n                    Prerequisites = { VanillaAgents.Comedian + "_BQ" },\n                });\n        }\n\n        public override void SetupDetails()\n        {\n            Item.itemType = ItemTypes.Tool;\n            Item.itemValue = 15;\n            Item.initCount = 10;\n            Item.rewardCount = 10;\n            Item.stackable = true;\n            Item.hasCharges = true;\n            Item.goesInToolbar = true;\n        }\n        public bool UseItem()\n        {\n            if (Owner!.statusEffects.makingJoke) return false;\n\n            string prev = Owner.specialAbility;\n            Owner.specialAbility = VanillaAbilities.Joke;\n            Owner.statusEffects.PressedSpecialAbility();\n            Owner.specialAbility = prev;\n\n            Count--;\n            return true;\n        }\n    }\n}\n',u='namespace RogueLibsCore.Test\n{\n    [ItemCategories(RogueCategories.Drugs, RogueCategories.Melee, RogueCategories.Usable)]\n    public class AdrenalineShot : CustomItem, IItemUsable\n    {\n        [RLSetup]\n        public static void Setup()\n        {\n            RogueLibs.CreateCustomItem<AdrenalineShot>()\n                .WithName(new CustomNameInfo("Adrenaline Shot"))\n                .WithDescription(new CustomNameInfo("Gives you a ton of boosts for a short period of time."))\n                .WithSprite(Properties.Resources.AdrenalineShot)\n                .WithUnlock(new ItemUnlock\n                {\n                    UnlockCost = 10,\n                    LoadoutCost = 5,\n                    CharacterCreationCost = 3,\n                    Prerequisites = { VanillaItems.RagePoison, VanillaItems.Antidote },\n                });\n\n            RogueLibs.CreateCustomName("AdrenalineElectronic", NameTypes.Dialogue,\n                new CustomNameInfo("I don\'t have a circulatory system."));\n        }\n\n        public override void SetupDetails()\n        {\n            Item.itemType = ItemTypes.Consumable;\n            Item.healthChange = 20;\n            Item.itemValue = 60;\n            Item.initCount = 1;\n            Item.rewardCount = 2;\n            Item.stackable = true;\n            Item.goesInToolbar = true;\n        }\n        [IgnoreChecks("FullHealth")]\n        public bool UseItem()\n        {\n            if (Owner!.electronic)\n            {\n                Owner.SayDialogue("AdrenalineElectronic");\n                gc.audioHandler.Play(Owner, VanillaAudio.CantDo);\n                return false;\n            }\n            Owner.AddEffect<Adrenaline>();\n            gc.audioHandler.Play(Owner, VanillaAudio.UseSyringe);\n            Count--;\n            return true;\n        }\n    }\n}\n',m='using UnityEngine;\n\nnamespace RogueLibsCore.Test\n{\n    [ItemCategories(RogueCategories.Technology, RogueCategories.Usable, RogueCategories.Stealth)]\n    public class WildBypasser : CustomItem, IItemUsable\n    {\n        [RLSetup]\n        public static void Setup()\n        {\n            RogueLibs.CreateCustomItem<WildBypasser>()\n                .WithName(new CustomNameInfo("Wild Bypasser"))\n                .WithDescription(new CustomNameInfo("Warps you in the direction you\'re facing. Teleports through any amount of walls."))\n                .WithSprite(Properties.Resources.WildBypasser)\n                .WithUnlock(new ItemUnlock\n                {\n                    UnlockCost = 10,\n                    LoadoutCost = 7,\n                    CharacterCreationCost = 3,\n                    Prerequisites = { VanillaItems.WallBypasser },\n                });\n        }\n\n        public override void SetupDetails()\n        {\n            Item.itemType = ItemTypes.Tool;\n            Item.itemValue = 60;\n            Item.initCount = 2;\n            Item.rewardCount = 3;\n            Item.stackable = true;\n            Item.goesInToolbar = true;\n        }\n        public bool UseItem()\n        {\n            Vector3 position = Owner!.agentHelperTr.localPosition = Vector3.zero;\n            TileData tileData;\n            int limit = 0;\n            do\n            {\n                position.x += 0.64f;\n                Owner.agentHelperTr.localPosition = position;\n                tileData = gc.tileInfo.GetTileData(Owner.agentHelperTr.position);\n\n            } while ((gc.tileInfo.IsOverlapping(Owner.agentHelperTr.position, "Anything")\n                || tileData.wallMaterial != wallMaterialType.None) && limit++ < 250);\n\n            if (limit > 250)\n            {\n                gc.audioHandler.Play(Owner, VanillaAudio.CantDo);\n                return false;\n            }\n\n            Owner.SpawnParticleEffect("Spawn", Owner.tr.position);\n            Owner.Teleport(Owner.agentHelperTr.position, false, true);\n            Owner.rb.velocity = Vector2.zero;\n\n            if (!(Owner.HasTrait(VanillaTraits.IntrusionArtist)\n                    && gc.percentChance(Owner.DetermineLuck(80, "ThiefToolsMayNotSubtract", true)))\n                && !(Owner.HasTrait(VanillaTraits.IntrusionArtist2)\n                    && gc.percentChance(Owner.DetermineLuck(40, "ThiefToolsMayNotSubtract", true))))\n                Count--;\n\n            Owner.SpawnParticleEffect("Spawn", Owner.tr.position, false);\n            gc.audioHandler.Play(Owner, VanillaAudio.Spawn);\n            return true;\n        }\n    }\n}\n',c={},p="Usable Items",d={unversionedId:"dev/items/usable-items",id:"dev/items/usable-items",title:"Usable Items",description:"Custom items can be made usable by implementing the IItemUsable interface, that defines a single method, UseItem. Usable items can be used by right-clicking them in the inventory, or using them from the toolbar (1-5 keys).",source:"@site/docs/dev/items/usable-items.mdx",sourceDirName:"dev/items",slug:"/dev/items/usable-items",permalink:"/RogueLibs/docs/dev/items/usable-items",draft:!1,editUrl:"https://github.com/SugarBarrel/RogueLibs/edit/main/website/docs/dev/items/usable-items.mdx",tags:[],version:"current",frontMatter:{},sidebar:"documentationSidebar",previous:{title:"Creating a Custom Item",permalink:"/RogueLibs/docs/dev/items/create-item"},next:{title:"Combinable Items",permalink:"/RogueLibs/docs/dev/items/combinable-items"}},b={},h=[{value:"Making items usable",id:"making-usable",level:2},{value:"Examples",id:"examples",level:2}],g={toc:h},f="wrapper";function I(e){let{components:t,...n}=e;return(0,i.kt)(f,(0,a.Z)({},g,n,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("h1",{id:"usable-items"},"Usable Items"),(0,i.kt)("p",null,"Custom items can be made usable by implementing the ",(0,i.kt)("inlineCode",{parentName:"p"},"IItemUsable")," interface, that defines a single method, ",(0,i.kt)("inlineCode",{parentName:"p"},"UseItem"),". Usable items can be used by right-clicking them in the inventory, or using them from the toolbar (1-5 keys)."),(0,i.kt)("h2",{id:"making-usable"},"Making items usable"),(0,i.kt)("p",null,"Just implement the ",(0,i.kt)("inlineCode",{parentName:"p"},"IItemUsable")," interface in your item's class:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-csharp",metastring:'title="MyUsableItem.cs"',title:'"MyUsableItem.cs"'},"// highlight-next-line\npublic class MyUsableItem : CustomItem, IItemUsable\n{\n    // highlight-next-line\n    public bool UseItem() { /* ... */ }\n}\n")),(0,i.kt)("p",null,(0,i.kt)("inlineCode",{parentName:"p"},"UseItem"),"'s return value indicates whether the item was successfully used. Returning ",(0,i.kt)("inlineCode",{parentName:"p"},"true")," will also play an animation. When returning ",(0,i.kt)("inlineCode",{parentName:"p"},"false"),", you can play a ",(0,i.kt)("inlineCode",{parentName:"p"},'"CantDo"')," sound, and optionally make the current owner say why the item cannot be used:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-csharp"},'        if (cantUse)\n        {\n            gc.audioHandler.Play(Owner, "CantDo");\n            Owner.SayDialogue("CantUseItemBecause...");\n            // don\'t forget to create a dialogue with that id\n            return false;\n        }\n')),(0,i.kt)("admonition",{type:"info"},(0,i.kt)("p",{parentName:"admonition"},"You're responsible for decrementing the item's ",(0,i.kt)("inlineCode",{parentName:"p"},"Count"),". So, don't forget to do that.")),(0,i.kt)("h2",{id:"examples"},"Examples"),(0,i.kt)(r.Z,{defaultValue:"jokebook",values:[{label:"Joke Book",value:"jokebook"},{label:"Adrenaline Shot",value:"adrenalineshot"},{label:"Wild Bypasser",value:"wildbypasser"}],mdxType:"Tabs"},(0,i.kt)(o.Z,{value:"jokebook",mdxType:"TabItem"},(0,i.kt)("p",null,"A simple usable item that allows the player to use the Joke ability."),(0,i.kt)(l.Z,{mdxType:"CodeSnippet"},s)),(0,i.kt)(o.Z,{value:"adrenalineshot",mdxType:"TabItem"},(0,i.kt)("p",null,'A simple usable item that gives the player an effect called "Adrenaline". You can see Adrenaline effect\'s implementation in ',(0,i.kt)("a",{parentName:"p",href:"../traits/create-effect#examples"},"Creating a Custom Effect: Examples"),"."),(0,i.kt)(l.Z,{mdxType:"CodeSnippet"},u)),(0,i.kt)(o.Z,{value:"wildbypasser",mdxType:"TabItem"},(0,i.kt)("p",null,"A more complicated usable item, based on Wall Bypasser's code (see ",(0,i.kt)("inlineCode",{parentName:"p"},"ItemFunctions.UseItem"),")."),(0,i.kt)(l.Z,{mdxType:"CodeSnippet"},m))))}I.isMDXComponent=!0}}]);