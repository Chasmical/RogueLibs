"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[6634],{8538:(e,o,t)=>{t.r(o),t.d(o,{assets:()=>h,contentTitle:()=>u,default:()=>k,frontMatter:()=>c,metadata:()=>d,toc:()=>m});var n=t(5893),s=t(1151),a=t(5878),r=t(1016),i=(t(4996),t(4214)),l=t(5306);const c={},u="Hooks",d={id:"dev/hooks/hooks",title:"Hooks",description:'A hook is an object that is attached to another object ("hook" is a really vague word, jsyk). In RogueLibs hook types derive from IHook and IHook, and RogueLibs provides a mechanism to attach these hooks to vanilla types, such as InvItem, PlayfieldObject, Unlock, Trait and etc. Most custom content classes are based on hooks in one way or another.',source:"@site/docs/dev/hooks/hooks.mdx",sourceDirName:"dev/hooks",slug:"/dev/hooks/",permalink:"/RogueLibs/docs/dev/hooks/",draft:!1,unlisted:!1,editUrl:"https://github.com/Chasmical/RogueLibs/edit/main/website/docs/dev/hooks/hooks.mdx",tags:[],version:"current",frontMatter:{},sidebar:"documentationSidebar",previous:{title:"Patching Utilities",permalink:"/RogueLibs/docs/dev/patching-utilities"},next:{title:"Hook Factories",permalink:"/RogueLibs/docs/dev/hooks/hook-factories"}},h={},m=[{value:"<code>IHook</code> interface",id:"ihook",level:2},{value:"Usage",id:"usage",level:2},{value:"Examples",id:"examples",level:2}];function p(e){const o={a:"a",admonition:"admonition",code:"code",h1:"h1",h2:"h2",p:"p",pre:"pre",strong:"strong",...(0,s.a)(),...e.components};return(0,n.jsxs)(n.Fragment,{children:[(0,n.jsx)(o.h1,{id:"hooks",children:"Hooks"}),"\n",(0,n.jsxs)(o.p,{children:["A ",(0,n.jsx)(o.strong,{children:"hook"}),' is an object that is attached to another object ("hook" is a really vague word, jsyk). In RogueLibs hook types derive from ',(0,n.jsx)(o.code,{children:"IHook"})," and ",(0,n.jsx)(o.code,{children:"IHook<T>"}),", and RogueLibs provides a mechanism to attach these hooks to vanilla types, such as ",(0,n.jsx)(o.code,{children:"InvItem"}),", ",(0,n.jsx)(o.code,{children:"PlayfieldObject"}),", ",(0,n.jsx)(o.code,{children:"Unlock"}),", ",(0,n.jsx)(o.code,{children:"Trait"})," and etc. Most custom content classes are based on hooks in one way or another."]}),"\n","\n",(0,n.jsxs)(o.h2,{id:"ihook",children:[(0,n.jsx)(o.code,{children:"IHook"})," interface"]}),"\n",(0,n.jsxs)(o.p,{children:["RogueLibsPatcher.dll creates fields called ",(0,n.jsx)(o.code,{children:"__RogueLibsHooks"})," in all hookable types. An instance of ",(0,n.jsx)(o.code,{children:"IHookController"})," class is then assigned to the ",(0,n.jsx)(o.code,{children:"__RogueLibsHooks"})," field to manage the attached hooks. It provides methods to get, attach and detach hooks from the current instance. Think of it as a collection of hooks."]}),"\n",(0,n.jsxs)(o.p,{children:["You can create your own hooks by deriving either from ",(0,n.jsx)(o.code,{children:"IHook<T>"})," or from ",(0,n.jsx)(o.code,{children:"HookBase<T>"}),":"]}),"\n",(0,n.jsx)(o.pre,{children:(0,n.jsx)(o.code,{className:"language-csharp",metastring:'title="MyCustomHook.cs"',children:'public class MyCustomHook : HookBase<InvItem>\n{\n    protected override void Initialize() { }\n    \n    public void StoreInfo(string data)\n    {\n        Debug.Log($"Stored {data}.");\n        Data = data;\n    }\n    public string LoadInfo()\n    {\n        Debug.Log($"Loaded {Data}.");\n        return Data;\n    }\n    private string Data;\n}\n'})}),"\n",(0,n.jsx)(o.h2,{id:"usage",children:"Usage"}),"\n",(0,n.jsx)(o.p,{children:"You can use hooks to store various stuff:"}),"\n",(0,n.jsx)(o.pre,{children:(0,n.jsx)(o.code,{className:"language-csharp",children:'MyCustomHook hook = item.AddHook<MyCustomHook>();\nhook.StoreInfo("some-information");\n'})}),"\n",(0,n.jsx)(o.p,{children:"Then you can use that stuff somewhere else:"}),"\n",(0,n.jsx)(o.pre,{children:(0,n.jsx)(o.code,{className:"language-csharp",children:"MyCustomHook hook = item.GetHook<MyCustomHook>();\nif (hook != null)\n{\n    string data = hook.LoadInfo();\n}\n"})}),"\n",(0,n.jsx)(o.p,{children:"You can attach more than one hook of a type too:"}),"\n",(0,n.jsx)(o.pre,{children:(0,n.jsx)(o.code,{className:"language-csharp",children:'MyCustomHook hook = item.AddHook<MyCustomHook>();\nhook.StoreInfo("some-information");\nhook = item.AddHook<MyCustomHook>();\nhook.StoreInfo("some-other-stuff");\nhook = item.AddHook<MyCustomHook>();\nhook.StoreInfo("something-else");\n'})}),"\n",(0,n.jsx)(o.pre,{children:(0,n.jsx)(o.code,{className:"language-csharp",children:"foreach (MyCustomHook hook in item.GetHooks<MyCustomHook>())\n{\n    string data = hook.LoadInfo();\n}\n"})}),"\n",(0,n.jsx)(o.admonition,{title:"Pro-tip: Hook Factories",type:"tip",children:(0,n.jsxs)(o.p,{children:["If you want to attach hooks to instances right when they are initialized, use ",(0,n.jsx)(o.a,{href:"./hook-factories",children:"Hook Factories"}),"."]})}),"\n",(0,n.jsx)(o.h2,{id:"examples",children:"Examples"}),"\n",(0,n.jsx)(o.admonition,{type:"info",children:(0,n.jsxs)(o.p,{children:["Custom content classes (",(0,n.jsx)(o.code,{children:"CustomItem"}),", ",(0,n.jsx)(o.code,{children:"CustomTrait"}),", ",(0,n.jsx)(o.code,{children:"CustomEffect"}),", ",(0,n.jsx)(o.code,{children:"CustomAbility"})," and others) are hooks, by the way. You can see the custom classes' implementation in ",(0,n.jsx)(o.a,{href:"https://github.com/Chasmical/RogueLibs/tree/main/RogueLibsCore/Hooks",children:"RogueLibs' source code"}),"."]})}),"\n","\n","\n","\n",(0,n.jsx)(a.Z,{defaultValue:"spicerack",values:[{label:"Spice Rack",value:"spicerack"}],children:(0,n.jsxs)(r.Z,{value:"spicerack",children:[(0,n.jsx)(o.p,{children:"A great example with custom hooks keeping track of seasoned items."}),(0,n.jsxs)(o.p,{children:["See the combinable item example ",(0,n.jsx)(o.a,{href:"../items/combinable-items#examples",children:"here"}),"."]}),(0,n.jsx)(i.Z,{children:l.Z})]})})]})}function k(e={}){const{wrapper:o}={...(0,s.a)(),...e.components};return o?(0,n.jsx)(o,{...e,children:(0,n.jsx)(p,{...e})}):p(e)}},4214:(e,o,t)=>{t.d(o,{Z:()=>a});t(7294);var n=t(9286),s=t(5893);function a(e){let{children:o,language:t}=e;return(0,s.jsx)(n.Z,{className:"language-"+(t||"csharp"),children:o.replace(/\t/g,"    ")})}},1016:(e,o,t)=>{t.d(o,{Z:()=>s});t(7294);var n=t(5893);function s(e){let{children:o,...t}=e;return(0,n.jsx)("div",{role:"tabpanel",...t,children:o})}},5878:(e,o,t)=>{t.d(o,{Z:()=>g});var n=t(7294),s=t(6550),a=t(469),r=t(1980),i=t(7392),l=t(12);function c(e){return function(e){return n.Children.toArray(e).filter((e=>"\n"!==e)).map((e=>{if(!e||(0,n.isValidElement)(e)&&function(e){const{props:o}=e;return!!o&&"object"==typeof o&&"value"in o}(e))return e;throw new Error(`Docusaurus error: Bad <Tabs> child <${"string"==typeof e.type?e.type:e.type.name}>: all children of the <Tabs> component should be <TabItem>, and every <TabItem> should have a unique "value" prop.`)}))?.filter(Boolean)??[]}(e).map((e=>{let{props:{value:o,label:t,attributes:n,default:s}}=e;return{value:o,label:t,attributes:n,default:s}}))}function u(e){const{values:o,children:t}=e;return(0,n.useMemo)((()=>{const e=o??c(t);return function(e){const o=(0,i.l)(e,((e,o)=>e.value===o.value));if(o.length>0)throw new Error(`Docusaurus error: Duplicate values "${o.map((e=>e.value)).join(", ")}" found in <Tabs>. Every value needs to be unique.`)}(e),e}),[o,t])}function d(e){let{value:o,tabValues:t}=e;return t.some((e=>e.value===o))}function h(e){let{queryString:o=!1,groupId:t}=e;const a=(0,s.k6)(),i=function(e){let{queryString:o=!1,groupId:t}=e;if("string"==typeof o)return o;if(!1===o)return null;if(!0===o&&!t)throw new Error('Docusaurus error: The <Tabs> component groupId prop is required if queryString=true, because this value is used as the search param name. You can also provide an explicit value such as queryString="my-search-param".');return t??null}({queryString:o,groupId:t});return[(0,r._X)(i),(0,n.useCallback)((e=>{if(!i)return;const o=new URLSearchParams(a.location.search);o.set(i,e),a.replace({...a.location,search:o.toString()})}),[i,a])]}function m(e){const{defaultValue:o,queryString:t=!1,groupId:s}=e,r=u(e),[i,c]=(0,n.useState)((()=>function(e){let{defaultValue:o,tabValues:t}=e;if(0===t.length)throw new Error("Docusaurus error: the <Tabs> component requires at least one <TabItem> children component");if(o){if(!d({value:o,tabValues:t}))throw new Error(`Docusaurus error: The <Tabs> has a defaultValue "${o}" but none of its children has the corresponding value. Available values are: ${t.map((e=>e.value)).join(", ")}. If you intend to show no default tab, use defaultValue={null} instead.`);return o}const n=t.find((e=>e.default))??t[0];if(!n)throw new Error("Unexpected error: 0 tabValues");return n.value}({defaultValue:o,tabValues:r}))),[m,p]=h({queryString:t,groupId:s}),[k,b]=function(e){let{groupId:o}=e;const t=function(e){return e?`docusaurus.tab.${e}`:null}(o),[s,a]=(0,l.Nk)(t);return[s,(0,n.useCallback)((e=>{t&&a.set(e)}),[t,a])]}({groupId:s}),f=(()=>{const e=m??k;return d({value:e,tabValues:r})?e:null})();(0,a.Z)((()=>{f&&c(f)}),[f]);return{selectedValue:i,selectValue:(0,n.useCallback)((e=>{if(!d({value:e,tabValues:r}))throw new Error(`Can't select invalid tab value=${e}`);c(e),p(e),b(e)}),[p,b,r]),tabValues:r}}var p=t(512);const k={tabItem:"tabItem_V91s",tabItemActive:"tabItemActive_JsUu",blink:"blink_ZPVS",tab:"tab_ntnM"};var b=t(5893);const f={left:37,right:39};function g(e){const{lazy:o,defaultValue:t,values:s,groupId:a}=e,r=n.Children.toArray(e.children),{tabValues:i,selectedValue:l,selectValue:c}=m({children:r,defaultValue:t,values:s,groupId:a}),u=[],d=e=>{const o=e.currentTarget,t=s[u.indexOf(o)].value;c(t),null!=a&&setTimeout((()=>{(function(e){const{top:o,left:t,bottom:n,right:s}=e.getBoundingClientRect(),{innerHeight:a,innerWidth:r}=window;return o>=0&&s<=r&&n<=a&&t>=0})(o)||(o.scrollIntoView({block:"center",behavior:"smooth"}),o.classList.add(k.tabItemActive),setTimeout((()=>o.classList.remove(k.tabItemActive)),2e3))}),150)},h=e=>{let o;switch(e.keyCode){case f.right:{const t=u.indexOf(e.target)+1;o=u[t]||u[0];break}case f.left:{const t=u.indexOf(e.target)-1;o=u[t]||u[u.length-1];break}default:return}o.focus()},g=(e,o)=>o.value===e||o.values&&-1!=o.values.indexOf(e);return(0,b.jsxs)("div",{className:"tabs-container",children:[(0,b.jsx)("ul",{role:"tablist","aria-orientation":"horizontal",className:"tabs",children:s.map((e=>{let{value:o,label:t}=e;return(0,b.jsx)("li",{role:"tab",tabIndex:l===o?0:-1,"aria-selected":l===o,className:(0,p.Z)("tabs__item",k.tabItem,{"tabs__item--active":l===o}),ref:e=>e&&u.push(e),onKeyDown:h,onFocus:d,onClick:d,children:t},o)}))}),o?n.cloneElement(r.find((e=>g(l,e.props))),{className:k.tab}):(0,b.jsx)("div",{children:r.map(((e,o)=>n.cloneElement(e,{key:o,hidden:!g(l,e.props),className:k.tab})))}),(0,b.jsx)("br",{})]})}},5306:(e,o,t)=>{t.d(o,{Z:()=>n});const n='using UnityEngine;\n\nnamespace RogueLibsCore.Test\n{\n    [ItemCategories(RogueCategories.Food, RogueCategories.Health)]\n    public class SpiceRack : CustomItem, IItemCombinable\n    {\n        [RLSetup]\n        public static void Setup()\n        {\n            RogueLibs.CreateCustomItem<SpiceRack>()\n                .WithName(new CustomNameInfo("Spice Rack"))\n                .WithDescription(new CustomNameInfo("Combine with any food item to increase its healing properties."))\n                .WithSprite(Properties.Resources.SpiceRack)\n                .WithUnlock(new ItemUnlock\n                {\n                    UnlockCost = 10,\n                    LoadoutCost = 3,\n                    CharacterCreationCost = 2,\n                    Prerequisites = { VanillaItems.FoodProcessor },\n                });\n\n            SeasonCursorText = RogueLibs.CreateCustomName("SeasonItem", NameTypes.Interface, new CustomNameInfo("Season"));\n        }\n        private static CustomName SeasonCursorText = null!;\n\n        public override void SetupDetails()\n        {\n            Item.itemType = ItemTypes.Combine;\n            Item.itemValue = 4;\n            Item.initCount = 10;\n            Item.rewardCount = 15;\n            Item.stackable = true;\n            Item.hasCharges = true;\n        }\n        public bool CombineFilter(InvItem other)\n        {\n            if (other.itemType != ItemTypes.Food || other.healthChange is 0\n                || !other.Categories.Contains(RogueCategories.Food)) return false;\n\n            SpicedHook? hook = other.GetHook<SpicedHook>();\n            return hook is null || hook.Spiciness < 3;\n        }\n        public bool CombineItems(InvItem other)\n        {\n            if (!CombineFilter(other)) return false;\n\n            SpicedHook hook = other.GetHook<SpicedHook>() ?? other.AddHook<SpicedHook>();\n            hook.IncreaseSpiciness();\n\n            Count--;\n            gc.audioHandler.Play(Owner, VanillaAudio.CombineItem);\n            return true;\n        }\n        public CustomTooltip CombineCursorText(InvItem other) => SeasonCursorText;\n        public CustomTooltip CombineTooltip(InvItem other)\n        {\n            if (!CombineFilter(other)) return default;\n\n            SpicedHook? hook = other.GetHook<SpicedHook>();\n            int bonus = hook is null ? (int)Mathf.Ceil(other.healthChange / 4f) : hook.HealthBonus;\n            return new CustomTooltip($"+{bonus}", Color.green);\n        }\n\n        private class SpicedHook : HookBase<InvItem>\n        {\n            protected override void Initialize()\n                => HealthBonus = (int)Mathf.Ceil(Instance.healthChange / 4f);\n\n            public int HealthBonus { get; private set; }\n            public int Spiciness { get; private set; }\n\n            public void IncreaseSpiciness()\n            {\n                if (Spiciness is 3) return;\n\n                Spiciness++;\n                Instance.healthChange += HealthBonus;\n            }\n        }\n    }\n}\n'}}]);