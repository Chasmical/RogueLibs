"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[8993],{8025:(e,t,s)=>{s.r(t),s.d(t,{assets:()=>h,contentTitle:()=>d,default:()=>g,frontMatter:()=>c,metadata:()=>u,toc:()=>m});var n=s(5893),i=s(1151),r=s(5878),a=s(1016),o=(s(4996),s(4214));const l='using System.Collections;\n\nnamespace RogueLibsCore.Test\n{\n    public class NewHealthOrder : CustomDisaster\n    {\n        [RLSetup]\n        public static void Setup()\n        {\n            RogueLibs.CreateCustomDisaster<NewHealthOrder>()\n                     .WithName(new CustomNameInfo\n                     {\n                         English = "New Health Order",\n                     })\n                     .WithDescription(new CustomNameInfo\n                     {\n                         English = "Where is this line used?!",\n                     })\n                     .WithMessage(new CustomNameInfo\n                     {\n                         English = "N.H.O. - New Health Order",\n                     })\n                     .WithMessage(new CustomNameInfo\n                     {\n                         English = "Resurrection for everyone!",\n                     })\n                     .WithRemovalMutator();\n        }\n\n        public override void Start() { }\n        public override void Finish() { }\n\n        public override IEnumerator Updating()\n        {\n            foreach (Agent agent in gc.agentList)\n                if (!agent.dead && !agent.electronic && !agent.inhuman)\n                {\n                    agent.statusEffects.AddStatusEffect(VanillaEffects.Resurrection, false);\n                }\n            yield break;\n        }\n    }\n}\n',c={},d="Creating a Custom Disaster",u={id:"dev/disasters/create-disaster",title:"Creating a Custom Disaster",description:"You can create your own custom disasters using a CustomDisaster class, provided by RogueLibs. You can configure the disaster's name, description and both of the messages that are displayed at the beginning of the floor. And, of course, you can determine the conditions that the disaster can (or must) happen under, and what happens at the start of and during this disaster. Additionally, you can quickly and easily create a removal mutator that removes your disaster from the pool.",source:"@site/docs/dev/disasters/create-disaster.mdx",sourceDirName:"dev/disasters",slug:"/dev/disasters/create-disaster",permalink:"/RogueLibs/docs/dev/disasters/create-disaster",draft:!1,unlisted:!1,editUrl:"https://github.com/Chasmical/RogueLibs/edit/main/website/docs/dev/disasters/create-disaster.mdx",tags:[],version:"current",frontMatter:{},sidebar:"documentationSidebar",previous:{title:"Creating a Custom Interaction",permalink:"/RogueLibs/docs/dev/interactions/create-interaction"},next:{title:"Custom Unlocks",permalink:"/RogueLibs/docs/dev/unlocks/custom-unlocks"}},h={},m=[{value:"<code>CustomDisaster</code> class",id:"customdisaster",level:2},{value:"Disaster Conditions",id:"disaster-conditions",level:2},{value:"Disaster Settings",id:"disaster-settings",level:2},{value:"Initialization",id:"initialization",level:2},{value:"Examples",id:"examples",level:2}];function p(e){const t={a:"a",admonition:"admonition",code:"code",em:"em",h1:"h1",h2:"h2",li:"li",mdxAdmonitionTitle:"mdxAdmonitionTitle",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,i.a)(),...e.components};return(0,n.jsxs)(n.Fragment,{children:[(0,n.jsx)(t.h1,{id:"creating-a-custom-disaster",children:"Creating a Custom Disaster"}),"\n",(0,n.jsxs)(t.p,{children:["You can create your own custom disasters using a ",(0,n.jsx)(t.code,{children:"CustomDisaster"})," class, provided by RogueLibs. You can configure the disaster's name, description and both of the messages that are displayed at the beginning of the floor. And, of course, you can determine the conditions that the disaster can (or must) happen under, and what happens at the start of and during this disaster. Additionally, you can quickly and easily create a removal mutator that removes your disaster from the pool."]}),"\n","\n",(0,n.jsxs)(t.h2,{id:"customdisaster",children:[(0,n.jsx)(t.code,{children:"CustomDisaster"})," class"]}),"\n",(0,n.jsxs)(t.p,{children:["To make a custom disaster, you need to create a class deriving from ",(0,n.jsx)(t.code,{children:"CustomDisaster"}),":"]}),"\n",(0,n.jsx)(t.pre,{children:(0,n.jsx)(t.code,{className:"language-csharp",metastring:'title="MyCustomDisaster.cs"',children:"// highlight-next-line\npublic class MyCustomDisaster : CustomDisaster\n{\n    /* ... */\n}\n"})}),"\n",(0,n.jsx)(t.p,{children:"There are 3 methods that you need to implement:"}),"\n",(0,n.jsx)(t.pre,{children:(0,n.jsx)(t.code,{className:"language-csharp",metastring:'title="MyCustomDisaster.cs"',children:"public class MyCustomDisaster : CustomDisaster\n{\n    // highlight-start\n    public override void Start() { /* ... */ }\n    public override void Finish() { /* ... */ }\n    public override IEnumerator? Updating() { /* ... */ }\n    // highlight-end\n}\n"})}),"\n",(0,n.jsxs)(t.p,{children:[(0,n.jsx)(t.code,{children:"Start"})," is called when the disaster starts. ",(0,n.jsx)(t.code,{children:"Finish"})," is called when the disaster ends."]}),"\n",(0,n.jsxs)(t.admonition,{type:"caution",children:[(0,n.jsxs)(t.mdxAdmonitionTitle,{children:[(0,n.jsx)(t.code,{children:"Start"})," and ",(0,n.jsx)(t.code,{children:"Finish"})," methods"]}),(0,n.jsx)(t.p,{children:"These methods are called between levels, so some stuff might not be available at the time they're called."})]}),"\n",(0,n.jsxs)(t.p,{children:[(0,n.jsx)(t.code,{children:"Updating"})," returns the updating coroutine for the disaster. It starts ",(0,n.jsx)(t.strong,{children:"after the disaster's notification"}),". It is stopped automatically, when the disaster ends. If your disaster doesn't need updating, you can just return ",(0,n.jsx)(t.code,{children:"null"}),"."]}),"\n",(0,n.jsx)(t.h2,{id:"disaster-conditions",children:"Disaster Conditions"}),"\n",(0,n.jsxs)(t.p,{children:["If you want your disaster to appear only under certain conditions, override the ",(0,n.jsx)(t.code,{children:"Test"})," method:"]}),"\n",(0,n.jsx)(t.pre,{children:(0,n.jsx)(t.code,{className:"language-csharp",metastring:'title="MyCustomDisaster.cs"',children:"public class MyCustomDisaster : CustomDisaster\n{\n    // highlight-start\n    public override bool Test()\n    {\n        // for example, if it's a Park level\n        return CurrentDistrict == 2;\n    }\n    // highlight-end\n}\n"})}),"\n",(0,n.jsxs)(t.admonition,{type:"info",children:[(0,n.jsxs)(t.p,{children:[(0,n.jsx)(t.code,{children:"CustomDisaster"})," exposes several useful properties for that:"]}),(0,n.jsxs)(t.ul,{children:["\n",(0,n.jsxs)(t.li,{children:[(0,n.jsx)(t.code,{children:"CurrentDistrict"})," - index of the current level's district.\n",(0,n.jsxs)(t.em,{children:["(",(0,n.jsx)(t.code,{children:"0"})," - Slums, ",(0,n.jsx)(t.code,{children:"1"})," - Industrial, ",(0,n.jsx)(t.code,{children:"2"})," - Park, ",(0,n.jsx)(t.code,{children:"3"})," - Downtown, ",(0,n.jsx)(t.code,{children:"4"})," - Uptown, ",(0,n.jsx)(t.code,{children:"5"})," - Mayor Village)"]})]}),"\n",(0,n.jsxs)(t.li,{children:[(0,n.jsx)(t.code,{children:"CurrentFloor"})," - index of the current level's floor of the district.\n",(0,n.jsxs)(t.em,{children:["(",(0,n.jsx)(t.code,{children:"0"}),", ",(0,n.jsx)(t.code,{children:"1"})," or ",(0,n.jsx)(t.code,{children:"2"})," in a normal playthrough, and ",(0,n.jsx)(t.code,{children:"0"})," or ",(0,n.jsx)(t.code,{children:"1"}),' with "Quick Game" mutator on)']})]}),"\n",(0,n.jsxs)(t.li,{children:[(0,n.jsx)(t.code,{children:"CurrentLevel"})," - index of the current level.\n",(0,n.jsxs)(t.em,{children:["(",(0,n.jsx)(t.code,{children:"0-2"})," - Slums, ",(0,n.jsx)(t.code,{children:"3-5"})," - Industrial, ",(0,n.jsx)(t.code,{children:"6-8"})," - Park, ",(0,n.jsx)(t.code,{children:"9-11"})," - Downtown, ",(0,n.jsx)(t.code,{children:"12-14"})," - Uptown, ",(0,n.jsx)(t.code,{children:"15"})," - Mayor Village)"]}),"\n",(0,n.jsxs)(t.em,{children:["(or ",(0,n.jsx)(t.code,{children:"0-1"}),", ",(0,n.jsx)(t.code,{children:"2-3"}),", ",(0,n.jsx)(t.code,{children:"4-5"}),", ",(0,n.jsx)(t.code,{children:"6-7"}),", ",(0,n.jsx)(t.code,{children:"8-9"}),", ",(0,n.jsx)(t.code,{children:"10"})," if Quick Game is on), and more in Endless mode)"]})]}),"\n"]})]}),"\n",(0,n.jsxs)(t.p,{children:["And, if you want to force your disaster onto a level, override the ",(0,n.jsx)(t.code,{children:"TestForced"})," method."]}),"\n",(0,n.jsx)(t.pre,{children:(0,n.jsx)(t.code,{className:"language-csharp",metastring:'title="MyCustomDisaster.cs"',children:"public class MyCustomDisaster : CustomDisaster\n{\n    // highlight-start\n    public override bool TestForced()\n    {\n        // for example, if there's a Mayor on the level\n        return gc.agentList.Exists(a => a.agentName === VanillaAgents.Mayor);\n    }\n    // highlight-end\n}\n"})}),"\n",(0,n.jsx)(t.admonition,{title:"Current limitations",type:"caution",children:(0,n.jsxs)(t.p,{children:["At the moment, ",(0,n.jsx)(t.code,{children:"TestForced"})," cannot force a disaster onto a non-disastrous level. It only works on levels that normally have disasters: *-3 (or *-2 with Quick Game on), or every level with the Disasters Every Level mutator."]})}),"\n",(0,n.jsx)(t.h2,{id:"disaster-settings",children:"Disaster Settings"}),"\n",(0,n.jsxs)(t.p,{children:["Normally, you can't teleport during disasters, but you can change that by overriding the ",(0,n.jsx)(t.code,{children:"AllowTeleport"})," property:"]}),"\n",(0,n.jsx)(t.pre,{children:(0,n.jsx)(t.code,{className:"language-csharp",metastring:'title="MyCustomDisaster.cs"',children:"public class MyCustomDisaster : CustomDisaster\n{\n    // highlight-start\n    public override bool AllowTeleport => true;\n    // highlight-end\n}\n"})}),"\n",(0,n.jsx)(t.p,{children:"The property is accessed constantly, so you can change the return value with time."}),"\n",(0,n.jsx)(t.h2,{id:"initialization",children:"Initialization"}),"\n",(0,n.jsxs)(t.p,{children:["Just call the ",(0,n.jsx)(t.code,{children:"CreateCustomDisaster"})," method with your disaster's type as a parameter:"]}),"\n",(0,n.jsx)(t.pre,{children:(0,n.jsx)(t.code,{className:"language-csharp",metastring:'title="MyCustomDisaster.cs"',children:"public class MyCustomDisaster : CustomDisaster\n{\n    [RLSetup]\n    public static void Setup()\n    {\n        // highlight-next-line\n        RogueLibs.CreateCustomDisaster<MyCustomDisaster>();\n    }\n}\n"})}),"\n",(0,n.jsx)(t.admonition,{type:"note",children:(0,n.jsxs)(t.p,{children:["See more about the ",(0,n.jsx)(t.code,{children:"RLSetup"})," attribute ",(0,n.jsx)(t.a,{href:"../patching-utilities#rlsetup",children:"here"}),"."]})}),"\n",(0,n.jsxs)(t.p,{children:["You can set your disaster's name and description using ",(0,n.jsx)(t.code,{children:"WithName"})," and ",(0,n.jsx)(t.code,{children:"WithDescription"})," methods:"]}),"\n",(0,n.jsx)(t.pre,{children:(0,n.jsx)(t.code,{className:"language-csharp",metastring:'title="MyCustomDisaster.cs"',children:'public class MyCustomDisaster : CustomDisaster\n{\n    [RLSetup]\n    public static void Setup()\n    {\n        RogueLibs.CreateCustomDisaster<MyCustomDisaster>()\n            // highlight-start\n            .WithName(new CustomNameInfo("My Custom Disaster"))\n            .WithDescription(new CustomNameInfo("My Custom Disaster is very cool and does a lot of great stuff"));\n            // highlight-end\n    }\n}\n'})}),"\n",(0,n.jsx)(t.p,{children:"Plus, you can add two messages (they are displayed at the same time, on two lines):"}),"\n",(0,n.jsx)(t.pre,{children:(0,n.jsx)(t.code,{className:"language-csharp",metastring:'title="MyCustomDisaster.cs"',children:'public class MyCustomDisaster : CustomDisaster\n{\n    [RLSetup]\n    public static void Setup()\n    {\n        RogueLibs.CreateCustomDisaster<MyCustomDisaster>()\n            .WithName(new CustomNameInfo("My Custom Disaster"))\n            .WithDescription(new CustomNameInfo("My Custom Disaster is very cool and does a lot of great stuff"))\n            // highlight-start\n            .WithMessage(new CustomNameInfo("My Custom Disaster!"))\n            .WithMessage(new CustomNameInfo("Watch out for... uh, something dangerous!"));\n            // highlight-end\n    }\n}\n'})}),"\n",(0,n.jsx)(t.admonition,{type:"info",children:(0,n.jsxs)(t.p,{children:["See ",(0,n.jsx)(t.a,{href:"../names/custom-names",children:"Custom Names"})," for more info."]})}),"\n",(0,n.jsx)(t.p,{children:"You can also create a removal mutator automatically:"}),"\n",(0,n.jsx)(t.pre,{children:(0,n.jsx)(t.code,{className:"language-csharp",metastring:'title="MyCustomDisaster.cs"',children:'public class MyCustomDisaster : CustomDisaster\n{\n    [RLSetup]\n    public static void Setup()\n    {\n        RogueLibs.CreateCustomDisaster<MyCustomDisaster>()\n            .WithName(new CustomNameInfo("My Custom Disaster"))\n            .WithDescription(new CustomNameInfo("My Custom Disaster is very cool and does a lot of great stuff"))\n            .WithMessage(new CustomNameInfo("My Custom Disaster!"))\n            .WithMessage(new CustomNameInfo("Watch out for... uh, something dangerous!"))\n            // highlight-next-line\n            .WithRemovalMutator();\n    }\n}\n'})}),"\n",(0,n.jsx)(t.h2,{id:"examples",children:"Examples"}),"\n","\n","\n","\n",(0,n.jsx)(r.Z,{defaultValue:"newhealthorder",values:[{label:"New Health Order",value:"newhealthorder"}],children:(0,n.jsxs)(a.Z,{value:"newhealthorder",children:[(0,n.jsx)(t.p,{children:"A simple disaster that just gives everyone Resurrection after the notification."}),(0,n.jsx)(o.Z,{children:l})]})})]})}function g(e={}){const{wrapper:t}={...(0,i.a)(),...e.components};return t?(0,n.jsx)(t,{...e,children:(0,n.jsx)(p,{...e})}):p(e)}},4214:(e,t,s)=>{s.d(t,{Z:()=>r});s(7294);var n=s(9286),i=s(5893);function r(e){let{children:t,language:s}=e;return(0,i.jsx)(n.Z,{className:"language-"+(s||"csharp"),children:t.replace(/\t/g,"    ")})}},1016:(e,t,s)=>{s.d(t,{Z:()=>i});s(7294);var n=s(5893);function i(e){let{children:t,...s}=e;return(0,n.jsx)("div",{role:"tabpanel",...s,children:t})}},5878:(e,t,s)=>{s.d(t,{Z:()=>v});var n=s(7294),i=s(6550),r=s(469),a=s(1980),o=s(7392),l=s(12);function c(e){return function(e){return n.Children.toArray(e).filter((e=>"\n"!==e)).map((e=>{if(!e||(0,n.isValidElement)(e)&&function(e){const{props:t}=e;return!!t&&"object"==typeof t&&"value"in t}(e))return e;throw new Error(`Docusaurus error: Bad <Tabs> child <${"string"==typeof e.type?e.type:e.type.name}>: all children of the <Tabs> component should be <TabItem>, and every <TabItem> should have a unique "value" prop.`)}))?.filter(Boolean)??[]}(e).map((e=>{let{props:{value:t,label:s,attributes:n,default:i}}=e;return{value:t,label:s,attributes:n,default:i}}))}function d(e){const{values:t,children:s}=e;return(0,n.useMemo)((()=>{const e=t??c(s);return function(e){const t=(0,o.l)(e,((e,t)=>e.value===t.value));if(t.length>0)throw new Error(`Docusaurus error: Duplicate values "${t.map((e=>e.value)).join(", ")}" found in <Tabs>. Every value needs to be unique.`)}(e),e}),[t,s])}function u(e){let{value:t,tabValues:s}=e;return s.some((e=>e.value===t))}function h(e){let{queryString:t=!1,groupId:s}=e;const r=(0,i.k6)(),o=function(e){let{queryString:t=!1,groupId:s}=e;if("string"==typeof t)return t;if(!1===t)return null;if(!0===t&&!s)throw new Error('Docusaurus error: The <Tabs> component groupId prop is required if queryString=true, because this value is used as the search param name. You can also provide an explicit value such as queryString="my-search-param".');return s??null}({queryString:t,groupId:s});return[(0,a._X)(o),(0,n.useCallback)((e=>{if(!o)return;const t=new URLSearchParams(r.location.search);t.set(o,e),r.replace({...r.location,search:t.toString()})}),[o,r])]}function m(e){const{defaultValue:t,queryString:s=!1,groupId:i}=e,a=d(e),[o,c]=(0,n.useState)((()=>function(e){let{defaultValue:t,tabValues:s}=e;if(0===s.length)throw new Error("Docusaurus error: the <Tabs> component requires at least one <TabItem> children component");if(t){if(!u({value:t,tabValues:s}))throw new Error(`Docusaurus error: The <Tabs> has a defaultValue "${t}" but none of its children has the corresponding value. Available values are: ${s.map((e=>e.value)).join(", ")}. If you intend to show no default tab, use defaultValue={null} instead.`);return t}const n=s.find((e=>e.default))??s[0];if(!n)throw new Error("Unexpected error: 0 tabValues");return n.value}({defaultValue:t,tabValues:a}))),[m,p]=h({queryString:s,groupId:i}),[g,f]=function(e){let{groupId:t}=e;const s=function(e){return e?`docusaurus.tab.${e}`:null}(t),[i,r]=(0,l.Nk)(s);return[i,(0,n.useCallback)((e=>{s&&r.set(e)}),[s,r])]}({groupId:i}),x=(()=>{const e=m??g;return u({value:e,tabValues:a})?e:null})();(0,r.Z)((()=>{x&&c(x)}),[x]);return{selectedValue:o,selectValue:(0,n.useCallback)((e=>{if(!u({value:e,tabValues:a}))throw new Error(`Can't select invalid tab value=${e}`);c(e),p(e),f(e)}),[p,f,a]),tabValues:a}}var p=s(512);const g={tabItem:"tabItem_V91s",tabItemActive:"tabItemActive_JsUu",blink:"blink_ZPVS",tab:"tab_ntnM"};var f=s(5893);const x={left:37,right:39};function v(e){const{lazy:t,defaultValue:s,values:i,groupId:r}=e,a=n.Children.toArray(e.children),{tabValues:o,selectedValue:l,selectValue:c}=m({children:a,defaultValue:s,values:i,groupId:r}),d=[],u=e=>{const t=e.currentTarget,s=i[d.indexOf(t)].value;c(s),null!=r&&setTimeout((()=>{(function(e){const{top:t,left:s,bottom:n,right:i}=e.getBoundingClientRect(),{innerHeight:r,innerWidth:a}=window;return t>=0&&i<=a&&n<=r&&s>=0})(t)||(t.scrollIntoView({block:"center",behavior:"smooth"}),t.classList.add(g.tabItemActive),setTimeout((()=>t.classList.remove(g.tabItemActive)),2e3))}),150)},h=e=>{let t;switch(e.keyCode){case x.right:{const s=d.indexOf(e.target)+1;t=d[s]||d[0];break}case x.left:{const s=d.indexOf(e.target)-1;t=d[s]||d[d.length-1];break}default:return}t.focus()},v=(e,t)=>t.value===e||t.values&&-1!=t.values.indexOf(e);return(0,f.jsxs)("div",{className:"tabs-container",children:[(0,f.jsx)("ul",{role:"tablist","aria-orientation":"horizontal",className:"tabs",children:i.map((e=>{let{value:t,label:s}=e;return(0,f.jsx)("li",{role:"tab",tabIndex:l===t?0:-1,"aria-selected":l===t,className:(0,p.Z)("tabs__item",g.tabItem,{"tabs__item--active":l===t}),ref:e=>e&&d.push(e),onKeyDown:h,onFocus:u,onClick:u,children:s},t)}))}),t?n.cloneElement(a.find((e=>v(l,e.props))),{className:g.tab}):(0,f.jsx)("div",{children:a.map(((e,t)=>n.cloneElement(e,{key:t,hidden:!v(l,e.props),className:g.tab})))}),(0,f.jsx)("br",{})]})}}}]);