"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[1590],{387:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>h,contentTitle:()=>d,default:()=>g,frontMatter:()=>c,metadata:()=>u,toc:()=>m});var a=n(5893),i=n(1151),r=n(5878),s=n(1016),o=(n(4996),n(4214));const l='using System;\n\nnamespace RogueLibsCore.Test\n{\n    public class Smoker : CustomTrait, ITraitUpdateable\n    {\n        [RLSetup]\n        public static void Setup()\n        {\n            RogueLibs.CreateCustomTrait<Smoker>()\n                .WithName(new CustomNameInfo("Smoker"))\n                .WithDescription(new CustomNameInfo("Randomly cough, alerting enemies"))\n                .WithUnlock(new TraitUnlock { CharacterCreationCost = -4 });\n\n            RogueLibs.CreateCustomName("Smoker_Cough1", NameTypes.Dialogue, new CustomNameInfo("*Cough*"));\n            RogueLibs.CreateCustomName("Smoker_Cough2", NameTypes.Dialogue, new CustomNameInfo("*Cough* *CouGH*"));\n            RogueLibs.CreateCustomName("Smoker_Cough3", NameTypes.Dialogue, new CustomNameInfo("*coUGH* *COUgh*"));\n        }\n\n        public override void OnAdded() { }\n        public override void OnRemoved() { }\n        public void OnUpdated(TraitUpdatedArgs e)\n        {\n            e.UpdateDelay = 5f;\n\n            int rnd = new Random().Next(0, 5);\n            if (rnd == 0)\n            {\n                rnd = new Random().Next(3) + 1;\n                Owner.SayDialogue($"Smoker_Cough{rnd}");\n                gc.audioHandler.Play(Owner, VanillaAudio.AgentAnnoyed);\n\n                Noise noise = gc.spawnerMain.SpawnNoise(Owner.tr.position, 1f, Owner, "Attract", Owner);\n                noise.distraction = true;\n            }\n        }\n    }\n}\n',c={},d="Creating a Custom Trait",u={id:"dev/traits/create-trait",title:"Creating a Custom Trait",description:"RogueLibs provides classes and methods to create custom traits, and an interface to make traits updateable. Just like items, custom traits derive from a hook class, CustomTrait, and their functionality can be expanded with interfaces: ITraitUpdateable, just one in this case. If you want the trait to have some kind of a passive effect, then you might need to patch that in yourself.",source:"@site/docs/dev/traits/create-trait.mdx",sourceDirName:"dev/traits",slug:"/dev/traits/create-trait",permalink:"/RogueLibs/docs/dev/traits/create-trait",draft:!1,unlisted:!1,editUrl:"https://github.com/Chasmical/RogueLibs/edit/main/website/docs/dev/traits/create-trait.mdx",tags:[],version:"current",frontMatter:{},sidebar:"documentationSidebar",previous:{title:"Targetable Abilities",permalink:"/RogueLibs/docs/dev/items/abilities/targetable-abilities"},next:{title:"Creating a Custom Effect",permalink:"/RogueLibs/docs/dev/traits/create-effect"}},h={},m=[{value:"<code>CustomTrait</code> class",id:"customtrait",level:2},{value:"Updating",id:"updating",level:2},{value:"Initialization",id:"initialization",level:2},{value:"Unlock Properties",id:"unlock-properties",level:2},{value:"Examples",id:"examples",level:2}];function p(e){const t={a:"a",admonition:"admonition",code:"code",h1:"h1",h2:"h2",p:"p",pre:"pre",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",...(0,i.a)(),...e.components};return(0,a.jsxs)(a.Fragment,{children:[(0,a.jsx)(t.h1,{id:"creating-a-custom-trait",children:"Creating a Custom Trait"}),"\n",(0,a.jsxs)(t.p,{children:["RogueLibs provides classes and methods to create custom traits, and an interface to make traits updateable. Just like items, custom traits derive from a hook class, ",(0,a.jsx)(t.code,{children:"CustomTrait"}),", and their functionality can be expanded with interfaces: ",(0,a.jsx)(t.code,{children:"ITraitUpdateable"}),", just one in this case. If you want the trait to have some kind of a passive effect, then you might need to patch that in yourself."]}),"\n","\n",(0,a.jsxs)(t.h2,{id:"customtrait",children:[(0,a.jsx)(t.code,{children:"CustomTrait"})," class"]}),"\n",(0,a.jsxs)(t.p,{children:["To make a custom trait, you need to create a class deriving from ",(0,a.jsx)(t.code,{children:"CustomTrait"}),":"]}),"\n",(0,a.jsx)(t.pre,{children:(0,a.jsx)(t.code,{className:"language-csharp",metastring:'title="MyCustomTrait.cs"',children:"// highlight-next-line\npublic class MyCustomTrait : CustomTrait\n{\n    /* ... */\n}\n"})}),"\n",(0,a.jsx)(t.p,{children:"There are 2 methods that you need to implement:"}),"\n",(0,a.jsx)(t.pre,{children:(0,a.jsx)(t.code,{className:"language-csharp",metastring:'title="MyCustomTrait.cs"',children:"public class MyCustomTrait : CustomTrait\n{\n    // highlight-start\n    public override void OnAdded() { /* ... */ }\n    public override void OnRemoved() { /* ... */ }\n    // highlight-end\n}\n"})}),"\n",(0,a.jsxs)(t.p,{children:[(0,a.jsx)(t.code,{children:"OnAdded"})," is called when the trait is added to a character, and ",(0,a.jsx)(t.code,{children:"OnRemoved"})," is called when it's removed from a character."]}),"\n",(0,a.jsx)(t.h2,{id:"updating",children:"Updating"}),"\n",(0,a.jsxs)(t.p,{children:["You can make your trait updateable by implementing the ",(0,a.jsx)(t.code,{children:"ITraitUpdateable"})," interface:"]}),"\n",(0,a.jsx)(t.pre,{children:(0,a.jsx)(t.code,{className:"language-csharp",metastring:'title="MyCustomTrait.cs"',children:"public class MyCustomTrait : CustomTrait, ITraitUpdateable\n{\n    public void OnUpdated(TraitUpdatedArgs e) { /* ... */ }\n}\n"})}),"\n",(0,a.jsxs)(t.p,{children:[(0,a.jsx)(t.code,{children:"OnUpdated"})," works like Unity's ",(0,a.jsx)(t.code,{children:"Update"}),", but with a settable interval (default is 1 second):"]}),"\n",(0,a.jsx)(t.pre,{children:(0,a.jsx)(t.code,{className:"language-csharp",children:"    public void OnUpdated(TraitUpdatedArgs e)\n    {\n        // highlight-next-line\n        e.UpdateDelay = 0.5f; // 2 updates per second\n        /* ... */\n    }\n"})}),"\n",(0,a.jsx)(t.h2,{id:"initialization",children:"Initialization"}),"\n",(0,a.jsxs)(t.p,{children:["Just call the ",(0,a.jsx)(t.code,{children:"CreateCustomTrait"})," method with your trait's type as a parameter:"]}),"\n",(0,a.jsx)(t.pre,{children:(0,a.jsx)(t.code,{className:"language-csharp",metastring:'title="MyCustomTrait.cs"',children:"public class MyCustomTrait : CustomTrait\n{\n    [RLSetup]\n    public static void Setup()\n    {\n        // highlight-next-line\n        RogueLibs.CreateCustomTrait<MyCustomTrait>();\n    }\n}\n"})}),"\n",(0,a.jsx)(t.admonition,{type:"note",children:(0,a.jsxs)(t.p,{children:["See more about the ",(0,a.jsx)(t.code,{children:"RLSetup"})," attribute ",(0,a.jsx)(t.a,{href:"../patching-utilities#rlsetup",children:"here"}),"."]})}),"\n",(0,a.jsxs)(t.p,{children:["You can set your trait's name and description using ",(0,a.jsx)(t.code,{children:"WithName"})," and ",(0,a.jsx)(t.code,{children:"WithDescription"})," methods:"]}),"\n",(0,a.jsx)(t.pre,{children:(0,a.jsx)(t.code,{className:"language-csharp",metastring:'title="MyCustomTrait.cs"',children:'public class MyCustomTrait : CustomTrait\n{\n    [RLSetup]\n    public static void Setup()\n    {\n        RogueLibs.CreateCustomTrait<MyCustomTrait>()\n            // highlight-start\n            .WithName(new CustomNameInfo("My Custom Trait"))\n            .WithDescription(new CustomNameInfo("My Custom Trait is very cool and does a lot of great stuff"));\n            // highlight-end\n    }\n}\n'})}),"\n",(0,a.jsx)(t.p,{children:"You can do the same with sprites and unlocks:"}),"\n",(0,a.jsx)(t.pre,{children:(0,a.jsx)(t.code,{className:"language-csharp",metastring:'title="MyCustomTrait.cs"',children:'public class MyCustomTrait : CustomTrait\n{\n    [RLSetup]\n    public static void Setup()\n    {\n        RogueLibs.CreateCustomTrait<MyCustomTrait>()\n            .WithName(new CustomNameInfo("My Custom Trait"))\n            .WithDescription(new CustomNameInfo("My Custom Trait is very cool and does a lot of great stuff"))\n            // highlight-start\n            // the sprite will be displayed only in the menus (optional)\n            .WithSprite(Properties.Resources.MyCustomTrait)\n            .WithUnlock(new TraitUnlock { UnlockCost = 10, CharacterCreationCost = 5 });\n            // highlight-end\n    }\n}\n'})}),"\n",(0,a.jsx)(t.admonition,{type:"info",children:(0,a.jsxs)(t.p,{children:["See ",(0,a.jsx)(t.a,{href:"../names/custom-names",children:"Custom Names"}),", ",(0,a.jsx)(t.a,{href:"../custom-sprites",children:"Custom Sprites"})," for more info."]})}),"\n",(0,a.jsx)(t.h2,{id:"unlock-properties",children:"Unlock Properties"}),"\n",(0,a.jsxs)(t.p,{children:["You can use the following properties when initializing ",(0,a.jsx)(t.code,{children:"TraitUnlock"}),"s:"]}),"\n",(0,a.jsxs)(t.table,{children:[(0,a.jsx)(t.thead,{children:(0,a.jsxs)(t.tr,{children:[(0,a.jsx)(t.th,{children:"Property"}),(0,a.jsx)(t.th,{children:"Default"}),(0,a.jsx)(t.th,{children:"Description"})]})}),(0,a.jsxs)(t.tbody,{children:[(0,a.jsxs)(t.tr,{children:[(0,a.jsx)(t.td,{children:(0,a.jsx)(t.code,{children:"UnlockCost"})}),(0,a.jsx)(t.td,{children:(0,a.jsx)(t.code,{children:"0"})}),(0,a.jsx)(t.td,{children:"Unlock cost of the trait, in nuggets. If set to 0, it will unlock automatically, once all prerequisites are unlocked."})]}),(0,a.jsxs)(t.tr,{children:[(0,a.jsx)(t.td,{children:(0,a.jsx)(t.code,{children:"CharacterCreationCost"})}),(0,a.jsx)(t.td,{children:(0,a.jsx)(t.code,{children:"1"})}),(0,a.jsx)(t.td,{children:"Cost of the trait in Character Creation, in points."})]}),(0,a.jsxs)(t.tr,{children:[(0,a.jsx)(t.td,{children:(0,a.jsx)(t.code,{children:"IsAvailable"})}),(0,a.jsx)(t.td,{children:(0,a.jsx)(t.code,{children:"true"})}),(0,a.jsxs)(t.td,{children:["Determines whether the trait is available in the Traits menu and on level-ups. If the trait is negative, set it to ",(0,a.jsx)(t.code,{children:"false"}),"."]})]}),(0,a.jsxs)(t.tr,{children:[(0,a.jsx)(t.td,{children:(0,a.jsx)(t.code,{children:"IsAvailableInCC"})}),(0,a.jsx)(t.td,{children:(0,a.jsx)(t.code,{children:"true"})}),(0,a.jsx)(t.td,{children:"Determines whether the trait is available in the Character Creation menu."})]}),(0,a.jsxs)(t.tr,{children:[(0,a.jsx)(t.td,{children:(0,a.jsx)(t.code,{children:"Cancellations"})}),(0,a.jsx)(t.td,{}),(0,a.jsx)(t.td,{children:"Determines what traits cannot co-exist with this trait."})]}),(0,a.jsxs)(t.tr,{children:[(0,a.jsx)(t.td,{children:(0,a.jsx)(t.code,{children:"Prerequisites"})}),(0,a.jsx)(t.td,{}),(0,a.jsx)(t.td,{children:"Determines what unlocks must be unlocked in order to unlock this trait."})]}),(0,a.jsxs)(t.tr,{children:[(0,a.jsx)(t.td,{children:(0,a.jsx)(t.code,{children:"Recommendations"})}),(0,a.jsx)(t.td,{}),(0,a.jsx)(t.td,{children:"Just shows these unlocks in a separate Recommendations paragraph in the menus."})]})]})]}),"\n",(0,a.jsx)(t.p,{children:"Other properties should not be used during initialization."}),"\n",(0,a.jsx)(t.h2,{id:"examples",children:"Examples"}),"\n","\n","\n","\n",(0,a.jsx)(r.Z,{defaultValue:"smoker",values:[{label:"Smoker",value:"smoker"}],children:(0,a.jsx)(s.Z,{value:"smoker",children:(0,a.jsx)(o.Z,{children:l})})})]})}function g(e={}){const{wrapper:t}={...(0,i.a)(),...e.components};return t?(0,a.jsx)(t,{...e,children:(0,a.jsx)(p,{...e})}):p(e)}},4214:(e,t,n)=>{n.d(t,{Z:()=>r});n(7294);var a=n(9286),i=n(5893);function r(e){let{children:t,language:n}=e;return(0,i.jsx)(a.Z,{className:"language-"+(n||"csharp"),children:t.replace(/\t/g,"    ")})}},1016:(e,t,n)=>{n.d(t,{Z:()=>i});n(7294);var a=n(5893);function i(e){let{children:t,...n}=e;return(0,a.jsx)("div",{role:"tabpanel",...n,children:t})}},5878:(e,t,n)=>{n.d(t,{Z:()=>f});var a=n(7294),i=n(6550),r=n(469),s=n(1980),o=n(7392),l=n(12);function c(e){return function(e){return a.Children.toArray(e).filter((e=>"\n"!==e)).map((e=>{if(!e||(0,a.isValidElement)(e)&&function(e){const{props:t}=e;return!!t&&"object"==typeof t&&"value"in t}(e))return e;throw new Error(`Docusaurus error: Bad <Tabs> child <${"string"==typeof e.type?e.type:e.type.name}>: all children of the <Tabs> component should be <TabItem>, and every <TabItem> should have a unique "value" prop.`)}))?.filter(Boolean)??[]}(e).map((e=>{let{props:{value:t,label:n,attributes:a,default:i}}=e;return{value:t,label:n,attributes:a,default:i}}))}function d(e){const{values:t,children:n}=e;return(0,a.useMemo)((()=>{const e=t??c(n);return function(e){const t=(0,o.l)(e,((e,t)=>e.value===t.value));if(t.length>0)throw new Error(`Docusaurus error: Duplicate values "${t.map((e=>e.value)).join(", ")}" found in <Tabs>. Every value needs to be unique.`)}(e),e}),[t,n])}function u(e){let{value:t,tabValues:n}=e;return n.some((e=>e.value===t))}function h(e){let{queryString:t=!1,groupId:n}=e;const r=(0,i.k6)(),o=function(e){let{queryString:t=!1,groupId:n}=e;if("string"==typeof t)return t;if(!1===t)return null;if(!0===t&&!n)throw new Error('Docusaurus error: The <Tabs> component groupId prop is required if queryString=true, because this value is used as the search param name. You can also provide an explicit value such as queryString="my-search-param".');return n??null}({queryString:t,groupId:n});return[(0,s._X)(o),(0,a.useCallback)((e=>{if(!o)return;const t=new URLSearchParams(r.location.search);t.set(o,e),r.replace({...r.location,search:t.toString()})}),[o,r])]}function m(e){const{defaultValue:t,queryString:n=!1,groupId:i}=e,s=d(e),[o,c]=(0,a.useState)((()=>function(e){let{defaultValue:t,tabValues:n}=e;if(0===n.length)throw new Error("Docusaurus error: the <Tabs> component requires at least one <TabItem> children component");if(t){if(!u({value:t,tabValues:n}))throw new Error(`Docusaurus error: The <Tabs> has a defaultValue "${t}" but none of its children has the corresponding value. Available values are: ${n.map((e=>e.value)).join(", ")}. If you intend to show no default tab, use defaultValue={null} instead.`);return t}const a=n.find((e=>e.default))??n[0];if(!a)throw new Error("Unexpected error: 0 tabValues");return a.value}({defaultValue:t,tabValues:s}))),[m,p]=h({queryString:n,groupId:i}),[g,b]=function(e){let{groupId:t}=e;const n=function(e){return e?`docusaurus.tab.${e}`:null}(t),[i,r]=(0,l.Nk)(n);return[i,(0,a.useCallback)((e=>{n&&r.set(e)}),[n,r])]}({groupId:i}),x=(()=>{const e=m??g;return u({value:e,tabValues:s})?e:null})();(0,r.Z)((()=>{x&&c(x)}),[x]);return{selectedValue:o,selectValue:(0,a.useCallback)((e=>{if(!u({value:e,tabValues:s}))throw new Error(`Can't select invalid tab value=${e}`);c(e),p(e),b(e)}),[p,b,s]),tabValues:s}}var p=n(512);const g={tabItem:"tabItem_V91s",tabItemActive:"tabItemActive_JsUu",blink:"blink_ZPVS",tab:"tab_ntnM"};var b=n(5893);const x={left:37,right:39};function f(e){const{lazy:t,defaultValue:n,values:i,groupId:r}=e,s=a.Children.toArray(e.children),{tabValues:o,selectedValue:l,selectValue:c}=m({children:s,defaultValue:n,values:i,groupId:r}),d=[],u=e=>{const t=e.currentTarget,n=i[d.indexOf(t)].value;c(n),null!=r&&setTimeout((()=>{(function(e){const{top:t,left:n,bottom:a,right:i}=e.getBoundingClientRect(),{innerHeight:r,innerWidth:s}=window;return t>=0&&i<=s&&a<=r&&n>=0})(t)||(t.scrollIntoView({block:"center",behavior:"smooth"}),t.classList.add(g.tabItemActive),setTimeout((()=>t.classList.remove(g.tabItemActive)),2e3))}),150)},h=e=>{let t;switch(e.keyCode){case x.right:{const n=d.indexOf(e.target)+1;t=d[n]||d[0];break}case x.left:{const n=d.indexOf(e.target)-1;t=d[n]||d[d.length-1];break}default:return}t.focus()},f=(e,t)=>t.value===e||t.values&&-1!=t.values.indexOf(e);return(0,b.jsxs)("div",{className:"tabs-container",children:[(0,b.jsx)("ul",{role:"tablist","aria-orientation":"horizontal",className:"tabs",children:i.map((e=>{let{value:t,label:n}=e;return(0,b.jsx)("li",{role:"tab",tabIndex:l===t?0:-1,"aria-selected":l===t,className:(0,p.Z)("tabs__item",g.tabItem,{"tabs__item--active":l===t}),ref:e=>e&&d.push(e),onKeyDown:h,onFocus:u,onClick:u,children:n},t)}))}),t?a.cloneElement(s.find((e=>f(l,e.props))),{className:g.tab}):(0,b.jsx)("div",{children:s.map(((e,t)=>a.cloneElement(e,{key:t,hidden:!f(l,e.props),className:g.tab})))}),(0,b.jsx)("br",{})]})}}}]);