"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[9207],{6492:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>u,contentTitle:()=>l,default:()=>m,frontMatter:()=>a,metadata:()=>c,toc:()=>d});var o=t(5893),r=t(1151),s=t(5878),i=t(1016);t(4996);const a={},l="Configuring Unlocks",c={id:"dev/unlocks/configuring-unlocks",title:"Configuring Unlocks",description:"Custom unlocks' displayed names, descriptions, images, buttons and their order in the list can be configured. You can even determine your own unlock conditions, change the displayed text and sprites conditionally and stuff like that.",source:"@site/docs/dev/unlocks/configuring-unlocks.mdx",sourceDirName:"dev/unlocks",slug:"/dev/unlocks/configuring-unlocks",permalink:"/RogueLibs/docs/dev/unlocks/configuring-unlocks",draft:!1,unlisted:!1,editUrl:"https://github.com/Chasmical/RogueLibs/edit/main/website/docs/dev/unlocks/configuring-unlocks.mdx",tags:[],version:"current",frontMatter:{},sidebar:"documentationSidebar",previous:{title:"Custom Unlocks",permalink:"/RogueLibs/docs/dev/unlocks/custom-unlocks"},next:{title:"Custom Names",permalink:"/RogueLibs/docs/dev/names/custom-names"}},u={},d=[{value:"Sorting",id:"sorting",level:2},{value:"Overrideable methods",id:"methods",level:2},{value:"<code>UnlockWrapper</code>",id:"unlockwrapper",level:3},{value:"<code>DisplayedUnlock</code>",id:"displayedunlock",level:3},{value:"Examples",id:"examples",level:2}];function h(e){const n={a:"a",admonition:"admonition",code:"code",h1:"h1",h2:"h2",h3:"h3",li:"li",p:"p",pre:"pre",ul:"ul",...(0,r.a)(),...e.components};return(0,o.jsxs)(o.Fragment,{children:[(0,o.jsx)(n.h1,{id:"configuring-unlocks",children:"Configuring Unlocks"}),"\n",(0,o.jsx)(n.p,{children:"Custom unlocks' displayed names, descriptions, images, buttons and their order in the list can be configured. You can even determine your own unlock conditions, change the displayed text and sprites conditionally and stuff like that."}),"\n","\n","\n",(0,o.jsx)(n.h2,{id:"sorting",children:"Sorting"}),"\n",(0,o.jsxs)(n.p,{children:["Unlocks are first sorted by their ",(0,o.jsx)(n.code,{children:"SortingOrder"}),", then by their state (unlocked, purchasable, available and locked), and then by their ",(0,o.jsx)(n.code,{children:"SortingIndex"}),". You can ignore the sorting by the state by setting ",(0,o.jsx)(n.code,{children:"IgnoreStateSorting"})," to ",(0,o.jsx)(n.code,{children:"true"}),"."]}),"\n",(0,o.jsx)(n.p,{children:"Here's an example of how this sorting would work:"}),"\n",(0,o.jsxs)(n.ul,{children:["\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.code,{children:"SortingOrder = -400"}),":","\n",(0,o.jsxs)(n.ul,{children:["\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.code,{children:"Unlocked"}),":","\n",(0,o.jsxs)(n.ul,{children:["\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.code,{children:"SortingIndex = -3"}),";"]}),"\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.code,{children:"SortingIndex = 1"}),";"]}),"\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.code,{children:"SortingIndex = 2"}),";"]}),"\n"]}),"\n"]}),"\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.code,{children:"Purchasable"}),":","\n",(0,o.jsxs)(n.ul,{children:["\n",(0,o.jsx)(n.li,{children:"..."}),"\n"]}),"\n"]}),"\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.code,{children:"Available"}),":","\n",(0,o.jsxs)(n.ul,{children:["\n",(0,o.jsx)(n.li,{children:"..."}),"\n"]}),"\n"]}),"\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.code,{children:"Locked"}),":","\n",(0,o.jsxs)(n.ul,{children:["\n",(0,o.jsx)(n.li,{children:"..."}),"\n"]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.code,{children:"SortingOrder = -3"}),":","\n",(0,o.jsxs)(n.ul,{children:["\n",(0,o.jsx)(n.li,{children:"..."}),"\n"]}),"\n"]}),"\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.code,{children:"SortingOrder = 0"})," (vanilla unlocks go here, with sorting index of 0):","\n",(0,o.jsxs)(n.ul,{children:["\n",(0,o.jsx)(n.li,{children:"..."}),"\n"]}),"\n"]}),"\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.code,{children:"SortingOrder = 1"}),":","\n",(0,o.jsxs)(n.ul,{children:["\n",(0,o.jsx)(n.li,{children:"..."}),"\n"]}),"\n"]}),"\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.code,{children:"SortingOrder = 500"}),":","\n",(0,o.jsxs)(n.ul,{children:["\n",(0,o.jsx)(n.li,{children:"..."}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,o.jsx)(n.admonition,{type:"caution",children:(0,o.jsxs)(n.p,{children:["The menu might get weird or even crash if not all unlocks on the current ",(0,o.jsx)(n.code,{children:"SortingOrder"})," have ",(0,o.jsx)(n.code,{children:"IgnoreStateSorting"})," set to the same value. So make sure that all other unlocks have ",(0,o.jsx)(n.code,{children:"IgnoreStateSorting"})," set to ",(0,o.jsx)(n.code,{children:"true"})," too."]})}),"\n",(0,o.jsx)(n.h2,{id:"methods",children:"Overrideable methods"}),"\n",(0,o.jsx)(n.h3,{id:"unlockwrapper",children:(0,o.jsx)(n.code,{children:"UnlockWrapper"})}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-csharp",metastring:'title="UnlockWrapper.cs"',children:"// called when the unlock is initialized and integrated into the game\npublic virtual void SetupUnlock() { }\n\n// called pretty often to determine if it can be unlocked right now\npublic virtual void UpdateUnlock()\n{\n    if ((Unlock.nowAvailable = !Unlock.unlocked && CanBeUnlocked()) && UnlockCost is 0)\n        gc.unlocks.DoUnlockForced(Name, Type);\n}\n\n// determines whether the unlock can be unlocked right now\npublic virtual bool CanBeUnlocked() => UnlockCost > -1\n    && Unlock.prerequisites.TrueForAll(c => gc.sessionDataBig.unlocks.Exists(u => u.unlockName == c && u.unlocked));\n\n// gets the unlock's raw name, without any rich text, costs and values\npublic virtual string GetName() => gc.nameDB.GetName(Name, Unlock.unlockNameType);\n\n// gets the unlock's raw description, without any rich text, costs and values\npublic virtual string GetDescription() => gc.nameDB.GetName(Name, Unlock.unlockDescriptionType);\n\n// gets the unlock's image (displayed in the menus)\npublic virtual Sprite GetImage() => RogueFramework.ExtraSprites.TryGetValue(Name, out Sprite image) ? image;\n"})}),"\n",(0,o.jsx)(n.admonition,{title:"Pro-tip",type:"tip",children:(0,o.jsxs)(n.p,{children:["You can see for yourself how these methods are implemented in ",(0,o.jsx)(n.a,{href:"https://github.com/Chasmical/RogueLibs/blob/main/RogueLibsCore/Hooks/Unlocks/UnlockWrapper.cs",children:"RogueLibs' source code"}),"."]})}),"\n",(0,o.jsx)(n.h3,{id:"displayedunlock",children:(0,o.jsx)(n.code,{children:"DisplayedUnlock"})}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-csharp",metastring:'title="DisplayedUnlock.cs"',children:"// called when the button is updated. `UpdateUnlock` is called right before this.\npublic virtual void UpdateButton() => UpdateButton(IsEnabled, UnlockButtonState.Selected, UnlockButtonState.Normal);\n\nprotected void UpdateButton(bool isEnabledOrSelected, UnlockButtonState selected, UnlockButtonState normal)\n{\n    Text = GetFancyName();\n    State = IsUnlocked ? isEnabledOrSelected ? selected : normal\n        : Unlock.nowAvailable && UnlockCost > -1 ? UnlockButtonState.Purchasable\n        : UnlockButtonState.Locked;\n}\n\n// called when the button is pressed. See other unlocks' implementations for more info\npublic abstract void OnPushedButton();\n\n// gets the unlock's \"fancy\" name, with rich text formatting, costs and point values\npublic virtual string GetFancyName()\n{\n    /* A lot of stuff, see RogueLibs' source code for more information */\n}\n\n// gets the unlock's \"fancy\" description, with rich text formatting, cancellations, prerequisites and recommendations\npublic virtual string GetFancyDescription()\n{\n    /* A lot of stuff, see RogueLibs' source code for more information */\n}\n"})}),"\n",(0,o.jsx)(n.admonition,{title:"Pro-tip",type:"tip",children:(0,o.jsxs)(n.p,{children:["You can see for yourself how these methods are implemented in ",(0,o.jsx)(n.a,{href:"https://github.com/Chasmical/RogueLibs/blob/main/RogueLibsCore/Hooks/Unlocks/DisplayedUnlock.cs",children:"RogueLibs' source code"}),"."]})}),"\n",(0,o.jsx)(n.h2,{id:"examples",children:"Examples"}),"\n",(0,o.jsxs)(s.Z,{defaultValue:"present",values:[{label:"Present (sprite variations)",value:"present"},{label:"Random Items Button",value:"randomitems"},{label:"Categories",value:"categories"}],children:[(0,o.jsxs)(i.Z,{value:"present",children:[(0,o.jsxs)(n.p,{children:["Let's say, you want to make an ",(0,o.jsx)(n.a,{href:"../custom-sprites#sprite-variations",children:"item called Present, and it has 3 different sprites"}),"."]}),(0,o.jsxs)(n.p,{children:["First of all, you'll need to create an unlock class deriving from ",(0,o.jsx)(n.code,{children:"ItemUnlock"}),":"]}),(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-csharp",metastring:'title="PresentUnlock.cs"',children:"// highlight-next-line\npublic class PresentUnlock : ItemUnlock\n{\n}\n"})}),(0,o.jsxs)(n.p,{children:["Now you can override the ",(0,o.jsx)(n.code,{children:"DisplayedUnlock"}),"'s ",(0,o.jsx)(n.code,{children:"GetImage"})," method:"]}),(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-csharp",metastring:'title="PresentUnlock.cs"',children:'public class PresentUnlock : ItemUnlock\n{\n    public override Sprite GetImage()\n    {\n        int rnd = new System.Random().Next(3) + 1;\n        return gc.gameResources.itemDic[$"Present{rnd}"];\n    }\n}\n'})}),(0,o.jsx)(n.p,{children:"Then just use your custom unlock in the custom item's initialization:"}),(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-csharp",metastring:'title="Present.cs"',children:'public class Present : CustomItem, IItemUsable\n{\n    [RLSetup]\n    public static void Setup()\n    {\n        RogueLibs.CreateCustomItem<Present>()\n            .WithName(new CustomNameInfo("Present"))\n            .WithDescription(new CustomNameInfo("Open it!"))\n            .WithSprite(Properties.Resources.Present)\n            // highlight-next-line\n            .WithUnlock(new PresentUnlock\n            {\n                UnlockCost = 5,\n                CharacterCreationCost = 3,\n                LoadoutCost = 3\n            });\n    }\n}\n'})})]}),(0,o.jsxs)(i.Z,{value:"randomitems",children:[(0,o.jsx)(n.p,{children:"A simple example - a button in the Item Teleporter's menu, that gives you 5 random items."}),(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-csharp",metastring:'title="RandomItemsButton.cs"',children:'public class RandomItemsButton : ItemUnlock\n{\n    [RLSetup]\n    public static void Setup()\n    {\n        RogueLibs.CreateCustomUnlock(new RandomItemsButton())\n            .WithName(new CustomNameInfo("Random Items")\n            .WithDescription(new CustomNameInfo("Gives you 5 random items"));\n    }\n\n    public RandomItemsButton()\n    {\n        SortingOrder = -100; // appear on top of the menu\n        IsAvailable = false;\n        IsAvailableInCC = false;\n        IsAvailableInItemTeleporter = true; // only in Item Teleporter\n    }\n\n    public override void OnPushedButton()\n    {\n        System.Random rnd = new System.Random();\n        for (int i = 0; i < 5; i++)\n        {\n            UnlockWrapper item;\n            do\n            {\n                int index = rnd.Next(Menu.Unlocks.Count);\n                UnlockWrapper item = Menu.Unlocks[index];\n            }\n            // make sure that you don\'t accidentally purchase a locked item\n            while (!item.IsUnlocked && item != this);\n\n            // it\'d be way better and safer to spawn the item yourself,\n            // but for the sake of simplicity, we\'ll just simulate the button push\n            item.OnPushedButton();\n        }\n    }\n}\n'})})]}),(0,o.jsxs)(i.Z,{value:"categories",children:[(0,o.jsxs)(n.p,{children:["So, you want to make categories, like in ",(0,o.jsx)(n.a,{href:"https://github.com/Chasmical/aToM",children:"aToM"}),"? Here you go!"]}),(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-csharp",metastring:'title="MyCategory.cs"',children:'public class MyCategory : MutatorUnlock\n{\n    [RLSetup]\n    public static void Setup()\n    {\n        MyCategory category = new MyCategory("MyCustomCategory1");\n        RogueLibs.CreateCustomUnlock(category)\n            .WithName(new CustomNameInfo("My Custom Category 1"))\n            .WithDescription(new CustomNameInfo("My Custom Category 1 is very cool and does a lot of great stuff"));\n\n        category.SortingOrder = -59;\n        category.SortingIndex = -1;\n        int i = 0;\n        foreach (MutatorUnlock mutator in mutators1)\n        {\n            mutator.SortingOrder = -59;\n            mutator.SortingIndex = i;\n            category.Contents.Add(mutator);\n        }\n        Categories.Add(category);\n        \n        category = new MyCategory("MyCustomCategory2");\n        RogueLibs.CreateCustomUnlock(category)\n            .WithName(new CustomNameInfo("My Custom Category 2"))\n            .WithDescription(new CustomNameInfo("My Custom Category 2 is really great and accomplishes a ton of cool things"));\n\n        category.SortingOrder = -58;\n        category.SortingIndex = -1;\n        i = 0;\n        foreach (MutatorUnlock mutator in mutators2)\n        {\n            mutator.SortingOrder = -58;\n            mutator.SortingIndex = i;\n            category.Contents.Add(mutator);\n        }\n        Categories.Add(category);\n        \n        RogueLibs.CreateCustomName("CategoryShow", "Interface", new CustomNameInfo("Show"));\n        RogueLibs.CreateCustomName("CategoryHide", "Interface", new CustomNameInfo("Hide"));\n    }\n\n    public MyCategory(string name) : base(name) { }\n\n    public List<UnlockWrapper> Contents = new List<UnlockWrapper>();\n    public static List<MyCategory> Categories = new List<MyCategory>();\n\n    private bool isExpanded;\n    public bool IsExpanded\n    {\n        get => isExpanded;\n        set\n        {\n            if (isExpanded != (isExpanded = value)) // if the value changed\n            {\n                // make current category\'s mutators available/unavailable\n                foreach (UnlockWrapper mutator in Contents)\n                    mutator.IsAvailable = value;\n                \n                // if it was expanded, close all other categories\n                if (value)\n                    foreach (MyCategory category in Categories)\n                        if (category != this) category.IsExpanded = false;\n            }\n        }\n    }\n\n    public override string GetFancyName()\n    {\n        string name = base.GetFancyName();\n        name += " - " +  gc.nameDB.GetName(IsExpanded ? "CategoryHide" : "CategoryShow", "Interface");\n        return name;\n    }\n    public override void OnPushedButton()\n    {\n        if (Menu!.Type == UnlocksMenuType.MutatorMenu)\n        {\n            PlaySound("ClickButton");\n            // toggle the IsExpanded property\n            IsExpanded = !IsExpanded;\n            // reopen the menu to update the buttons list\n            ((CustomScrollingMenu)Menu).Menu.OpenScrollingMenu();\n        }\n        else base.OnPushedButton();\n    }\n}\n'})})]})]})]})}function m(e={}){const{wrapper:n}={...(0,r.a)(),...e.components};return n?(0,o.jsx)(n,{...e,children:(0,o.jsx)(h,{...e})}):h(e)}},1016:(e,n,t)=>{t.d(n,{Z:()=>r});t(7294);var o=t(5893);function r(e){let{children:n,...t}=e;return(0,o.jsx)("div",{role:"tabpanel",...t,children:n})}},5878:(e,n,t)=>{t.d(n,{Z:()=>x});var o=t(7294),r=t(6550),s=t(469),i=t(1980),a=t(7392),l=t(12);function c(e){return function(e){return o.Children.toArray(e).filter((e=>"\n"!==e)).map((e=>{if(!e||(0,o.isValidElement)(e)&&function(e){const{props:n}=e;return!!n&&"object"==typeof n&&"value"in n}(e))return e;throw new Error(`Docusaurus error: Bad <Tabs> child <${"string"==typeof e.type?e.type:e.type.name}>: all children of the <Tabs> component should be <TabItem>, and every <TabItem> should have a unique "value" prop.`)}))?.filter(Boolean)??[]}(e).map((e=>{let{props:{value:n,label:t,attributes:o,default:r}}=e;return{value:n,label:t,attributes:o,default:r}}))}function u(e){const{values:n,children:t}=e;return(0,o.useMemo)((()=>{const e=n??c(t);return function(e){const n=(0,a.l)(e,((e,n)=>e.value===n.value));if(n.length>0)throw new Error(`Docusaurus error: Duplicate values "${n.map((e=>e.value)).join(", ")}" found in <Tabs>. Every value needs to be unique.`)}(e),e}),[n,t])}function d(e){let{value:n,tabValues:t}=e;return t.some((e=>e.value===n))}function h(e){let{queryString:n=!1,groupId:t}=e;const s=(0,r.k6)(),a=function(e){let{queryString:n=!1,groupId:t}=e;if("string"==typeof n)return n;if(!1===n)return null;if(!0===n&&!t)throw new Error('Docusaurus error: The <Tabs> component groupId prop is required if queryString=true, because this value is used as the search param name. You can also provide an explicit value such as queryString="my-search-param".');return t??null}({queryString:n,groupId:t});return[(0,i._X)(a),(0,o.useCallback)((e=>{if(!a)return;const n=new URLSearchParams(s.location.search);n.set(a,e),s.replace({...s.location,search:n.toString()})}),[a,s])]}function m(e){const{defaultValue:n,queryString:t=!1,groupId:r}=e,i=u(e),[a,c]=(0,o.useState)((()=>function(e){let{defaultValue:n,tabValues:t}=e;if(0===t.length)throw new Error("Docusaurus error: the <Tabs> component requires at least one <TabItem> children component");if(n){if(!d({value:n,tabValues:t}))throw new Error(`Docusaurus error: The <Tabs> has a defaultValue "${n}" but none of its children has the corresponding value. Available values are: ${t.map((e=>e.value)).join(", ")}. If you intend to show no default tab, use defaultValue={null} instead.`);return n}const o=t.find((e=>e.default))??t[0];if(!o)throw new Error("Unexpected error: 0 tabValues");return o.value}({defaultValue:n,tabValues:i}))),[m,p]=h({queryString:t,groupId:r}),[g,b]=function(e){let{groupId:n}=e;const t=function(e){return e?`docusaurus.tab.${e}`:null}(n),[r,s]=(0,l.Nk)(t);return[r,(0,o.useCallback)((e=>{t&&s.set(e)}),[t,s])]}({groupId:r}),f=(()=>{const e=m??g;return d({value:e,tabValues:i})?e:null})();(0,s.Z)((()=>{f&&c(f)}),[f]);return{selectedValue:a,selectValue:(0,o.useCallback)((e=>{if(!d({value:e,tabValues:i}))throw new Error(`Can't select invalid tab value=${e}`);c(e),p(e),b(e)}),[p,b,i]),tabValues:i}}var p=t(512);const g={tabItem:"tabItem_V91s",tabItemActive:"tabItemActive_JsUu",blink:"blink_ZPVS",tab:"tab_ntnM"};var b=t(5893);const f={left:37,right:39};function x(e){const{lazy:n,defaultValue:t,values:r,groupId:s}=e,i=o.Children.toArray(e.children),{tabValues:a,selectedValue:l,selectValue:c}=m({children:i,defaultValue:t,values:r,groupId:s}),u=[],d=e=>{const n=e.currentTarget,t=r[u.indexOf(n)].value;c(t),null!=s&&setTimeout((()=>{(function(e){const{top:n,left:t,bottom:o,right:r}=e.getBoundingClientRect(),{innerHeight:s,innerWidth:i}=window;return n>=0&&r<=i&&o<=s&&t>=0})(n)||(n.scrollIntoView({block:"center",behavior:"smooth"}),n.classList.add(g.tabItemActive),setTimeout((()=>n.classList.remove(g.tabItemActive)),2e3))}),150)},h=e=>{let n;switch(e.keyCode){case f.right:{const t=u.indexOf(e.target)+1;n=u[t]||u[0];break}case f.left:{const t=u.indexOf(e.target)-1;n=u[t]||u[u.length-1];break}default:return}n.focus()},x=(e,n)=>n.value===e||n.values&&-1!=n.values.indexOf(e);return(0,b.jsxs)("div",{className:"tabs-container",children:[(0,b.jsx)("ul",{role:"tablist","aria-orientation":"horizontal",className:"tabs",children:r.map((e=>{let{value:n,label:t}=e;return(0,b.jsx)("li",{role:"tab",tabIndex:l===n?0:-1,"aria-selected":l===n,className:(0,p.Z)("tabs__item",g.tabItem,{"tabs__item--active":l===n}),ref:e=>e&&u.push(e),onKeyDown:h,onFocus:d,onClick:d,children:t},n)}))}),n?o.cloneElement(i.find((e=>x(l,e.props))),{className:g.tab}):(0,b.jsx)("div",{children:i.map(((e,n)=>o.cloneElement(e,{key:n,hidden:!x(l,e.props),className:g.tab})))}),(0,b.jsx)("br",{})]})}},1151:(e,n,t)=>{t.d(n,{Z:()=>a,a:()=>i});var o=t(7294);const r={},s=o.createContext(r);function i(e){const n=o.useContext(s);return o.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function a(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:i(e.components),o.createElement(s.Provider,{value:n},e.children)}}}]);