"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[543],{3905:(e,t,n)=>{n.d(t,{Zo:()=>p,kt:()=>m});var r=n(7294);function o(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function a(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){o(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function s(e,t){if(null==e)return{};var n,r,o=function(e,t){if(null==e)return{};var n,r,o={},i=Object.keys(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||(o[n]=e[n]);return o}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(o[n]=e[n])}return o}var l=r.createContext({}),u=function(e){var t=r.useContext(l),n=t;return e&&(n="function"==typeof e?e(t):a(a({},t),e)),n},p=function(e){var t=u(e.components);return r.createElement(l.Provider,{value:t},e.children)},c={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},d=r.forwardRef((function(e,t){var n=e.components,o=e.mdxType,i=e.originalType,l=e.parentName,p=s(e,["components","mdxType","originalType","parentName"]),d=u(n),m=o,h=d["".concat(l,".").concat(m)]||d[m]||c[m]||i;return n?r.createElement(h,a(a({ref:t},p),{},{components:n})):r.createElement(h,a({ref:t},p))}));function m(e,t){var n=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var i=n.length,a=new Array(i);a[0]=d;var s={};for(var l in t)hasOwnProperty.call(t,l)&&(s[l]=t[l]);s.originalType=e,s.mdxType="string"==typeof e?e:o,a[1]=s;for(var u=2;u<i;u++)a[u]=n[u];return r.createElement.apply(null,a)}return r.createElement.apply(null,n)}d.displayName="MDXCreateElement"},1016:(e,t,n)=>{n.d(t,{Z:()=>i});var r=n(7462),o=n(7294);function i(e){let{children:t,...n}=e;return o.createElement("div",(0,r.Z)({role:"tabpanel"},n),t)}},250:(e,t,n)=>{n.d(t,{Z:()=>c});var r=n(7294),o=n(7094),i=n(6010);const a="tabItem_V91s",s="tabItemActive_JsUu",l="tab_ntnM";const u=37,p=39;function c(e){const{lazy:t,defaultValue:n,values:c,groupId:d}=e,{tabGroupChoices:m,setTabGroupChoices:h}=(0,o.U)(),[f,g]=(0,r.useState)(n),y=r.Children.toArray(e.children),b=[];if(null!=d){const e=m[d];null!=e&&e!==f&&c.some((t=>t.value===e))&&g(e)}const k=e=>{const t=e.currentTarget,n=b.indexOf(t),r=c[n].value;g(r),null!=d&&(h(d,r),setTimeout((()=>{(function(e){const{top:t,left:n,bottom:r,right:o}=e.getBoundingClientRect(),{innerHeight:i,innerWidth:a}=window;return t>=0&&o<=a&&r<=i&&n>=0})(t)||(t.scrollIntoView({block:"center",behavior:"smooth"}),t.classList.add(s),setTimeout((()=>t.classList.remove(s)),2e3))}),150))},v=e=>{let t;switch(e.keyCode){case p:{const n=b.indexOf(e.target)+1;t=b[n]||b[0];break}case u:{const n=b.indexOf(e.target)-1;t=b[n]||b[b.length-1];break}default:return}t.focus()},w=(e,t)=>t.value===e||t.values&&-1!=t.values.indexOf(e);return r.createElement("div",{className:"tabs-container"},r.createElement("ul",{role:"tablist","aria-orientation":"horizontal",className:"tabs"},c.map((e=>{let{value:t,label:n}=e;return r.createElement("li",{role:"tab",tabIndex:f===t?0:-1,"aria-selected":f===t,className:(0,i.Z)("tabs__item",a,{"tabs__item--active":f===t}),key:t,ref:e=>e&&b.push(e),onKeyDown:v,onFocus:k,onClick:k},n)}))),t?r.cloneElement(y.find((e=>w(f,e.props))),{className:l}):r.createElement("div",null,y.map(((e,t)=>r.cloneElement(e,{key:t,hidden:!w(f,e.props),className:l})))),r.createElement("br",null))}},1904:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>u,contentTitle:()=>s,default:()=>d,frontMatter:()=>a,metadata:()=>l,toc:()=>p});var r=n(7462),o=(n(7294),n(3905)),i=(n(250),n(1016),n(4996));const a={},s="Custom Sprites and Resources",l={unversionedId:"dev/custom-sprites",id:"dev/custom-sprites",title:"Custom Sprites and Resources",description:"Adding image resources to a plugin is a bit tricky. Visual Studio loads any image resources as bitmaps, but we don't want that. You'll need to modify the resources manifest yourself, and add your images as binary files (or byte arrays). RogueLibs supports cropping and resizing your sprites, so, technically, you could even upload a spritesheet, and cut sprites out of it, but the performance gain would not be worth it (loading all of the 1204 64x64 sprites from Sidi's spritepack takes about 350 milliseconds, while patching methods is significantly slower - RogueLibs takes about 5 seconds to load).",source:"@site/docs/dev/custom-sprites.mdx",sourceDirName:"dev",slug:"/dev/custom-sprites",permalink:"/RogueLibs/docs/dev/custom-sprites",draft:!1,editUrl:"https://github.com/SugarBarrel/RogueLibs/edit/main/website/docs/dev/custom-sprites.mdx",tags:[],version:"current",frontMatter:{},sidebar:"documentationSidebar",previous:{title:"Custom Name Providers",permalink:"/RogueLibs/docs/dev/names/name-providers"},next:{title:"Extra Stuff",permalink:"/RogueLibs/docs/dev/extra"}},u={},p=[{value:"Adding binary resources",id:"binary-resources",level:2},{value:"<code>RogueSprite</code>",id:"roguesprite",level:2},{value:"Sprite variations",id:"sprite-variations",level:2}],c={toc:p};function d(e){let{components:t,...n}=e;return(0,o.kt)("wrapper",(0,r.Z)({},c,n,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("h1",{id:"custom-sprites-and-resources"},"Custom Sprites and Resources"),(0,o.kt)("p",null,"Adding image resources to a plugin is a bit tricky. Visual Studio loads any image resources as bitmaps, but we don't want that. You'll need to modify the resources manifest yourself, and add your images as binary files (or byte arrays). RogueLibs supports cropping and resizing your sprites, so, technically, you could even upload a spritesheet, and cut sprites out of it, but the performance gain would not be worth it (loading all of the 1204 64x64 sprites from ",(0,o.kt)("a",{parentName:"p",href:"https://sugarbarrel.github.io/SoRModHub/"},"Sidi's spritepack")," takes about 350 milliseconds, while patching methods is significantly slower - RogueLibs takes about 5 seconds to load)."),(0,o.kt)("h2",{id:"binary-resources"},"Adding binary resources"),(0,o.kt)("p",null,"First of all, encode your images in PNG or JPG format, and audioclips in MP3, OGG or WAV."),(0,o.kt)("p",null,"Then go to your project's Properties and create a resource file, if it doesn't exist already."),(0,o.kt)("img",{src:(0,i.Z)("/img/setup/resources.png"),width:"600"}),(0,o.kt)("p",null,"Open your project's ",(0,o.kt)("inlineCode",{parentName:"p"},"Resources.resx")," in an ",(0,o.kt)("strong",{parentName:"p"},"external")," editor and add the following element to the end:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-xml"},'  \x3c!-- ... --\x3e\n// highlight-start\n  <data name="MyAwesomeSprite" type="System.Resources.ResXFileRef, System.Windows.Forms">\n    <value>..\\Resources\\MyAwesomeSprite.png;System.Byte[], mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>\n  </data>\n// highlight-end\n</root>\n')),(0,o.kt)("p",null,"You only need to change the ",(0,o.kt)("inlineCode",{parentName:"p"},"name")," attribute and the first part of the ",(0,o.kt)("inlineCode",{parentName:"p"},"value")," element for your resources. Then you should be able to reference them like this: ",(0,o.kt)("inlineCode",{parentName:"p"},"Properties.Resources.MyAwesomeSprite"),". You can do the same thing with other types of files as well, like audioclips, fonts and models."),(0,o.kt)("p",null,"After changing the ",(0,o.kt)("inlineCode",{parentName:"p"},".resx"),' file, go to your solution and rebuild the resources code by right-clicking on Resources.resx and selecting "Run Custom Tool".'),(0,o.kt)("img",{src:(0,i.Z)("img/custom-sprites/run-custom-tool.png"),width:"400"}),(0,o.kt)("h2",{id:"roguesprite"},(0,o.kt)("inlineCode",{parentName:"h2"},"RogueSprite")),(0,o.kt)("admonition",{type:"note"},(0,o.kt)("p",{parentName:"admonition"},"If you're wondering, why it's called ",(0,o.kt)("inlineCode",{parentName:"p"},"RogueSprite")," and not ",(0,o.kt)("inlineCode",{parentName:"p"},"CustomSprite"),", like most of the things in RogueLibs (",(0,o.kt)("inlineCode",{parentName:"p"},"CustomItem"),", ",(0,o.kt)("inlineCode",{parentName:"p"},"CustomTrait"),", ",(0,o.kt)("inlineCode",{parentName:"p"},"CustomEffect"),"), well, that's because it behaves slightly differently from others. ",(0,o.kt)("inlineCode",{parentName:"p"},"CustomItem"),", ",(0,o.kt)("inlineCode",{parentName:"p"},"CustomTrait")," and etc. are hooks, while ",(0,o.kt)("inlineCode",{parentName:"p"},"RogueSprite"),", technically, is a collection of hooks. Also, it took an incredible amount of time and work to figure out that TK2D stuff and I just wanted to distinguish it from other classes.")),(0,o.kt)("p",null,"Normally, new instances of ",(0,o.kt)("inlineCode",{parentName:"p"},"RogueSprite")," are created like this:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-csharp"},"RogueLibs.CreateCustomItem<MyCustomItem>()\n    ...\n    // highlight-next-line\n    .WithSprite(Properties.Resources.MyCustomItem);\n")),(0,o.kt)("p",null,"But you can create them directly too, although you'll have to specify a name and a scope. Scope of the sprite determines what areas of the game the sprite will be available in. ",(0,o.kt)("inlineCode",{parentName:"p"},"SpriteScope.Items")," will work only on items, ",(0,o.kt)("inlineCode",{parentName:"p"},"SpriteScope.Objects")," - only on objects, and etc. You can specify multiple scopes too by combining them with ",(0,o.kt)("inlineCode",{parentName:"p"},"|")," operator."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-csharp"},'RogueLibs.CreateCustomSprite("name", SpriteScope.Items, Properties.Resources.ResourceName);\n')),(0,o.kt)("p",null,"By default, RogueLibs uses the entire file as a texture. You can specify the region of the texture to use with a ",(0,o.kt)("inlineCode",{parentName:"p"},"Rect")," parameter (for example, if you included a color palette used in the image by its side and don't want to display it in the game):"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-csharp"},'RogueLibs.CreateCustom("name", SpriteScope.Items, Properties.Resources.ResourceName,\n                                // highlight-next-line\n                                new Rect(0f, 0f, 64f, 64f));\n')),(0,o.kt)("img",{src:(0,i.Z)("img/custom-sprites/coordinate-system.png"),width:"400"}),(0,o.kt)("p",null,"If you're going to use non-64x64 textures, then you need to specify the PPU (pixels-per-unit) parameter too:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-csharp"},'RogueLibs.CreateCustom("name", SpriteScope.Items, Properties.Resources.ResourceName,\n                                // highlight-next-line\n                                new Rect(64f, 64f, 128f, 128f), 128f);\n')),(0,o.kt)("h2",{id:"sprite-variations"},"Sprite variations"),(0,o.kt)("p",null,"If you have more than 1 sprite for your item, use ",(0,o.kt)("inlineCode",{parentName:"p"},"InvItem.LoadItemSprite")," in your item's ",(0,o.kt)("inlineCode",{parentName:"p"},"SetupDetails"),":"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-csharp"},'public class Present : CustomItem, IItemUsable\n{\n    [RLSetup]\n    public static void Setup()\n    {\n        RogueLibs.CreateCustomItem<Present>()\n            /* ... */\n            .WithSprite(Properties.Resources.Present);\n\n        RogueLibs.CreateCustomSprite("Present2", SpriteScope.Items, Properties.Resources.Present2);\n        RogueLibs.CreateCustomSprite("Present3", SpriteScope.Items, Properties.Resources.Present3);\n    }\n\n    public override void SetupDetails()\n    {\n        /* ... */\n        int rnd = new Random().Next(3) + 1;\n        // random integer x, such that 1 \u2264 x \u2264 3\n\n        if (rnd != 1) // load a different sprite if it\'s 2 or 3\n        Item.LoadItemSprite($"Present{rnd}");\n\n        // if it\'s 1, then the default "Present" will be used\n    }\n}\n')),(0,o.kt)("p",null,"This example works only if an item actually exists. In the Loadout and Rewards menus it will always have the ",(0,o.kt)("inlineCode",{parentName:"p"},"Present")," sprite. If you want the sprite in the menus to be randomly selected too, you'll have to ",(0,o.kt)("a",{parentName:"p",href:"./unlocks/configuring-unlocks#examples"},"override the ",(0,o.kt)("inlineCode",{parentName:"a"},"DisplayedUnlock.GetImage")," method"),"."))}d.isMDXComponent=!0}}]);