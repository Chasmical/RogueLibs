(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[706],{4214:function(t,e,i){"use strict";i.d(e,{Z:function(){return l}});var a=i(7294),n=i(1756);function l(t){var e=t.children,i=t.language;return a.createElement(n.Z,{className:"language-"+(i||"csharp")},e.replace(/\t/g,"    "))}},1915:function(t,e,i){"use strict";i.r(e),i.d(e,{contentTitle:function(){return u},default:function(){return m},frontMatter:function(){return d},metadata:function(){return g},toc:function(){return b}});var a=i(2122),n=i(9756),l=(i(7294),i(3905)),r=i(8952),s=i(9309),o=(i(4996),i(4214)),c=["components"],d={},u="Chargeable Abilities",g={unversionedId:"dev/items/abilities/chargeable-abilities",id:"dev/items/abilities/chargeable-abilities",isDocsHomePage:!1,title:"Chargeable Abilities",description:"Making abilities chargeable",source:"@site/docs/dev/items/abilities/chargeable-abilities.mdx",sourceDirName:"dev/items/abilities",slug:"/dev/items/abilities/chargeable-abilities",permalink:"/RogueLibs/docs/dev/items/abilities/chargeable-abilities",editUrl:"https://github.com/Abbysssal/RogueLibs/edit/master/website/docs/dev/items/abilities/chargeable-abilities.mdx",version:"current",frontMatter:{},sidebar:"documentationSidebar",previous:{title:"Rechargeable Abilities",permalink:"/RogueLibs/docs/dev/items/abilities/rechargeable-abilities"},next:{title:"Targetable Abilities",permalink:"/RogueLibs/docs/dev/items/abilities/targetable-abilities"}},b=[{value:"Making abilities chargeable",id:"making-chargeable",children:[]},{value:"Examples",id:"examples",children:[]}],h={toc:b};function m(t){var e=t.components,i=(0,n.Z)(t,c);return(0,l.kt)("wrapper",(0,a.Z)({},h,i,{components:e,mdxType:"MDXLayout"}),(0,l.kt)("h1",{id:"chargeable-abilities"},"Chargeable Abilities"),(0,l.kt)("h2",{id:"making-chargeable"},"Making abilities chargeable"),(0,l.kt)("p",null,"Just implement the ",(0,l.kt)("inlineCode",{parentName:"p"},"IAbilityChargeable")," interface in your ability's class:"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-csharp",metastring:'title="MyChargeableAbility.cs"',title:'"MyChargeableAbility.cs"'},"// highlight-next-line\npublic class MyChargeableAbility : CustomAbility, IAbilityChargeable\n{\n    // highlight-start\n    public void OnHeld(AbilityHeldArgs e) { /* ... */ }\n    public void OnReleased(AbilityReleasedArgs e) { /* ... */ }\n    // highlight-end\n}\n")),(0,l.kt)("p",null,(0,l.kt)("inlineCode",{parentName:"p"},"OnHeld")," is called every frame ",(0,l.kt)("em",{parentName:"p"},"(I think?)")," that the special ability button is held. ",(0,l.kt)("inlineCode",{parentName:"p"},"OnReleased")," is called on the frame that the special ability button is released. Use these in tandem with ",(0,l.kt)("inlineCode",{parentName:"p"},"OnPressed")," to charge your ability and stuff."),(0,l.kt)("div",{className:"admonition admonition-caution alert alert--warning"},(0,l.kt)("div",{parentName:"div",className:"admonition-heading"},(0,l.kt)("h5",{parentName:"div"},(0,l.kt)("span",{parentName:"h5",className:"admonition-icon"},(0,l.kt)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"16",height:"16",viewBox:"0 0 16 16"},(0,l.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M8.893 1.5c-.183-.31-.52-.5-.887-.5s-.703.19-.886.5L.138 13.499a.98.98 0 0 0 0 1.001c.193.31.53.501.886.501h13.964c.367 0 .704-.19.877-.5a1.03 1.03 0 0 0 .01-1.002L8.893 1.5zm.133 11.497H6.987v-2.003h2.039v2.003zm0-3.004H6.987V5.987h2.039v4.006z"}))),"caution")),(0,l.kt)("div",{parentName:"div",className:"admonition-content"},(0,l.kt)("p",{parentName:"div"},(0,l.kt)("inlineCode",{parentName:"p"},"AbilityHeldArgs.Interrupt()")," method is still work-in-progress."))),(0,l.kt)("h2",{id:"examples"},"Examples"),(0,l.kt)(r.Z,{defaultValue:"kamikaze",values:[{label:"Kamikaze",value:"kamikaze"}],mdxType:"Tabs"},(0,l.kt)(s.Z,{value:"kamikaze",mdxType:"TabItem"},(0,l.kt)(o.Z,{mdxType:"CodeSnippet"},'using UnityEngine;\n\nnamespace RogueLibsCore.Test\n{\n\tpublic class Kamikaze : CustomAbility, IAbilityChargeable, IDoUpdate\n\t{\n\t\t[RLSetup]\n\t\tpublic static void Setup()\n\t\t{\n\t\t\tRogueLibs.CreateCustomAbility<Kamikaze>()\n\t\t\t\t.WithName(new CustomNameInfo("Kamikaze"))\n\t\t\t\t.WithDescription(new CustomNameInfo("Charge up and explode everything around you."))\n\t\t\t\t.WithSprite(Properties.Resources.Kamikaze)\n\t\t\t\t.WithUnlock(new AbilityUnlock { UnlockCost = 20, CharacterCreationCost = 20 });\n\t\t}\n\n\t\tpublic float Charge { get; private set; }\n\t\tpublic bool IsCharging { get; private set; }\n\n\t\tpublic override void OnAdded() { }\n\t\tpublic override void OnPressed()\n\t\t{\n\t\t\tIsCharging = true;\n\t\t\tgc.audioHandler.Play(Owner, VanillaAudio.GeneratorHiss);\n\t\t\tOwner.objectMult.chargingSpecialLunge = true;\n\t\t}\n\t\tpublic override CustomTooltip GetCountString()\n\t\t{\n\t\t\tif (Charge is 0) return default;\n\t\t\tstring text = $"{Charge:#.#}s";\n\t\t\tColor color = Color.Lerp(Color.white, Color.red, Charge / 10f);\n\t\t\tif (Charge > 10f)\n\t\t\t{\n\t\t\t\ttext = "BOOM!";\n\t\t\t\tcolor = Color.Lerp(Color.white, Color.red, Mathf.PingPong(Time.time * 5, 1f));\n\t\t\t}\n\t\t\treturn new CustomTooltip(text, color);\n\t\t}\n\t\tpublic void OnHeld(AbilityHeldArgs e)\n\t\t{\n\t\t\tCharge += Time.deltaTime;\n\t\t\te.HeldTime = Charge;\n\t\t\tif (Charge > 10f)\n\t\t\t{\n\t\t\t\tOwner.objectMult.chargingSpecialLunge = true;\n\t\t\t}\n\t\t}\n\t\tpublic void OnReleased(AbilityReleasedArgs e)\n\t\t{\n\t\t\tIsCharging = false;\n\t\t\tOwner.objectMult.chargingSpecialLunge = false;\n\t\t\tif (e.HeldTime > 10f)\n\t\t\t{\n\t\t\t\tOwner.AddEffect(VanillaEffects.Resurrection, new CreateEffectInfo(1) { DontShowText = true, IgnoreElectronic = true });\n\t\t\t\tgc.spawnerMain.SpawnExplosion(Owner, Owner.tr.position, "Huge", false, -1, false, true).noOwnCheck = true;\n\t\t\t\tCharge = 0f;\n\t\t\t}\n\t\t\tgc.audioHandler.Stop(Owner, VanillaAudio.GeneratorHiss);\n\t\t}\n\t\tpublic void Update()\n\t\t{\n\t\t\tif (!IsCharging) Charge = Mathf.Max(Charge - Time.deltaTime * 5f, 0f);\n\t\t}\n\t}\n}\n'))))}m.isMDXComponent=!0}}]);