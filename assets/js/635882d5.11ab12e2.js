"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[5399],{4214:(e,t,a)=>{a.d(t,{Z:()=>l});var n=a(7294),i=a(814);function l(e){let{children:t,language:a}=e;return n.createElement(i.Z,{className:"language-"+(a||"csharp")},t.replace(/\t/g,"    "))}},1016:(e,t,a)=>{a.d(t,{Z:()=>l});var n=a(7462),i=a(7294);function l(e){let{children:t,...a}=e;return i.createElement("div",(0,n.Z)({role:"tabpanel"},a),t)}},250:(e,t,a)=>{a.d(t,{Z:()=>d});var n=a(7294),i=a(7094),l=a(6010);const r="tabItem_V91s",s="tabItemActive_JsUu",o="tab_ntnM";const u=37,g=39;function d(e){const{lazy:t,defaultValue:a,values:d,groupId:c}=e,{tabGroupChoices:m,setTabGroupChoices:b}=(0,i.U)(),[p,h]=(0,n.useState)(a),y=n.Children.toArray(e.children),C=[];if(null!=c){const e=m[c];null!=e&&e!==p&&d.some((t=>t.value===e))&&h(e)}const v=e=>{const t=e.currentTarget,a=C.indexOf(t),n=d[a].value;h(n),null!=c&&(b(c,n),setTimeout((()=>{(function(e){const{top:t,left:a,bottom:n,right:i}=e.getBoundingClientRect(),{innerHeight:l,innerWidth:r}=window;return t>=0&&i<=r&&n<=l&&a>=0})(t)||(t.scrollIntoView({block:"center",behavior:"smooth"}),t.classList.add(s),setTimeout((()=>t.classList.remove(s)),2e3))}),150))},f=e=>{let t;switch(e.keyCode){case g:{const a=C.indexOf(e.target)+1;t=C[a]||C[0];break}case u:{const a=C.indexOf(e.target)-1;t=C[a]||C[C.length-1];break}default:return}t.focus()},N=(e,t)=>t.value===e||t.values&&-1!=t.values.indexOf(e);return n.createElement("div",{className:"tabs-container"},n.createElement("ul",{role:"tablist","aria-orientation":"horizontal",className:"tabs"},d.map((e=>{let{value:t,label:a}=e;return n.createElement("li",{role:"tab",tabIndex:p===t?0:-1,"aria-selected":p===t,className:(0,l.Z)("tabs__item",r,{"tabs__item--active":p===t}),key:t,ref:e=>e&&C.push(e),onKeyDown:f,onFocus:v,onClick:v},a)}))),t?n.cloneElement(y.find((e=>N(p,e.props))),{className:o}):n.createElement("div",null,y.map(((e,t)=>n.cloneElement(e,{key:t,hidden:!N(p,e.props),className:o})))),n.createElement("br",null))}},1707:(e,t,a)=>{a.r(t),a.d(t,{assets:()=>d,contentTitle:()=>u,default:()=>b,frontMatter:()=>o,metadata:()=>g,toc:()=>c});var n=a(7462),i=(a(7294),a(3905)),l=a(250),r=a(1016),s=(a(4996),a(4214));const o={},u="Targetable Abilities",g={unversionedId:"dev/items/abilities/targetable-abilities",id:"dev/items/abilities/targetable-abilities",title:"Targetable Abilities",description:"Custom abilities can be made targetable by implementing the IAbilityTargetable interface. You can determine the target of the special ability (for example, the closest agent), and a special ability indicator will be displayed over it. Then you'll be able to access the determined target through the CurrentTarget property.",source:"@site/docs/dev/items/abilities/targetable-abilities.mdx",sourceDirName:"dev/items/abilities",slug:"/dev/items/abilities/targetable-abilities",permalink:"/RogueLibs/docs/dev/items/abilities/targetable-abilities",draft:!1,editUrl:"https://github.com/SugarBarrel/RogueLibs/edit/main/website/docs/dev/items/abilities/targetable-abilities.mdx",tags:[],version:"current",frontMatter:{},sidebar:"documentationSidebar",previous:{title:"Chargeable Abilities",permalink:"/RogueLibs/docs/dev/items/abilities/chargeable-abilities"},next:{title:"Creating a Custom Trait",permalink:"/RogueLibs/docs/dev/traits/create-trait"}},d={},c=[{value:"Making abilities targetable",id:"making-targetable",level:2},{value:"Examples",id:"examples",level:2}],m={toc:c};function b(e){let{components:t,...a}=e;return(0,i.kt)("wrapper",(0,n.Z)({},m,a,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("h1",{id:"targetable-abilities"},"Targetable Abilities"),(0,i.kt)("p",null,"Custom abilities can be made targetable by implementing the ",(0,i.kt)("inlineCode",{parentName:"p"},"IAbilityTargetable")," interface. You can determine the target of the special ability (for example, the closest agent), and a special ability indicator will be displayed over it. Then you'll be able to access the determined target through the ",(0,i.kt)("inlineCode",{parentName:"p"},"CurrentTarget")," property."),(0,i.kt)("h2",{id:"making-targetable"},"Making abilities targetable"),(0,i.kt)("p",null,"Just implement the ",(0,i.kt)("inlineCode",{parentName:"p"},"IAbilityTargetable")," interface in your ability's class:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-csharp",metastring:'title="MyTargetableAbility.cs"',title:'"MyTargetableAbility.cs"'},"// highlight-next-line\npublic class MyTargetableAbility : CustomAbility, IAbilityTargetable\n{\n    // highlight-next-line\n    public PlayfieldObject FindTarget() { /* ... */ }\n}\n")),(0,i.kt)("p",null,(0,i.kt)("inlineCode",{parentName:"p"},"FindTarget")," determines the closest (or the most compatible/applicable) target, that the ability can be used on right now. If the ability cannot be used right now, you should return ",(0,i.kt)("inlineCode",{parentName:"p"},"null"),". Then, you can use ",(0,i.kt)("inlineCode",{parentName:"p"},"CurrentTarget")," in any of the methods:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-csharp"},'    public override void OnPressed()\n    {\n        if (CurrentTarget is null)\n        {\n            gc.audioHandler.Play(Owner, "CantDo");\n            return;\n        }\n        /* ... */\n    }\n')),(0,i.kt)("h2",{id:"examples"},"Examples"),(0,i.kt)(l.Z,{defaultValue:"hug",values:[{label:"Hug",value:"hug"}],mdxType:"Tabs"},(0,i.kt)(r.Z,{value:"hug",mdxType:"TabItem"},(0,i.kt)(s.Z,{mdxType:"CodeSnippet"},'using System.Collections.Generic;\nusing System.Linq;\nusing UnityEngine;\n\nnamespace RogueLibsCore.Test\n{\n    public class Hug : CustomAbility, IAbilityTargetable\n    {\n        [RLSetup]\n        public static void Setup()\n        {\n            RogueLibs.CreateCustomAbility<Hug>()\n                .WithName(new CustomNameInfo("Hug"))\n                .WithDescription(new CustomNameInfo("Sneak up behind people. And HUG THEM!!"))\n                .WithSprite(Properties.Resources.Hug)\n                .WithUnlock(new AbilityUnlock { UnlockCost = 5, CharacterCreationCost = 5 });\n\n            RogueLibs.CreateCustomName("HugNegative1", NameTypes.Dialogue, new CustomNameInfo("Huh? What are you doing?"));\n            RogueLibs.CreateCustomName("HugNegative2", NameTypes.Dialogue, new CustomNameInfo("Excuse me?!"));\n            RogueLibs.CreateCustomName("HugNegative3", NameTypes.Dialogue, new CustomNameInfo("Stop it!"));\n            RogueLibs.CreateCustomName("HugPositive1", NameTypes.Dialogue, new CustomNameInfo("Oh.. Thanks."));\n            RogueLibs.CreateCustomName("HugPositive2", NameTypes.Dialogue, new CustomNameInfo("Um.. Okay.."));\n            RogueLibs.CreateCustomName("HugPositive3", NameTypes.Dialogue, new CustomNameInfo("?.."));\n            RogueLibs.CreateCustomName("HugForgive1", NameTypes.Dialogue, new CustomNameInfo("Oh.. Okay, I forgive you."));\n            RogueLibs.CreateCustomName("HugForgive2", NameTypes.Dialogue, new CustomNameInfo("Alright, I forgive you."));\n            RogueLibs.CreateCustomName("HugForgive3", NameTypes.Dialogue, new CustomNameInfo("Okay... Don\'t worry about that.."));\n        }\n\n        public override void OnAdded() { }\n        public PlayfieldObject? FindTarget()\n        {\n            Agent? closest = null;\n            float distance = float.MaxValue;\n            foreach (Agent agent in Owner!.interactionHelper.TriggerList\n                .Where(static go => go.CompareTag("AgentSprite"))\n                .Select(static go => go.GetComponent<ObjectSprite>().agent))\n            {\n                if (!huggedList.Contains(agent) && !agent.dead && !agent.ghost && !Owner.ghost && !agent.hologram\n                    && agent.go.activeSelf && !agent.mechFilled && !agent.mechEmpty)\n                {\n                    float dist = Vector2.Distance(Owner.curPosition, agent.curPosition);\n                    if (dist < distance)\n                    {\n                        closest = agent;\n                        distance = dist;\n                    }\n                }\n            }\n            return closest;\n        }\n        private readonly List<Agent> huggedList = new List<Agent>();\n        public override void OnPressed()\n        {\n            if (CurrentTarget is null)\n            {\n                gc.audioHandler.Play(Owner, VanillaAudio.CantDo);\n            }\n            else\n            {\n                Agent target = (Agent)CurrentTarget;\n                int rnd = new System.Random().Next(3) + 1;\n\n                relStatus code = target.relationships.GetRelCode(Owner);\n                if (code is relStatus.Friendly or relStatus.Submissive)\n                {\n                    target.SayDialogue("HugPositive" + rnd);\n                    target.relationships.SetRel(Owner, "Loyal");\n                }\n                else if (code == relStatus.Loyal)\n                {\n                    target.SayDialogue("HugPositive" + rnd);\n                    target.relationships.SetRel(Owner, "Aligned");\n                }\n                else if (code == relStatus.Aligned)\n                {\n                    target.SayDialogue("HugPositive" + rnd);\n                }\n                else if (code == relStatus.Neutral)\n                {\n                    target.SayDialogue("HugNegative" + rnd);\n                    target.relationships.SetRel(Owner, "Annoyed");\n                    target.relationships.SetStrikes(Owner, 2);\n                    target.statusEffects.annoyeders.Add(Owner);\n                    gc.audioHandler.Play(target, VanillaAudio.AgentAnnoyed);\n                    return;\n                }\n                else if (code == relStatus.Annoyed)\n                {\n                    target.SayDialogue("HugForgive" + rnd);\n                    target.relationships.SetRel(Owner, "Neutral");\n                }\n                else if (code == relStatus.Hostile)\n                {\n                    return;\n                }\n                target.relationships.SetStrikes(Owner, 0);\n                gc.audioHandler.Play(target, VanillaAudio.AgentOK);\n                huggedList.Add(target);\n            }\n        }\n    }\n}\n'))))}b.isMDXComponent=!0}}]);