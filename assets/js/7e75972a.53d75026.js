"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[8893],{4214:function(e,t,n){n.d(t,{Z:function(){return a}});var o=n(7294),i=n(1736);function a(e){var t=e.children,n=e.language;return o.createElement(i.Z,{className:"language-"+(n||"csharp")},t.replace(/\t/g,"    "))}},2725:function(e,t,n){n.d(t,{Z:function(){return i}});var o=n(7294);function i(e){var t=e.color,n=(e.size||14)+"px";return o.createElement("div",{style:{display:"inline"}},o.createElement("div",{style:{display:"inline-block",width:n,height:n,background:t,marginRight:"2px"}}),o.createElement("div",{style:{display:"inline"}},t))}},5880:function(e,t,n){n.d(t,{Z:function(){return l}});var o=n(7294),i=n(6010),a={container:"container_ek75",cursorLocked:"cursorLocked_H61i",normal:"normal_n5ah",hoverable:"hoverable_F5EM",selected:"selected_mneN",locked:"locked_H8Qp",sprite:"sprite_ZRUo",tooltip:"tooltip_QxcU",count:"count_Z8Fk"};function l(e){var t=e.sprite,n=e.tooltip,l=e.tooltipColor,r=e.count,s=e.countColor,m=e.hoverable,u=e.cantClick,c=e.type,p=void 0===c?"normal":c,d=e.onClick;return o.createElement("div",{onClick:d,className:(0,i.Z)(a.container,u&&a.cursorLocked,p&&a[p],m&&a.hoverable)},t&&o.createElement("img",{key:"sprite",className:a.sprite,src:t}),n&&o.createElement("span",{key:"tooltip",className:a.tooltip,style:{color:l||"#FFED00"}},n),r&&o.createElement("span",{key:"count",className:a.count,style:{color:s||"#FFFFFF"}},r))}},1016:function(e,t,n){n.d(t,{Z:function(){return r}});var o=n(7462),i=n(3366),a=n(7294),l=["children"];function r(e){var t=e.children,n=(0,i.Z)(e,l);return a.createElement("div",(0,o.Z)({role:"tabpanel"},n),t)}},250:function(e,t,n){n.d(t,{Z:function(){return c}});var o=n(7294),i=n(5773),a=n(6010),l="tabItem_V91s",r="tabItemActive_JsUu",s="tab_ntnM";var m=37,u=39;function c(e){var t=e.lazy,n=e.defaultValue,c=e.values,p=e.groupId,d=(0,i.UB)(),h=d.tabGroupChoices,C=d.setTabGroupChoices,b=(0,o.useState)(n),f=b[0],g=b[1],v=o.Children.toArray(e.children),k=[];if(null!=p){var I=h[p];null!=I&&I!==f&&c.some((function(e){return e.value===I}))&&g(I)}var y=function(e){var t=e.currentTarget,n=k.indexOf(t),o=c[n].value;g(o),null!=p&&(C(p,o),setTimeout((function(){var e,n,o,i,a,l,s,m;(e=t.getBoundingClientRect(),n=e.top,o=e.left,i=e.bottom,a=e.right,l=window,s=l.innerHeight,m=l.innerWidth,n>=0&&a<=m&&i<=s&&o>=0)||(t.scrollIntoView({block:"center",behavior:"smooth"}),t.classList.add(r),setTimeout((function(){return t.classList.remove(r)}),2e3))}),150))},T=function(e){var t;switch(e.keyCode){case u:var n=k.indexOf(e.target)+1;t=k[n]||k[0];break;case m:var o=k.indexOf(e.target)-1;t=k[o]||k[k.length-1];break;default:return}t.focus()},w=function(e,t){return t.value===e||t.values&&-1!=t.values.indexOf(e)};return o.createElement("div",{className:"tabs-container"},o.createElement("ul",{role:"tablist","aria-orientation":"horizontal",className:"tabs"},c.map((function(e){var t=e.value,n=e.label;return o.createElement("li",{role:"tab",tabIndex:f===t?0:-1,"aria-selected":f===t,className:(0,a.Z)("tabs__item",l,{"tabs__item--active":f===t}),key:t,ref:function(e){return e&&k.push(e)},onKeyDown:T,onFocus:y,onClick:y},n)}))),t?o.cloneElement(v.find((function(e){return w(f,e.props)})),{className:s}):o.createElement("div",null,v.map((function(e,t){return o.cloneElement(e,{key:t,hidden:!w(f,e.props),className:s})}))),o.createElement("br",null))}},7488:function(e,t,n){n.r(t),n.d(t,{PreviewTooltip:function(){return g},contentTitle:function(){return b},default:function(){return I},frontMatter:function(){return C},metadata:function(){return f},toc:function(){return v}});var o=n(7462),i=n(3366),a=n(7294),l=n(3905),r=n(250),s=n(1016),m=n(4996),u=n(2725),c=n(5880),p=n(4214),d=n(5306),h=["components"],C={},b="Combinable Items",f={unversionedId:"dev/items/combinable-items",id:"dev/items/combinable-items",title:"Combinable Items",description:"Making items combinable",source:"@site/docs/dev/items/combinable-items.mdx",sourceDirName:"dev/items",slug:"/dev/items/combinable-items",permalink:"/RogueLibs/docs/dev/items/combinable-items",editUrl:"https://github.com/SugarBarrel/RogueLibs/edit/main/website/docs/dev/items/combinable-items.mdx",tags:[],version:"current",frontMatter:{},sidebar:"documentationSidebar",previous:{title:"Usable Items",permalink:"/RogueLibs/docs/dev/items/usable-items"},next:{title:"Targetable Items",permalink:"/RogueLibs/docs/dev/items/targetable-items"}};function g(e){e.props;var t=(0,a.useState)((0,m.Z)("/img/TestItem.png")),n=t[0],o=t[1],i=(0,a.useState)("#FFED00"),r=i[0],s=i[1],u=(0,a.useState)("$123"),p=u[0],d=u[1];return(0,l.kt)("div",{style:{padding:"10px",border:"5px dashed var(--ifm-menu-color-background-hover)",width:"max-content"}},(0,l.kt)("input",{type:"file",accept:"image/*",onChange:function(e){if(e.target.files[0]){var t=new FileReader;t.addEventListener("load",(function(){return o(t.result)})),t.readAsDataURL(e.target.files[0])}},style:{margin:"5px"}}),(0,l.kt)("div",{style:{margin:"5px"}},(0,l.kt)(c.Z,{sprite:n,tooltip:p,tooltipColor:r,mdxType:"InventorySlot"})),(0,l.kt)("input",{type:"text",placeholder:"$123",onChange:function(e){return d(e.target.value)},style:{fontSize:"22px",margin:"5px"}}),(0,l.kt)("input",{type:"color",value:r,onChange:function(e){return s(e.target.value)}}))}var v=[{value:"Making items combinable",id:"making-combinable",children:[{value:"Inventory Slot Preview",id:"slot-preview",children:[],level:3}],level:2},{value:"Examples",id:"examples",children:[],level:2}],k={PreviewTooltip:g,toc:v};function I(e){var t=e.components,n=(0,i.Z)(e,h);return(0,l.kt)("wrapper",(0,o.Z)({},k,n,{components:t,mdxType:"MDXLayout"}),(0,l.kt)("h1",{id:"combinable-items"},"Combinable Items"),(0,l.kt)("h2",{id:"making-combinable"},"Making items combinable"),(0,l.kt)("p",null,"Just implement the ",(0,l.kt)("inlineCode",{parentName:"p"},"IItemCombinable")," interface in your item's class:"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-csharp",metastring:'title="MyCombinableItem.cs"',title:'"MyCombinableItem.cs"'},"// highlight-next-line\npublic class MyCombinableItem : CustomItem, IItemCombinable\n{\n    // highlight-start\n    public bool CombineFilter(InvItem other) { /* ... */ }\n    public bool CombineItems(InvItem other) { /* ... */ }\n    public CustomTooltip CombineTooltip(InvItem other) { /* ... */ }\n    public CustomTooltip CombineCursorText(InvItem other) { /* ... */ }\n    // highlight-end\n}\n")),(0,l.kt)("p",null,"Plus, your item's type must be ",(0,l.kt)("inlineCode",{parentName:"p"},'"Combine"'),":"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-csharp"},"    public override void SetupDetails()\n    {\n        // highlight-next-line\n        Item.itemType = ItemTypes.Combine;\n        /* ... */\n    }\n")),(0,l.kt)("p",null,(0,l.kt)("inlineCode",{parentName:"p"},"CombineFilter")," determines what items will be highlighted, when combining the current item."),(0,l.kt)("p",null,(0,l.kt)("inlineCode",{parentName:"p"},"CombineItems")," combines the current item with the other one. The return value indicates whether it was a success or not. Usually you'd just play a ",(0,l.kt)("inlineCode",{parentName:"p"},'"CantDo"')," sound, if the items cannot be combined. Returning ",(0,l.kt)("inlineCode",{parentName:"p"},"true")," will also play an animation."),(0,l.kt)("p",null,(0,l.kt)("inlineCode",{parentName:"p"},"CombineTooltip")," determines the tooltip in the upper-left corner of the inventory slot. ",(0,l.kt)("inlineCode",{parentName:"p"},"Text")," set to ",(0,l.kt)("inlineCode",{parentName:"p"},"null")," will default to an empty string, and ",(0,l.kt)("inlineCode",{parentName:"p"},"Color")," set to ",(0,l.kt)("inlineCode",{parentName:"p"},"null")," will default to ",(0,l.kt)(u.Z,{color:"#FFED00",mdxType:"ColorSquare"}),". ",(0,l.kt)("a",{parentName:"p",href:"#slot-preview"},"See the tool below"),"."),(0,l.kt)("p",null,(0,l.kt)("inlineCode",{parentName:"p"},"CombineCursorText")," determines the cursor text when hovering over the item. ",(0,l.kt)("inlineCode",{parentName:"p"},"Text")," set to ",(0,l.kt)("inlineCode",{parentName:"p"},"null"),' will default to "Combine", and ',(0,l.kt)("inlineCode",{parentName:"p"},"Color")," set to ",(0,l.kt)("inlineCode",{parentName:"p"},"null")," will default to ",(0,l.kt)(u.Z,{color:"#FFFFFF",mdxType:"ColorSquare"}),"."),(0,l.kt)("h3",{id:"slot-preview"},"Inventory Slot Preview"),(0,l.kt)("p",null,"Wanna see how your ",(0,l.kt)("inlineCode",{parentName:"p"},"CombineTooltip")," will look in the game? Check out this small tool:"),(0,l.kt)(g,{mdxType:"PreviewTooltip"}),(0,l.kt)("h2",{id:"examples"},"Examples"),(0,l.kt)(r.Z,{defaultValue:"ammobox",values:[{label:"Centrifuge",value:"centrifuge"},{label:"Spice Rack",value:"spicerack"},{label:"Ammo Box",value:"ammobox"}],mdxType:"Tabs"},(0,l.kt)(s.Z,{value:"centrifuge",mdxType:"TabItem"},(0,l.kt)("p",null,"A simple example that inverts the Syringes' effects."),(0,l.kt)(p.Z,{mdxType:"CodeSnippet"},'using System.Collections.Generic;\nusing System.Linq;\n\nnamespace RogueLibsCore.Test\n{\n    public class Centrifuge : CustomItem, IItemCombinable\n    {\n        [RLSetup]\n        public static void Setup()\n        {\n            /*\n            RogueLibs.CreateCustomItem<Centrifuge>()\n                .WithName(new CustomNameInfo("Centrifuge"))\n                .WithDescription(new CustomNameInfo("Combine with a syringe to invert its effect."))\n                .WithSprite(Properties.Resources.Centrifuge)\n                .WithUnlock(new ItemUnlock\n                {\n                    UnlockCost = 10,\n                    LoadoutCost = 5,\n                    CharacterCreationCost = 3,\n                    Prerequisites = { VanillaItems.Antidote },\n                });\n            */\n        }\n\n        public override void SetupDetails()\n        {\n            Item.itemType = ItemTypes.Combine;\n            Item.itemValue = 8;\n            Item.initCount = 10;\n            Item.stackable = true;\n            Item.hasCharges = true;\n        }\n\n        private static readonly Dictionary<string, string> invertDictionary = new Dictionary<string, string>\n        {\n            [VanillaEffects.Poisoned] = VanillaEffects.RegenerateHealth,\n            [VanillaEffects.Slow] = VanillaEffects.Fast,\n            [VanillaEffects.Weak] = VanillaEffects.Strength,\n            [VanillaEffects.Acid] = VanillaEffects.Invincible,\n            [VanillaEffects.Confused] = VanillaEffects.Invisible,\n        };\n        static Centrifuge()\n        {\n            foreach (KeyValuePair<string, string> pair in invertDictionary.ToArray())\n                invertDictionary.Add(pair.Value, pair.Key);\n        }\n\n        public bool CombineFilter(InvItem other) => other.invItemName == VanillaItems.Syringe\n            && other.contents.Count > 0 && invertDictionary.ContainsKey(other.contents[0]);\n        public bool CombineItems(InvItem other)\n        {\n            if (!CombineFilter(other)) return false;\n\n            other.contents[0] = invertDictionary[other.contents[0]];\n\n            Count--;\n            gc.audioHandler.Play(Owner, VanillaAudio.CombineItem);\n            return true;\n        }\n        public CustomTooltip CombineCursorText(InvItem other) => default;\n        public CustomTooltip CombineTooltip(InvItem other) => default;\n    }\n}\n')),(0,l.kt)(s.Z,{value:"spicerack",mdxType:"TabItem"},(0,l.kt)("p",null,"A simple example, with custom hooks to keep track of seasoned items."),(0,l.kt)("p",null,"See more about custom hooks ",(0,l.kt)("a",{parentName:"p",href:"/RogueLibs/docs/dev/hooks/"},"here"),"."),(0,l.kt)(p.Z,{mdxType:"CodeSnippet"},d.Z)),(0,l.kt)(s.Z,{value:"ammobox",mdxType:"TabItem"},(0,l.kt)("p",null,"A pretty complicated example with a lot of math."),(0,l.kt)(p.Z,{mdxType:"CodeSnippet"},'using UnityEngine;\n\nnamespace RogueLibsCore.Test\n{\n    [ItemCategories(RogueCategories.Technology, RogueCategories.GunAccessory, RogueCategories.Guns)]\n    public class AmmoBox : CustomItem, IItemCombinable\n    {\n        [RLSetup]\n        public static void Setup()\n        {\n            RogueLibs.CreateCustomItem<AmmoBox>()\n                .WithName(new CustomNameInfo("Ammo Box"))\n                .WithDescription(new CustomNameInfo("Combine with any refillable weapon to refill it. Limited ammo."))\n                .WithSprite(Properties.Resources.AmmoBox)\n                .WithUnlock(new ItemUnlock\n                {\n                    UnlockCost = 10,\n                    LoadoutCost = 5,\n                    CharacterCreationCost = 3,\n                    Prerequisites = { VanillaItems.KillAmmunizer },\n                });\n        }\n\n        public override void SetupDetails()\n        {\n            Item.itemType = ItemTypes.Combine;\n            Item.itemValue = 4;\n            Item.initCount = 100;\n            Item.rewardCount = 200;\n            Item.hasCharges = true;\n            Item.stackable = true;\n        }\n        public bool CombineFilter(InvItem other) => other.itemType == ItemTypes.WeaponProjectile && !other.noRefills;\n        public bool CombineItems(InvItem other)\n        {\n            if (!CombineFilter(other))\n            {\n                gc.audioHandler.Play(Owner, VanillaAudio.CantDo);\n                return false;\n            }\n            if (other.invItemCount >= other.maxAmmo)\n            {\n                Owner.SayDialogue("AmmoDispenserFull");\n                gc.audioHandler.Play(Owner, VanillaAudio.CantDo);\n                return false;\n            }\n\n            int amountToRefill = other.maxAmmo - other.invItemCount;\n            float singleCost = (float)other.itemValue / other.maxAmmo;\n            if (Owner.oma.superSpecialAbility && (Owner.agentName == VanillaAgents.Soldier || Owner.agentName == VanillaAgents.Doctor))\n                singleCost = 0f;\n\n            int affordableAmount = (int)Mathf.Ceil(Count / singleCost);\n            int willBeBought = Mathf.Min(affordableAmount, amountToRefill);\n            int willBeReduced = (int)Mathf.Min(Count, willBeBought * singleCost);\n\n            Count -= willBeReduced;\n            other.invItemCount += willBeBought;\n            Owner.SayDialogue("AmmoDispenserFilled");\n            gc.audioHandler.Play(Owner, VanillaAudio.BuyItem);\n            return true;\n        }\n\n        public CustomTooltip CombineTooltip(InvItem other)\n        {\n            if (!CombineFilter(other)) return default;\n\n            int amountToRefill = other.maxAmmo - other.invItemCount;\n            if (amountToRefill == 0) return default;\n\n            float singleCost = (float)other.itemValue / other.maxAmmo;\n            if (Owner.oma.superSpecialAbility && (Owner.agentName == VanillaAgents.Soldier || Owner.agentName == VanillaAgents.Doctor))\n                singleCost = 0f;\n            int cost = (int)Mathf.Floor(amountToRefill * singleCost);\n            int canAfford = (int)Mathf.Ceil(Count / singleCost);\n\n            return "+" + Mathf.Min(amountToRefill, canAfford) + " (" + Mathf.Min(cost, Count) + ")";\n        }\n\n        public CustomTooltip CombineCursorText(InvItem other) => gc.nameDB.GetName("RefillGun", NameTypes.Interface);\n        // it\'s one of the vanilla dialogues, so there\'s no need to define it in the mod\n    }\n}\n'))))}I.isMDXComponent=!0},5306:function(e,t){t.Z='using UnityEngine;\n\nnamespace RogueLibsCore.Test\n{\n    [ItemCategories(RogueCategories.Food, RogueCategories.Health)]\n    public class SpiceRack : CustomItem, IItemCombinable\n    {\n        [RLSetup]\n        public static void Setup()\n        {\n            RogueLibs.CreateCustomItem<SpiceRack>()\n                .WithName(new CustomNameInfo("Spice Rack"))\n                .WithDescription(new CustomNameInfo("Combine with any food item to increase its healing properties."))\n                .WithSprite(Properties.Resources.SpiceRack)\n                .WithUnlock(new ItemUnlock\n                {\n                    UnlockCost = 10,\n                    LoadoutCost = 3,\n                    CharacterCreationCost = 2,\n                    Prerequisites = { VanillaItems.FoodProcessor },\n                });\n\n            SeasonCursorText = RogueLibs.CreateCustomName("SeasonItem", NameTypes.Interface, new CustomNameInfo("Season"));\n        }\n        private static CustomName SeasonCursorText = null!;\n\n        public override void SetupDetails()\n        {\n            Item.itemType = ItemTypes.Combine;\n            Item.itemValue = 4;\n            Item.initCount = 10;\n            Item.rewardCount = 15;\n            Item.stackable = true;\n            Item.hasCharges = true;\n        }\n        public bool CombineFilter(InvItem other)\n        {\n            if (other.itemType != ItemTypes.Food || other.healthChange is 0\n                || !other.Categories.Contains(RogueCategories.Food)) return false;\n\n            SpicedHook? hook = other.GetHook<SpicedHook>();\n            return hook is null || hook.Spiciness < 3;\n        }\n        public bool CombineItems(InvItem other)\n        {\n            if (!CombineFilter(other)) return false;\n\n            SpicedHook hook = other.GetHook<SpicedHook>() ?? other.AddHook<SpicedHook>();\n            hook.IncreaseSpiciness();\n\n            Count--;\n            gc.audioHandler.Play(Owner, VanillaAudio.CombineItem);\n            return true;\n        }\n        public CustomTooltip CombineCursorText(InvItem other) => SeasonCursorText;\n        public CustomTooltip CombineTooltip(InvItem other)\n        {\n            if (!CombineFilter(other)) return default;\n\n            SpicedHook? hook = other.GetHook<SpicedHook>();\n            int bonus = hook is null ? (int)Mathf.Ceil(other.healthChange / 4f) : hook.HealthBonus;\n            return new CustomTooltip($"+{bonus}", Color.green);\n        }\n\n        private class SpicedHook : HookBase<InvItem>\n        {\n            protected override void Initialize()\n                => HealthBonus = (int)Mathf.Ceil(Instance.healthChange / 4f);\n\n            public int HealthBonus { get; private set; }\n            public int Spiciness { get; private set; }\n\n            public void IncreaseSpiciness()\n            {\n                if (Spiciness is 3) return;\n\n                Spiciness++;\n                Instance.healthChange += HealthBonus;\n            }\n        }\n    }\n}\n'}}]);