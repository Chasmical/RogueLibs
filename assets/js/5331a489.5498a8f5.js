"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[8200],{3905:(e,t,n)=>{n.d(t,{Zo:()=>c,kt:()=>p});var o=n(7294);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function a(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);t&&(o=o.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,o)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?a(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):a(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,o,r=function(e,t){if(null==e)return{};var n,o,r={},a=Object.keys(e);for(o=0;o<a.length;o++)n=a[o],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(o=0;o<a.length;o++)n=a[o],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var s=o.createContext({}),u=function(e){var t=o.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},c=function(e){var t=u(e.components);return o.createElement(s.Provider,{value:t},e.children)},m="mdxType",f={inlineCode:"code",wrapper:function(e){var t=e.children;return o.createElement(o.Fragment,{},t)}},d=o.forwardRef((function(e,t){var n=e.components,r=e.mdxType,a=e.originalType,s=e.parentName,c=l(e,["components","mdxType","originalType","parentName"]),m=u(n),d=r,p=m["".concat(s,".").concat(d)]||m[d]||f[d]||a;return n?o.createElement(p,i(i({ref:t},c),{},{components:n})):o.createElement(p,i({ref:t},c))}));function p(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var a=n.length,i=new Array(a);i[0]=d;var l={};for(var s in t)hasOwnProperty.call(t,s)&&(l[s]=t[s]);l.originalType=e,l[m]="string"==typeof e?e:r,i[1]=l;for(var u=2;u<a;u++)i[u]=n[u];return o.createElement.apply(null,i)}return o.createElement.apply(null,n)}d.displayName="MDXCreateElement"},1016:(e,t,n)=>{n.d(t,{Z:()=>a});var o=n(7462),r=n(7294);function a(e){let{children:t,...n}=e;return r.createElement("div",(0,o.Z)({role:"tabpanel"},n),t)}},5878:(e,t,n)=>{n.d(t,{Z:()=>y});var o=n(7294),r=n(6550),a=n(1980),i=n(7392),l=n(12);function s(e){return function(e){return o.Children.map(e,(e=>{if(!e||(0,o.isValidElement)(e)&&function(e){const{props:t}=e;return!!t&&"object"==typeof t&&"value"in t}(e))return e;throw new Error(`Docusaurus error: Bad <Tabs> child <${"string"==typeof e.type?e.type:e.type.name}>: all children of the <Tabs> component should be <TabItem>, and every <TabItem> should have a unique "value" prop.`)}))?.filter(Boolean)??[]}(e).map((e=>{let{props:{value:t,label:n,attributes:o,default:r}}=e;return{value:t,label:n,attributes:o,default:r}}))}function u(e){const{values:t,children:n}=e;return(0,o.useMemo)((()=>{const e=t??s(n);return function(e){const t=(0,i.l)(e,((e,t)=>e.value===t.value));if(t.length>0)throw new Error(`Docusaurus error: Duplicate values "${t.map((e=>e.value)).join(", ")}" found in <Tabs>. Every value needs to be unique.`)}(e),e}),[t,n])}function c(e){let{value:t,tabValues:n}=e;return n.some((e=>e.value===t))}function m(e){let{queryString:t=!1,groupId:n}=e;const i=(0,r.k6)(),l=function(e){let{queryString:t=!1,groupId:n}=e;if("string"==typeof t)return t;if(!1===t)return null;if(!0===t&&!n)throw new Error('Docusaurus error: The <Tabs> component groupId prop is required if queryString=true, because this value is used as the search param name. You can also provide an explicit value such as queryString="my-search-param".');return n??null}({queryString:t,groupId:n});return[(0,a._X)(l),(0,o.useCallback)((e=>{if(!l)return;const t=new URLSearchParams(i.location.search);t.set(l,e),i.replace({...i.location,search:t.toString()})}),[l,i])]}function f(e){const{defaultValue:t,queryString:n=!1,groupId:r}=e,a=u(e),[i,s]=(0,o.useState)((()=>function(e){let{defaultValue:t,tabValues:n}=e;if(0===n.length)throw new Error("Docusaurus error: the <Tabs> component requires at least one <TabItem> children component");if(t){if(!c({value:t,tabValues:n}))throw new Error(`Docusaurus error: The <Tabs> has a defaultValue "${t}" but none of its children has the corresponding value. Available values are: ${n.map((e=>e.value)).join(", ")}. If you intend to show no default tab, use defaultValue={null} instead.`);return t}const o=n.find((e=>e.default))??n[0];if(!o)throw new Error("Unexpected error: 0 tabValues");return o.value}({defaultValue:t,tabValues:a}))),[f,d]=m({queryString:n,groupId:r}),[p,h]=function(e){let{groupId:t}=e;const n=function(e){return e?`docusaurus.tab.${e}`:null}(t),[r,a]=(0,l.Nk)(n);return[r,(0,o.useCallback)((e=>{n&&a.set(e)}),[n,a])]}({groupId:r}),y=(()=>{const e=f??p;return c({value:e,tabValues:a})?e:null})();(0,o.useLayoutEffect)((()=>{y&&s(y)}),[y]);return{selectedValue:i,selectValue:(0,o.useCallback)((e=>{if(!c({value:e,tabValues:a}))throw new Error(`Can't select invalid tab value=${e}`);s(e),d(e),h(e)}),[d,h,a]),tabValues:a}}var d=n(6010);const p={tabItem:"tabItem_V91s",tabItemActive:"tabItemActive_JsUu",blink:"blink_ZPVS",tab:"tab_ntnM"};const h={left:37,right:39};function y(e){const{lazy:t,defaultValue:n,values:r,groupId:a}=e,i=o.Children.toArray(e.children),{tabValues:l,selectedValue:s,selectValue:u}=f({children:i,defaultValue:n,values:r,groupId:a}),c=[],m=e=>{const t=e.currentTarget,n=r[c.indexOf(t)].value;u(n),null!=a&&setTimeout((()=>{(function(e){const{top:t,left:n,bottom:o,right:r}=e.getBoundingClientRect(),{innerHeight:a,innerWidth:i}=window;return t>=0&&r<=i&&o<=a&&n>=0})(t)||(t.scrollIntoView({block:"center",behavior:"smooth"}),t.classList.add(p.tabItemActive),setTimeout((()=>t.classList.remove(p.tabItemActive)),2e3))}),150)},y=e=>{let t;switch(e.keyCode){case h.right:{const n=c.indexOf(e.target)+1;t=c[n]||c[0];break}case h.left:{const n=c.indexOf(e.target)-1;t=c[n]||c[c.length-1];break}default:return}t.focus()},k=(e,t)=>t.value===e||t.values&&-1!=t.values.indexOf(e);return o.createElement("div",{className:"tabs-container"},o.createElement("ul",{role:"tablist","aria-orientation":"horizontal",className:"tabs"},r.map((e=>{let{value:t,label:n}=e;return o.createElement("li",{role:"tab",tabIndex:s===t?0:-1,"aria-selected":s===t,className:(0,d.Z)("tabs__item",p.tabItem,{"tabs__item--active":s===t}),key:t,ref:e=>e&&c.push(e),onKeyDown:y,onFocus:m,onClick:m},n)}))),t?o.cloneElement(i.find((e=>k(s,e.props))),{className:p.tab}):o.createElement("div",null,i.map(((e,t)=>o.cloneElement(e,{key:t,hidden:!k(s,e.props),className:p.tab})))),o.createElement("br",null))}},3623:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>s,contentTitle:()=>i,default:()=>f,frontMatter:()=>a,metadata:()=>l,toc:()=>u});var o=n(7462),r=(n(7294),n(3905));n(5878),n(1016),n(4996);const a={},i="Hook Factories",l={unversionedId:"dev/hooks/hook-factories",id:"dev/hooks/hook-factories",title:"Hook Factories",description:"Hook factories are responsible for the creation of hooks. Custom content classes use hook factories internally, so there's basically no need for you to create your own. But, if you want to semi-automate the creation of a lot of different items/traits with slightly differing functionality, you can create a class, that will handle everything, and turn its parts on/off conditionally after initializing the hook.",source:"@site/docs/dev/hooks/hook-factories.mdx",sourceDirName:"dev/hooks",slug:"/dev/hooks/hook-factories",permalink:"/RogueLibs/docs/dev/hooks/hook-factories",draft:!1,editUrl:"https://github.com/Chasmical/RogueLibs/edit/main/website/docs/dev/hooks/hook-factories.mdx",tags:[],version:"current",frontMatter:{},sidebar:"documentationSidebar",previous:{title:"Hooks",permalink:"/RogueLibs/docs/dev/hooks/"},next:{title:"Introduction",permalink:"/RogueLibs/docs/site/intro"}},s={},u=[{value:"<code>IHookFactory</code> interface",id:"ihookfactory",level:2},{value:"Initialization",id:"initialization",level:2},{value:"Examples",id:"examples",level:2}],c={toc:u},m="wrapper";function f(e){let{components:t,...n}=e;return(0,r.kt)(m,(0,o.Z)({},c,n,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("h1",{id:"hook-factories"},"Hook Factories"),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Hook factories")," are responsible for the creation of hooks. Custom content classes use hook factories internally, so there's basically no need for you to create your own. But, if you want to semi-automate the creation of a lot of different items/traits with slightly differing functionality, you can create a class, that will handle everything, and turn its parts on/off conditionally after initializing the hook."),(0,r.kt)("h2",{id:"ihookfactory"},(0,r.kt)("inlineCode",{parentName:"h2"},"IHookFactory")," interface"),(0,r.kt)("p",null,"You can create hook factories by deriving either from ",(0,r.kt)("inlineCode",{parentName:"p"},"IHookFactory<T>")," or from ",(0,r.kt)("inlineCode",{parentName:"p"},"HookFactoryBase<T>"),". The hook factory in the example below will attach a new ",(0,r.kt)("inlineCode",{parentName:"p"},"MyCustomHook"),' hook to all items that have a "Food" category:'),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-csharp",metastring:'title="MyCustomHookFactory.cs"',title:'"MyCustomHookFactory.cs"'},'public class MyCustomHookFactory : HookFactoryBase<InvItem>\n{\n    public override bool TryCreate(InvItem instance, out IHook<InvItem> hook)\n    {\n        if (instance.Categories.Contains("Food"))\n        {\n            hook = new MyCustomHook();\n            return true;\n        }\n        hook = null;\n        return false;\n    }\n}\n')),(0,r.kt)("admonition",{type:"caution"},(0,r.kt)("p",{parentName:"admonition"},"You only need to create a hook object. Don't attach it to the instance. That's the external code's responsibility."),(0,r.kt)("pre",{parentName:"admonition"},(0,r.kt)("code",{parentName:"pre",className:"language-csharp"},"if (factory.TryCreate(item, out IHook<InvItem> hook))\n    item.AddHook(hook);\n"))),(0,r.kt)("h2",{id:"initialization"},"Initialization"),(0,r.kt)("p",null,"You can either implement your own way of using factories or add it to the RogueLibs' ",(0,r.kt)("inlineCode",{parentName:"p"},"RogueFramework")," class:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-csharp"},"RogueFramework.ItemFactories.Add(new MyCustomHookFactory());\n")),(0,r.kt)("h2",{id:"examples"},"Examples"),(0,r.kt)("p",null,"RogueLibs uses ",(0,r.kt)("inlineCode",{parentName:"p"},"CustomItemFactory")," and other similar classes to initialize custom items and other hooks:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-csharp"},"public sealed class CustomItemFactory : HookFactoryBase<InvItem>\n{\n    private readonly Dictionary<string, ItemEntry> itemsDict = new Dictionary<string, ItemEntry>();\n    \n    public override bool TryCreate(InvItem instance, out IHook<InvItem> hook)\n    {\n        if (instance != null && itemsDict.TryGetValue(instance.invItemName, out ItemEntry entry))\n        {\n            hook = entry.Initializer();\n            if (hook is CustomItem custom)\n                custom.ItemInfo = entry.ItemInfo;\n            return true;\n        }\n        hook = null;\n        return false;\n    }\n    public ItemInfo AddItem<TItem>() where TItem : CustomItem, new()\n    {\n        ItemInfo info = ItemInfo.Get<TItem>();\n        itemsDict.Add(info.Name, new ItemEntry { Initializer = () => new TItem(), ItemInfo = info });\n        return info;\n    }\n\n    private struct ItemEntry\n    {\n        public Func<IHook<InvItem>> Initializer;\n        public ItemInfo ItemInfo;\n    }\n}\n")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-csharp"},"public static void InvItem_SetupDetails(InvItem __instance)\n{\n    foreach (IHookFactory<InvItem> factory in RogueFramework.ItemFactories)\n        if (factory.TryCreate(__instance, out IHook<InvItem> hook))\n        {\n            __instance.AddHook(hook);\n        }\n}\n")))}f.isMDXComponent=!0}}]);