<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
    <id>https://chasmical.github.io/RogueLibs/ru/blog</id>
    <title>RogueLibs Documentation Blog</title>
    <updated>2022-01-30T00:00:00.000Z</updated>
    <generator>https://github.com/jpmonette/feed</generator>
    <link rel="alternate" href="https://chasmical.github.io/RogueLibs/ru/blog"/>
    <subtitle>RogueLibs Documentation Blog</subtitle>
    <icon>https://chasmical.github.io/RogueLibs/ru/img/favicon.ico</icon>
    <entry>
        <title type="html"><![CDATA[RogueLibs v3.5.0 enters beta]]></title>
        <id>https://chasmical.github.io/RogueLibs/ru/blog/2022/01/30/roguelibs-v3.5.0-beta</id>
        <link href="https://chasmical.github.io/RogueLibs/ru/blog/2022/01/30/roguelibs-v3.5.0-beta"/>
        <updated>2022-01-30T00:00:00.000Z</updated>
        <summary type="html"><![CDATA[Information about the v3.5.0-beta]]></summary>
        <content type="html"><![CDATA[<p>Today RogueLibs v3.5.0 enters a long beta, because there's a huge list of stuff that needs to be done before the release, mainly adding new custom interactions without adding more patches. You'll be able to download the beta version on <a href="https://github.com/Chasmical/RogueLibs/releases" target="_blank" rel="noopener noreferrer">RogueLibs' releases page</a>.</p><p>Just like the localization system in v3.1.0, v3.5.0 will completely replace the vanilla interactions system. The original code in these places is absolutely awful and inconsistent. So, we'll have to rewrite every single vanilla interaction to be moddable.</p><p><img loading="lazy" src="/RogueLibs/ru/assets/images/screenshot-b9e5ad9c8cef2ea5f300209d6747fa7e.png" width="1096" height="497" class="img_ev3q"></p><div class="theme-admonition theme-admonition-note alert alert--secondary admonition_LlT9"><div class="admonitionHeading_tbUL"><span class="admonitionIcon_kALy"><svg viewBox="0 0 14 16"><path fill-rule="evenodd" d="M6.3 5.69a.942.942 0 0 1-.28-.7c0-.28.09-.52.28-.7.19-.18.42-.28.7-.28.28 0 .52.09.7.28.18.19.28.42.28.7 0 .28-.09.52-.28.7a1 1 0 0 1-.7.3c-.28 0-.52-.11-.7-.3zM8 7.99c-.02-.25-.11-.48-.31-.69-.2-.19-.42-.3-.69-.31H6c-.27.02-.48.13-.69.31-.2.2-.3.44-.31.69h1v3c.02.27.11.5.31.69.2.2.42.31.69.31h1c.27 0 .48-.11.69-.31.2-.19.3-.42.31-.69H8V7.98v.01zM7 2.3c-3.14 0-5.7 2.54-5.7 5.68 0 3.14 2.56 5.7 5.7 5.7s5.7-2.55 5.7-5.7c0-3.15-2.56-5.69-5.7-5.69v.01zM7 .98c3.86 0 7 3.14 7 7s-3.14 7-7 7-7-3.12-7-7 3.14-7 7-7z"></path></svg></span>примечание</div><div class="admonitionContent_S0QG"><p>In RogueLibs v3.5.0-beta.X all of the objects will have this button. And by "that button" I mean the "I am patched!" one, not "Make Offering of Human Body" one. It will be removed from the v3.5.0 full release, of course.</p></div></div><p>Click "Read More" to see the entire to-do list.</p><p>❌<code>Agent</code>, ✅<code>AirConditioner</code>, ✅<code>AlarmButton</code>, ✅<code>Altar</code>, ✅<code>AmmoDispenser</code>, ❌<code>ArcadeGame</code>, ❌<code>ATMMachine</code>, ❌<code>AugmentationBooth</code>, ✅<code>Barbecue</code>, ❌<code>BarbedWire</code>, ❌<code>Bars</code>, ❌(?)<code>BarStool</code>, ❌(?)<code>Bathtub</code>, ❌<code>Bed</code>, ❌(?)<code>Boulder</code>, ❌(?)<code>BoulderSmall</code>, ❌(?)<code>Bush</code>, ❌<code>CapsuleMachine</code>, ❌(?)<code>Chair</code>, ❌(?)<code>ChestBasic</code>, ❌<code>CloneMachine</code>, ❌<code>Computer</code>, ❌(?)<code>Counter</code>, ❌<code>Crate</code>, ❌(?)<code>Desk</code>, ❌<code>Door</code>, ❌<code>Elevator</code>, ❌(?)<code>ExplodingBarrel</code>, ❌<code>FireHydrant</code>, ❌(?)<code>FirePlace</code>, ❌(?)<code>FireSpewer</code>, ❌(?)<code>FlameGrate</code>, ❌(?)<code>FlamingBarrel</code>, ❌(?)<code>GasVent</code>, ❌<code>Generator</code>, ❌<code>Generator2</code>, ❌(?)<code>Gravestone</code>, ❌(?)<code>Item</code>, ❌<code>Jukebox</code>, ❌(?)<code>KillerPlant</code>, ❌(?)<code>Lamp</code>, ❌<code>LaserEmitter</code>, ❌<code>LoadoutMachine</code>, ❌(?)<code>LockdownWall</code>, ❌(?)<code>Manhole</code>, ❌(?)<code>MineCart</code>, ❌(?)<code>MovieScreen</code>, ❌<code>PawnShopMachine</code>, ❌(?)<code>Plant</code>, ❌<code>Podium</code>, ❌<code>PoliceBox</code>, ❌(?)<code>PoolTable</code>, ❌<code>PowerBox</code>, ❌<code>Refrigerator</code>, ❌<code>Safe</code>, ❌<code>SatelliteDish</code>, ❌(?)<code>SawBlade</code>, ❌<code>SecurityCam</code>, ❌(?)<code>Shelf</code>, ❌(?)<code>Sign</code>, ❌(?)<code>SlimeBarrel</code>, ❌(?)<code>SlimePuddle</code>, ❌<code>SlotMachine</code>, ❌(?)<code>Speaker</code>, ❌(?)<code>StartingPoint</code>, ❌(?)<code>Stove</code>, ❌(?)<code>SwitchBasic</code>, ❌(?)<code>Table</code>, ❌(?)<code>TableBig</code>, ❌(?)<code>Television</code>, ❌<code>Toilet</code>, ❌(?)<code>Train</code>, ❌<code>TrapDoor</code>, ❌(?)<code>TrashCan</code>, ❌(?)<code>Tree</code>, ❌(?)<code>Tube</code>, ❌<code>Turntables</code>, ❌<code>Turret</code>, ❌(?)<code>VendorCart</code>, ❌(?)<code>WasteBasket</code>, ❌<code>WaterPump</code>, ❌<code>Well</code>, ❌<code>Window</code>.</p><div class="theme-admonition theme-admonition-note alert alert--secondary admonition_LlT9"><div class="admonitionHeading_tbUL"><span class="admonitionIcon_kALy"><svg viewBox="0 0 14 16"><path fill-rule="evenodd" d="M6.3 5.69a.942.942 0 0 1-.28-.7c0-.28.09-.52.28-.7.19-.18.42-.28.7-.28.28 0 .52.09.7.28.18.19.28.42.28.7 0 .28-.09.52-.28.7a1 1 0 0 1-.7.3c-.28 0-.52-.11-.7-.3zM8 7.99c-.02-.25-.11-.48-.31-.69-.2-.19-.42-.3-.69-.31H6c-.27.02-.48.13-.69.31-.2.2-.3.44-.31.69h1v3c.02.27.11.5.31.69.2.2.42.31.69.31h1c.27 0 .48-.11.69-.31.2-.19.3-.42.31-.69H8V7.98v.01zM7 2.3c-3.14 0-5.7 2.54-5.7 5.68 0 3.14 2.56 5.7 5.7 5.7s5.7-2.55 5.7-5.7c0-3.15-2.56-5.69-5.7-5.69v.01zM7 .98c3.86 0 7 3.14 7 7s-3.14 7-7 7-7-3.12-7-7 3.14-7 7-7z"></path></svg></span>Legend</div><div class="admonitionContent_S0QG"><p>❌ - not implemented, 🔹 - not tested, ✅ - implemented, (?) - may be tricky to implement.</p></div></div><p>See the <a href="https://discord.gg/m3zuHSwQw2" target="_blank" rel="noopener noreferrer">#modding channel</a> on the <a href="https://discord.com/invite/streetsofrogue" target="_blank" rel="noopener noreferrer">official SoR's Discord server</a> for an up-to-date information. The list in this article will not be updated.</p>]]></content>
        <author>
            <name>Abbysssal</name>
            <uri>https://github.com/Chasmical</uri>
        </author>
        <category label="roguelibs" term="roguelibs"/>
    </entry>
    <entry>
        <title type="html"><![CDATA[What I hate about SoR]]></title>
        <id>https://chasmical.github.io/RogueLibs/ru/blog/2021/08/31/what-i-hate-about-sor</id>
        <link href="https://chasmical.github.io/RogueLibs/ru/blog/2021/08/31/what-i-hate-about-sor"/>
        <updated>2021-08-31T00:00:00.000Z</updated>
        <summary type="html"><![CDATA[The code is really hard and wet.]]></summary>
        <content type="html"><![CDATA[<h2 class="anchor anchor_q0b4 anchorWithHideOnScrollNavbar_emO8" id="the-code-is-really-hard-and-wet"><a class="hash-link" href="#the-code-is-really-hard-and-wet" title="Прямая ссылка на этот заголовок">​</a> <!-- -->The code is really hard and wet</h2><p>.. Wait- No! I mean that the game is really <strong>hard</strong>coded! And the code is very <strong>WET</strong> - it's the opposite of the DRY (Don't Repeat Yourself) principle... It's pretty funny to say that though.</p><p>So, anyways, I decided to make a list of things that I hate about modding Streets of Rogue:</p><h3 class="anchor anchor_q0b4 anchorWithHideOnScrollNavbar_emO8" id="global-namespace"><a class="hash-link" href="#global-namespace" title="Прямая ссылка на этот заголовок">​</a> <!-- -->Global namespace</h3><p>The first annoying thing that you notice, when you take a brief look into SoR modding, is that all of the game's types are in the global namespace. There's a couple of exceptions, though that's probably from the copy-pasted code.</p><p><img loading="lazy" src="https://imgur.com/HYDcvxx.png" alt="Global namespace (dnSpy)" class="img_ev3q"></p><p>I mean, come on, just organize stuff in namespaces! Like <code>StreetsOfRogue</code> for main stuff, <code>StreetsOfRogue.LevelGeneration</code> for stuff related to level generation, <code>StreetsOfRogue.Objects</code> for all classes derived from <code>ObjectReal</code> and etc.</p><h3 class="anchor anchor_q0b4 anchorWithHideOnScrollNavbar_emO8" id="a-lot-of-unused-types-and-members"><a class="hash-link" href="#a-lot-of-unused-types-and-members" title="Прямая ссылка на этот заголовок">​</a> <!-- -->A lot of unused types and members</h3><p>There's a lot of stuff, that's not used in the game at all. Some part of it is just some test code. The other part - is not related to Streets of Rogue at all, and probably was copy-pasted from somewhere else.</p><p><img loading="lazy" src="https://imgur.com/XNeeF8Q.png" alt="A lot of unused types" class="img_ev3q">
<img loading="lazy" src="https://imgur.com/REhaTil.png" alt="3 unused fields in Agent class" class="img_ev3q"></p><h3 class="anchor anchor_q0b4 anchorWithHideOnScrollNavbar_emO8" id="bad-names"><a class="hash-link" href="#bad-names" title="Прямая ссылка на этот заголовок">​</a> <!-- -->Bad names</h3><p><del>Type and member names should be descriptive. I do understand that Matt was the only one developing the game and didn't expect anyone to mess with the game's code. I also understand that you would know your own code better that anyone else, but still...</del> Although, nevermind, there's probably a ton of comments in the source code, that we can't see in the compiled assembly.</p><h3 class="anchor anchor_q0b4 anchorWithHideOnScrollNavbar_emO8" id="too-many-string-comparisons"><a class="hash-link" href="#too-many-string-comparisons" title="Прямая ссылка на этот заголовок">​</a> <!-- -->Too many string comparisons</h3><p>After a couple of minutes of browsing through the code, you'll notice that there's way too many string comparisons. You know they're heavy on the performance. Sometimes they're in places where you don't even need strings, for example, in <code>Relationships</code> where you could have just used enumerations (actually, Matt used <strong>both</strong> enumerations and strings, for some weird reason).</p><h3 class="anchor anchor_q0b4 anchorWithHideOnScrollNavbar_emO8" id="empty-strings"><a class="hash-link" href="#empty-strings" title="Прямая ссылка на этот заголовок">​</a> <!-- -->Empty strings</h3><p>For some reason, <code>""</code> is used instead of <code>string.Empty</code>. And for some reason <code>""</code> in a lot of the code is equivalent to <code>null</code>. You know exactly what's wrong with that. In one case there <strong>is</strong> a string, that simply has zero length, in the other case - <strong>nothing</strong>, not even a string, just nothing. It's just plain wrong.</p><p><img loading="lazy" src="https://imgur.com/9rDQAe7.png" alt="&quot;&quot; used instead of string.Empty or null" class="img_ev3q"></p><h3 class="anchor anchor_q0b4 anchorWithHideOnScrollNavbar_emO8" id="non-flexible-mechanics"><a class="hash-link" href="#non-flexible-mechanics" title="Прямая ссылка на этот заголовок">​</a> <!-- -->Non-flexible mechanics</h3><p>For example, <code>Unlock</code> has three fields: <code>unavailable</code>, <code>onlyInCharacterCreation</code>, <code>freeItem</code>. How do you make something available only in Item Teleporter and not available anywhere else? Not only the fields are not descriptive, but they also function significantly differently - <code>unavailable</code> makes items unavailable anywhere, while <code>onlyInCharacterCreation</code> <em>apparently</em> makes an item available <strong>only</strong> in CC, and <code>freeItem</code> makes it available in Item Teleporter. You could have just named them <code>availableInGame</code>, <code>availableInCharacterCreation</code>, <code>availableInItemTeleporter</code>. Then their function and purpose is obvious.</p><p><img loading="lazy" src="https://imgur.com/gjnxvNM.png" alt="unavailable, onlyInCharacterCreation and freeItem fields" class="img_ev3q"></p><p>I spent <strong>dozens of hours</strong> converting that kind of system into something more maintainable: <code>Available</code>, <code>AvailableInCC</code> and <code>AvailableInItemTeleporter</code> - properties that you can find in RogueLibs. And even after that, <a href="https://github.com/Chasmical/RogueLibs/issues/40" target="_blank" rel="noopener noreferrer">there still were issues</a>. <em>I'm bad at discrete mathematics, that's why I had a hard time doing that.</em></p><h3 class="anchor anchor_q0b4 anchorWithHideOnScrollNavbar_emO8" id="hard-code"><a class="hash-link" href="#hard-code" title="Прямая ссылка на этот заголовок">​</a> <!-- -->Hard code</h3><p>A lot of stuff in the game is so hardcoded, that it's almost impossible to add something completely new and unique. You'd have to modify code in a ton of places, even in places that you wouldn't even think to look in.<br>
<!-- -->I mean, why would you hardcode the amount of players in the game? Each player has a different field (<code>playerAgent</code>, <code>playerAgent2</code>, and so on). That's the only reason why creating a multiplayer game with more than 4 players is impossible.</p><h3 class="anchor anchor_q0b4 anchorWithHideOnScrollNavbar_emO8" id="toolkit-2d-library"><a class="hash-link" href="#toolkit-2d-library" title="Прямая ссылка на этот заголовок">​</a> <!-- -->Toolkit 2D library</h3><p>I spent <strong>months</strong> trying to figure out how this fucking library works! There's no documentation on it. I mean, there are a couple of guides on how to use it in Unity Editor, but there's nothing on how it works internally. There are way too many unused classes, methods, properties and features, and for some reason the classes are in the global namespace. I'm surprised that Matt even figured out how to use it.</p><h3 class="anchor anchor_q0b4 anchorWithHideOnScrollNavbar_emO8" id="disregard-of-common-programming-principles"><a class="hash-link" href="#disregard-of-common-programming-principles" title="Прямая ссылка на этот заголовок">​</a> <!-- -->Disregard of common programming principles</h3><p>A lot of methods have way too many instructions in them and sometimes they do stuff that you wouldn't expect them to do. Just split these different features into different methods.<br>
<strong>KISS principle (Keep It Simple, Stupid)</strong>.</p><p>A lot of methods have a lot of repeating code. You can put that repeating code in a separate method. That will save you a ton of time writing new methods, plus, the code will be easier to read.<br>
<strong>DRY principle (Don't Repeat Yourself)</strong>.</p><h3 class="anchor anchor_q0b4 anchorWithHideOnScrollNavbar_emO8" id="binary-serialization"><a class="hash-link" href="#binary-serialization" title="Прямая ссылка на этот заголовок">​</a> <!-- -->Binary serialization</h3><p><img loading="lazy" src="https://imgur.com/bl0tEOj.png" alt="Comparison of raw binary data and XML-formatted file" class="img_ev3q"></p><p>Why would you use binary serialization? It's completely unreadable!<br>
<!-- -->Just use XML, JSON or whatever markup language you want, anything but raw binary data!</p><h3 class="anchor anchor_q0b4 anchorWithHideOnScrollNavbar_emO8" id="classes-are-used-like-structs"><a class="hash-link" href="#classes-are-used-like-structs" title="Прямая ссылка на этот заголовок">​</a> <!-- -->Classes are used like structs</h3><p>Matt clearly doesn't understand the difference between reference and value types.</p><h3 class="anchor anchor_q0b4 anchorWithHideOnScrollNavbar_emO8" id="lack-of-properties"><a class="hash-link" href="#lack-of-properties" title="Прямая ссылка на этот заголовок">​</a> <!-- -->Lack of properties</h3><p>Instead of constantly setting and updating fields' values in <code>Awake</code>, <code>Start</code> and other methods, you should just use properties. This way you won't have to constantly update fields' values, once you change one other field's value. The code will instantly become more maintainable.</p><p><img loading="lazy" src="https://imgur.com/gI7WV4I.png" alt="MyStart method sets up fields and is called in every other method" class="img_ev3q"></p><h3 class="anchor anchor_q0b4 anchorWithHideOnScrollNavbar_emO8" id="virtual-methods"><a class="hash-link" href="#virtual-methods" title="Прямая ссылка на этот заголовок">​</a> <!-- -->Virtual methods</h3><p>Instead of putting dozens of empty virtual methods in a base class and overriding them in a couple of derived types, you should use interfaces! That's literally what they were created for.</p><p><img loading="lazy" src="https://imgur.com/aKQA76v.png" alt="Empty virtual methods" class="img_ev3q"></p><h3 class="anchor anchor_q0b4 anchorWithHideOnScrollNavbar_emO8" id="lack-of-events"><a class="hash-link" href="#lack-of-events" title="Прямая ссылка на этот заголовок">​</a> <!-- -->Lack of events</h3><p>Instead of checking for conditions of doing something on every frame update, you should use events. That's literally what they were created for. As a bonus, there's no 1-frame delay, that you get from checking conditions every frame. And also, you know, checking event conditions every frame is a little bit excessive and definitely uses way too much CPU.</p><h3 class="anchor anchor_q0b4 anchorWithHideOnScrollNavbar_emO8" id="giant-for-loops"><a class="hash-link" href="#giant-for-loops" title="Прямая ссылка на этот заголовок">​</a> <!-- -->Giant <code>for</code> loops</h3><p><img loading="lazy" src="https://imgur.com/kY8gtia.png" alt="A lot of really big and inefficient loops" class="img_ev3q"></p><p>Why would you try to repeat the operation, if you know that the results will be exactly the same?</p><p><img loading="lazy" src="https://imgur.com/vjCshb5.png" alt="An unnecessary for loop" class="img_ev3q"></p><p>Why the hell would you write all of these giant <code>for</code> loops with a ton of conditions, <code>break</code>s and <code>continue</code>s and stuff like that, when there are already methods that do exactly that?<br>
<strong>Just use System.Linq extensions and List&lt;T<!-- -->&gt;<!-- --> methods!</strong></p><h2 class="anchor anchor_q0b4 anchorWithHideOnScrollNavbar_emO8" id="conclusion"><a class="hash-link" href="#conclusion" title="Прямая ссылка на этот заголовок">​</a> <!-- -->Conclusion</h2><p>Well, that's it. For now, at least.</p><p>I wish Matt would fix all of that and make SoR 2 at least slightly more moddable and maintainable. If all of that stuff gets fixed in SoR 2, I'd be really happy, and I'd definitely make sure that SoR 2 has the best modding library possible. Otherwise, I might just refuse to make mods for the sequel, when it comes out.</p>]]></content>
        <author>
            <name>Abbysssal</name>
            <uri>https://github.com/Chasmical</uri>
        </author>
        <category label="blog" term="blog"/>
        <category label="sor2" term="sor2"/>
    </entry>
    <entry>
        <title type="html"><![CDATA[RogueLibs v3.1.0 released!]]></title>
        <id>https://chasmical.github.io/RogueLibs/ru/blog/2021/08/18/roguelibs-v3.1.0</id>
        <link href="https://chasmical.github.io/RogueLibs/ru/blog/2021/08/18/roguelibs-v3.1.0"/>
        <updated>2021-08-18T00:00:00.000Z</updated>
        <summary type="html"><![CDATA[Completely replaced the vanilla localization system.]]></summary>
        <content type="html"><![CDATA[<p>Today a new version of RogueLibs v3.1.0 was released!</p><p>A brand new localization system will completely replace the vanilla one!</p><ul><li>Fancy, easy-to-use XML files, for each language separately;</li><li>Fixed the bug with "E_" prefixes appearing in random places;</li><li>Custom languages support;</li><li>Community translations;</li><li>Automatic updates;</li><li>Live Reloading!</li></ul><p><img loading="lazy" src="https://i.imgur.com/XaNGCx7.png" alt="Locales opened in VSCode" class="img_ev3q"></p><h3 class="anchor anchor_q0b4 anchorWithHideOnScrollNavbar_emO8" id="upgradingdowngrading-to-xml"><a class="hash-link" href="#upgradingdowngrading-to-xml" title="Прямая ссылка на этот заголовок">​</a> <!-- -->Upgrading/downgrading to XML</h3><p>On one hand, we lose some of th-, I mean, the <strong>one</strong> advantage of CSV files:</p><ul><li><strong>Small size.</strong><br>Not as compact, as physically possible, but still, it has a relatively low data-to-size ratio, close to 1. The only non-data characters are commas, the surrounding quotes, double quotes inside of expressions and new lines.</li></ul><p>But on the other hand, we gain a ton of advantages of XML:</p><ul><li><strong>Easy to read.</strong><br>Humans can open the file in a text editor, and it will automatically highlight the XML syntax.  </li><li><strong>Easy to edit.</strong><br>Modern text editors check for errors in XML, making it almost impossible to corrupt the file.</li><li><strong>Easy to parse.</strong><br>Computers can easily parse XML files with the built-in <code>System.Xml.Serialization</code> (in case of C#). There's no need for any overcomplicated regular expressions used in the game.</li></ul><h3 class="anchor anchor_q0b4 anchorWithHideOnScrollNavbar_emO8" id="categorizing-translations-by-language"><a class="hash-link" href="#categorizing-translations-by-language" title="Прямая ссылка на этот заголовок">​</a> <!-- -->Categorizing translations by language</h3><p>The vanilla game loads all languages at the same time, regardless of what language is selected.</p><p>RogueLibs will load only the ones, that are actually used: the selected one and the fallback one (default: English), that will be used in case an entry is missing in the selected language.</p><p>This loading strategy allows you to select from thousands of different localizations, without loading all of them at the same time.</p><h3 class="anchor anchor_q0b4 anchorWithHideOnScrollNavbar_emO8" id="automatic-updates"><a class="hash-link" href="#automatic-updates" title="Прямая ссылка на этот заголовок">​</a> <!-- -->Automatic updates</h3><p>When you launch the game, RogueLibs will download a small "index" file with some metadata, and then it will decide what translations should be updated. Don't worry, it won't check for updates too frequently, just once every hour.</p><h3 class="anchor anchor_q0b4 anchorWithHideOnScrollNavbar_emO8" id="community-translations"><a class="hash-link" href="#community-translations" title="Прямая ссылка на этот заголовок">​</a> <!-- -->Community translations</h3><p>Speaking of translations... <strong>The vanilla translations are terrible</strong>. I'm not sure what the situation is like with other languages, but russian localization is really bad:</p><ul><li>Some words are taken out of context. "Glass", as in "a glass wall", not as in "a glass of milk".</li><li>"Chunk Pack" was literally translated as a "pack" of "chunks". I'm not sure how to explain that, but it caused quite a lot of comotion in the russian community.</li><li>Some words are not translated at all. "Walkie-Talkie" is still a "Walkie-Talkie". What kind of translator were they even using? Every online translator I could find translated it correctly.</li><li>Some translation lines were shifted a couple of lines up or down, for some reason. As if someone was editing it in Excel.</li><li>There was also a ton of different styles. Sometimes "—" was used instead of "-", "…" instead of "..." and stuff like that. As if there were at least 3 different translators, one using Word, other one - Excel and another one - Notepad.</li><li>"Monkey Barrel" → "Обезьяна баррель". What the f<!-- -->*<!-- -->*<!-- -->*<!-- -->.</li><li>I spent about 2 days, working from morning to night, to fix all of that.</li></ul><p>And that's why RogueLibs will use community translations instead of official ones.</p><p>Feel free to contribute by checking the localization files yourself and making any necessary changes. The localization files are located <a href="https://github.com/Chasmical/RogueLibs/tree/main/RogueLibsCore/Resources" target="_blank" rel="noopener noreferrer">in here</a>. See more info on contributing to the project <a href="https://github.com/Chasmical/RogueLibs/blob/main/.github/CONTRIBUTING.md" target="_blank" rel="noopener noreferrer">here</a>.</p><h3 class="anchor anchor_q0b4 anchorWithHideOnScrollNavbar_emO8" id="live-reloading"><a class="hash-link" href="#live-reloading" title="Прямая ссылка на этот заголовок">​</a> <!-- -->Live Reloading</h3><p>When you edit the localization files, the changes are reflected in the game immediately! Neat!</p>]]></content>
        <author>
            <name>Abbysssal</name>
            <uri>https://github.com/Chasmical</uri>
        </author>
        <category label="roguelibs" term="roguelibs"/>
        <category label="release" term="release"/>
    </entry>
</feed>